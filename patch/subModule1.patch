diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/acme_structure.go ./vancluever/v2.21.0/acme/acme_structure.go
--- ./acme/acme_structure.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/acme_structure.go	2024-04-26 18:07:52.556297833 +0800
@@ -12,6 +12,7 @@
 	"fmt"
 	"time"
 
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/certcrypto"
 	"github.com/go-acme/lego/v4/certificate"
 	"github.com/go-acme/lego/v4/lego"
@@ -20,6 +21,10 @@
 	"software.sslmate.com/src/go-pkcs12"
 )
 
+const (
+	DefaultMaxElapsedTime = 120 * time.Minute
+)
+
 // acmeUser implements acme.User.
 type acmeUser struct {
 
@@ -84,17 +89,32 @@
 		return nil, nil, fmt.Errorf("error getting user data: %s", err.Error())
 	}
 
-	client, err := lego.NewClient(expandACMEClient_config(d, meta, user))
-	if err != nil {
-		return nil, nil, err
-	}
+	var client *lego.Client
 
-	// Populate user's registration resource if needed
-	if loadReg {
-		user.Registration, err = client.Registration.ResolveAccountByKey()
+	newClient := func() error {
+		client, err = lego.NewClient(expandACMEClient_config(d, meta, user))
 		if err != nil {
-			return nil, nil, err
+			return err
 		}
+
+		// Populate user's registration resource if needed
+		if loadReg {
+			user.Registration, err = client.Registration.ResolveAccountByKey()
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(newClient, reconnectBackoff)
+	if err != nil {
+		return nil, nil, err
 	}
 
 	return client, user, nil
@@ -241,8 +261,11 @@
 	cert = pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: cb[0].Raw})
 	certNotAfter = cb[0].NotAfter.Format(time.RFC3339)
 	issuer = make([]byte, 0)
-	for _, ic := range cb[1:] {
+	for i, ic := range cb[1:] {
 		issuer = append(issuer, pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: ic.Raw})...)
+		if i < len(cb)-2 {
+			issuer = append(issuer, '\n')
+		}
 	}
 
 	return
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/certificate_challenges.go ./vancluever/v2.21.0/acme/certificate_challenges.go
--- ./acme/certificate_challenges.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/certificate_challenges.go	2024-04-26 18:07:52.556297833 +0800
@@ -5,6 +5,8 @@
 	"strconv"
 	"time"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/challenge/dns01"
 	"github.com/go-acme/lego/v4/challenge/http01"
@@ -15,7 +17,6 @@
 	"github.com/go-acme/lego/v4/providers/http/webroot"
 	"github.com/hashicorp/go-multierror"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 // setCertificateChallengeProviders sets all of the challenge providers in the
@@ -48,7 +49,20 @@
 			}
 		}
 
-		if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
+		setDns01Provider := func() error {
+			if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setDns01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -61,7 +75,20 @@
 			httpServerProvider.SetProxyHeader(proxyHeader.(string))
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err := backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -75,7 +102,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -89,7 +129,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -103,7 +156,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -113,7 +179,20 @@
 		tlsProvider := tlsalpn01.NewProviderServer(
 			"", strconv.Itoa(provider.([]interface{})[0].(map[string]interface{})["port"].(int)))
 
-		if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
+		setTlsAlpn01Provider := func() error {
+			if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err := backoff.Retry(setTlsAlpn01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/client.go ./vancluever/v2.21.0/acme/dnsplugin/client.go
--- ./acme/dnsplugin/client.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/dnsplugin/client.go	2024-04-26 18:07:52.556297833 +0800
@@ -8,9 +8,9 @@
 	"os/exec"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/hashicorp/go-plugin"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 )
 
 // NewClient creates a new DNS provider instance by dispatching to itself via
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/plugin.go ./vancluever/v2.21.0/acme/dnsplugin/plugin.go
--- ./acme/dnsplugin/plugin.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin.go	2024-04-26 18:07:52.556297833 +0800
@@ -8,10 +8,10 @@
 	"os"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/challenge/dns01"
 	"github.com/hashicorp/go-plugin"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"google.golang.org/grpc"
 	"google.golang.org/protobuf/types/known/durationpb"
 )
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/plugin_test.go ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go
--- ./acme/dnsplugin/plugin_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go	2024-04-26 18:07:52.556297833 +0800
@@ -6,9 +6,9 @@
 	"testing"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/providers/dns/route53"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 )
 
 var _ = challenge.ProviderTimeout((*DnsProviderClient)(nil))
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/errorlist.go ./vancluever/v2.21.0/acme/errorlist.go
--- ./acme/errorlist.go	1970-01-01 07:30:00.000000000 +0730
+++ ./vancluever/v2.21.0/acme/errorlist.go	2024-04-26 18:07:52.564300426 +0800
@@ -0,0 +1,31 @@
+package acme
+
+import "strings"
+
+const (
+	ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newAccount"
+	ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS     = "429 ::HEAD :: https://acme.zerossl.com/v2/DV90/newNonce"
+	ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS = "429 ::GET :: https://acme.zerossl.com/v2/DV90"
+	ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS         = "429 ::POST :: https://acme.zerossl.com/v2/DV90/authz"
+	ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newOrder"
+	ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS       = "429 ::POST :: https://acme.zerossl.com/v2/DV90/account"
+	ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/revokeCert"
+	ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/chall"
+	LETSENCRYPT_ERR_RATE_LIMITED                = "429 :: POST :: https://acme-staging-v02.api.letsencrypt.org/acme/new-acct"
+	ERR_TIME_LIMIT_EXCEEDED                     = "time limit exceeded"
+	ERR_SERVER_NO_RESPONSE                      = "net/http: timeout awaiting response headers"
+)
+
+func isAbleToRetry(errCode string) bool {
+	return strings.Contains(errCode, ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS) ||
+		strings.Contains(errCode, LETSENCRYPT_ERR_RATE_LIMITED) ||
+		strings.Contains(errCode, ERR_TIME_LIMIT_EXCEEDED) ||
+		strings.Contains(errCode, ERR_SERVER_NO_RESPONSE)
+}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/provider_test.go ./vancluever/v2.21.0/acme/provider_test.go
--- ./acme/provider_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/provider_test.go	2024-04-26 18:07:52.556297833 +0800
@@ -12,9 +12,9 @@
 	"path/filepath"
 	"testing"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 func testAccProviderAcme() *schema.Provider {
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/resource_acme_certificate.go ./vancluever/v2.21.0/acme/resource_acme_certificate.go
--- ./acme/resource_acme_certificate.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/resource_acme_certificate.go	2024-04-26 18:07:52.556297833 +0800
@@ -7,6 +7,7 @@
 	"log"
 	"time"
 
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/acme"
 	"github.com/go-acme/lego/v4/certificate"
 	"github.com/go-acme/lego/v4/challenge/dns01"
@@ -271,6 +272,12 @@
 				ValidateFunc: validateRevocationReason,
 			},
 		},
+		Timeouts: &schema.ResourceTimeout{
+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
+		},
 	}
 }
 
@@ -306,11 +313,28 @@
 		if err != nil {
 			return err
 		}
-		cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
-			CSR:            csr,
-			Bundle:         true,
-			PreferredChain: d.Get("preferred_chain").(string),
-		})
+
+		obtainCertCSR := func() error {
+			cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
+				CSR:            csr,
+				Bundle:         true,
+				PreferredChain: d.Get("preferred_chain").(string),
+			})
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(obtainCertCSR, reconnectBackoff)
+		if err != nil {
+			return err
+		}
 	} else {
 		cn := d.Get("common_name").(string)
 		domains := []string{cn}
@@ -322,12 +346,28 @@
 			}
 		}
 
-		cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
-			Domains:        domains,
-			Bundle:         true,
-			MustStaple:     d.Get("must_staple").(bool),
-			PreferredChain: d.Get("preferred_chain").(string),
-		})
+		obtainCert := func() error {
+			cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
+				Domains:        domains,
+				Bundle:         true,
+				MustStaple:     d.Get("must_staple").(bool),
+				PreferredChain: d.Get("preferred_chain").(string),
+			})
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(obtainCert, reconnectBackoff)
+		if err != nil {
+			return err
+		}
 	}
 
 	if err != nil {
@@ -354,7 +394,21 @@
 			return err
 		}
 
-		srcCR, err := client.Certificate.Get(d.Get("certificate_url").(string), true)
+		var srcCR *certificate.Resource
+		getCert := func() error {
+			srcCR, err = client.Certificate.Get(d.Get("certificate_url").(string), true)
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(getCert, reconnectBackoff)
 		if err != nil {
 			// There are probably some cases that we will want to just drop
 			// the resource if there's been an issue, but seeing as this is
@@ -454,7 +508,21 @@
 		return err
 	}
 
-	newCert, err := client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
+	var newCert *certificate.Resource
+	renewCert := func() error {
+		newCert, err = client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(renewCert, reconnectBackoff)
 	if err != nil {
 		return err
 	}
@@ -487,17 +555,43 @@
 	}
 
 	if remaining >= 0 {
-		maybeReason, ok := d.GetOk("revoke_certificate_reason")
-		if ok {
-			reason := RevocationReason(maybeReason.(string))
-			reasonNum, err := GetRevocationReason(reason)
-			if err != nil {
-				return err
+		revokeCert := func() error {
+			maybeReason, ok := d.GetOk("revoke_certificate_reason")
+			if ok {
+				reason := RevocationReason(maybeReason.(string))
+				reasonNum, err := GetRevocationReason(reason)
+				if err != nil {
+					return err
+				}
+				if err = client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum); err != nil {
+					if isAbleToRetry(err.Error()) {
+						return err
+					} else {
+						return backoff.Permanent(err)
+					}
+
+				}
+				return nil
 			}
-			return client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum)
+
+			if err = client.Certificate.Revoke(cert.Certificate); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(revokeCert, reconnectBackoff)
+		if err != nil {
+			return err
 		}
-		return client.Certificate.Revoke(cert.Certificate)
 	}
+
 	return nil
 }
 
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/resource_acme_registration.go ./vancluever/v2.21.0/acme/resource_acme_registration.go
--- ./acme/resource_acme_registration.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/acme/resource_acme_registration.go	2024-04-26 18:07:52.556297833 +0800
@@ -1,6 +1,7 @@
 package acme
 
 import (
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/acme"
 	"github.com/go-acme/lego/v4/registration"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
@@ -57,6 +58,12 @@
 				Computed: true,
 			},
 		},
+		Timeouts: &schema.ResourceTimeout{
+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
+		},
 	}
 }
 
@@ -69,24 +76,34 @@
 
 	var reg *registration.Resource
 	// If EAB was enabled, register using EAB.
-	if v, ok := d.GetOk("external_account_binding"); ok {
-		reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
-			TermsOfServiceAgreed: true,
-			Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
-			HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
-		})
-	} else {
-		// Normal registration.
-		reg, err = client.Registration.Register(registration.RegisterOptions{
-			TermsOfServiceAgreed: true,
-		})
-	}
-
-	if err != nil {
-		return err
+	registerAccount := func() error {
+		if v, ok := d.GetOk("external_account_binding"); ok {
+			reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
+				TermsOfServiceAgreed: true,
+				Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
+				HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
+			})
+		} else {
+			// Normal registration.
+			reg, err = client.Registration.Register(registration.RegisterOptions{
+				TermsOfServiceAgreed: true,
+			})
+		}
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
 	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(registerAccount, reconnectBackoff)
 
 	_, user, err := expandACMEClient(d, meta, true)
+
 	if err != nil {
 		return err
 	}
@@ -117,7 +134,25 @@
 		return err
 	}
 
-	return client.Registration.DeleteRegistration()
+	deleteRegistration := func() error {
+		err := client.Registration.DeleteRegistration()
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(deleteRegistration, reconnectBackoff)
+	if err != nil {
+		return err
+	}
+
+	return nil
 }
 
 func regGone(err error) bool {
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/bindata.go ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go
--- ./build-support/generate-dns-providers/bindata.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,299 +0,0 @@
-// Code generated by go-bindata. DO NOT EDIT.
-// sources:
-// templates/dns-provider-doc-template.tmpl (2.14kB)
-// templates/dns-provider-go-template.tmpl (836B)
-
-package main
-
-import (
-	"bytes"
-	"compress/gzip"
-	"crypto/sha256"
-	"fmt"
-	"io"
-	"io/ioutil"
-	"os"
-	"path/filepath"
-	"strings"
-	"time"
-)
-
-func bindataRead(data []byte, name string) ([]byte, error) {
-	gz, err := gzip.NewReader(bytes.NewBuffer(data))
-	if err != nil {
-		return nil, fmt.Errorf("read %q: %w", name, err)
-	}
-
-	var buf bytes.Buffer
-	_, err = io.Copy(&buf, gz)
-	clErr := gz.Close()
-
-	if err != nil {
-		return nil, fmt.Errorf("read %q: %w", name, err)
-	}
-	if clErr != nil {
-		return nil, err
-	}
-
-	return buf.Bytes(), nil
-}
-
-type asset struct {
-	bytes  []byte
-	info   os.FileInfo
-	digest [sha256.Size]byte
-}
-
-type bindataFileInfo struct {
-	name    string
-	size    int64
-	mode    os.FileMode
-	modTime time.Time
-}
-
-func (fi bindataFileInfo) Name() string {
-	return fi.name
-}
-func (fi bindataFileInfo) Size() int64 {
-	return fi.size
-}
-func (fi bindataFileInfo) Mode() os.FileMode {
-	return fi.mode
-}
-func (fi bindataFileInfo) ModTime() time.Time {
-	return fi.modTime
-}
-func (fi bindataFileInfo) IsDir() bool {
-	return false
-}
-func (fi bindataFileInfo) Sys() interface{} {
-	return nil
-}
-
-var _templatesDnsProviderDocTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5d\x6b\xdb\x48\x14\x7d\x9f\x5f\x71\x70\x02\xdb\x1a\x4b\x7e\x37\x74\xc1\x78\x53\x08\x74\x4b\x68\xba\xfb\x62\x4c\x34\x96\xae\xa4\x21\xa3\x19\x31\x33\x72\x6a\x84\xfe\xfb\x72\xe5\x58\x8a\xbc\x8b\x1b\x16\xfa\x64\x4b\x77\xee\xc7\x39\xf7\x9c\x51\x14\x45\xa2\x96\x05\x3d\x05\x15\x34\xad\x30\x6b\xdb\x78\x63\x33\xea\xba\x99\xf0\xcd\x3e\x95\x81\x0a\xeb\x8e\x2b\xcc\xfe\xf8\xfa\x88\x07\x67\x0f\x2a\x23\xe7\x67\x82\x13\x45\xf4\x3b\xbe\x97\x84\xdc\x6a\x6d\x5f\x94\x29\x90\xd9\xb4\xa9\xc8\x04\x19\x94\x35\x50\x1e\xb2\x09\x36\x2a\xc8\x90\x93\x81\x32\xe4\xce\x56\x08\x25\x61\xbd\xf9\xf3\x4e\xd4\xaf\xe5\x7e\xf3\x58\x3f\xdc\x43\xab\xbd\x93\xee\x88\xad\xa6\xc2\xee\x3e\x94\x21\xd4\x7e\xb5\x5c\x16\x36\x92\x69\x45\x71\xa1\x42\xd9\xec\x63\x65\x97\x1c\x5f\x7e\x8c\x81\x47\x5b\x91\xf0\x94\x72\x37\x8f\x4a\x1e\xe1\x28\x27\x87\x60\xc1\x67\x90\x29\x47\x69\xd0\x47\x44\x50\x06\x95\xf5\x01\xa9\xf4\xe4\x17\x3c\x83\x27\x9c\x53\x85\xac\x6b\x7d\xe4\x34\x9e\xed\x3b\x39\x27\x73\xeb\x2a\x9c\x07\x84\xf4\x78\x21\xad\x63\x21\x6e\xd0\xb6\xf1\x57\x59\x51\xd7\x81\x29\xd9\x94\x52\x6b\x32\x05\x0d\xe4\x08\xc1\x9c\x24\x03\x91\x49\x7f\x2e\x1d\xce\x0d\x45\x53\x69\xb0\x27\x34\x9e\x32\x6e\x5d\x93\xeb\x9b\x4e\x4e\x7b\xe4\xd6\x09\x9e\x6a\x9b\x30\x0b\x4f\x29\xb9\xa0\x72\xc5\x8b\x49\x76\x5b\x47\xde\x36\x2e\xa5\x9e\xa1\xe8\x4d\x6c\x87\x73\x08\x2f\x2a\x94\xa2\x6d\x55\x8e\xf8\xaf\x6f\x5f\xba\x6e\x3b\x00\xd8\x7d\x68\xdb\xd3\xbb\x8f\x6d\x4b\xda\x53\xd7\x0d\xb1\xb6\x8d\x40\x26\xeb\xba\x58\x88\x2b\x6d\x56\x88\xe3\xe5\x39\xec\x97\x6f\x42\x71\x95\x09\xf1\xd9\x3a\xa4\xb6\xaa\x35\x05\x82\x32\x8c\xef\x24\x0d\x6b\x50\xda\x17\x86\xdd\x78\x42\x28\x95\x1f\x79\xe1\x81\xfb\x45\x4c\x10\x33\x60\x71\xee\xb4\x80\x27\xc2\xb6\x24\x47\x57\x48\x88\x32\xe3\xa3\x91\xca\xdd\x55\x28\x97\x87\xaf\x22\xbb\x69\xbc\x32\xc5\x45\x8a\x10\x37\x37\xb8\xfb\x21\x19\xae\x10\x49\x92\x94\xa9\x1e\x26\xc6\xec\x72\x7d\x33\xcc\x26\x4f\xad\x00\xe2\x38\x16\x02\xc8\x8c\x7f\x1a\x05\xc3\x01\x8c\xf4\x7c\x9a\x98\x14\xe8\x44\xc7\xcd\x84\xe0\x95\xf1\x96\x37\xd6\xe4\xaa\x68\x5c\xcf\x74\xfc\xe0\xc8\x93\x09\x5d\xc7\xd3\xad\x5d\xd1\xfb\x13\xdf\xd8\x27\x64\x52\x3a\xa9\x75\x74\xb0\x7c\x3d\xe1\xcf\xf2\x24\x15\x4a\x72\xa8\xa5\x67\x9d\x4a\x0f\x32\x07\xe5\xac\xe9\xcb\x1c\xa4\x53\x72\xaf\xd9\x51\xd6\x89\xc1\x6e\xa1\x74\xb6\x29\x5e\x97\x98\xf6\xe3\x24\xd8\x6b\x9b\x3e\xb3\x0f\x43\x49\x62\x9b\x4c\x30\x5e\x93\xf2\x94\xe5\x48\xba\x62\x37\x4c\x39\x96\xfb\x7f\xe6\x88\xc1\x0a\xad\xac\x23\x64\x14\xa4\xd2\xbe\x57\x96\xf8\x85\xca\xea\x01\x5c\x17\xd7\x84\x1a\x21\xee\x0d\x64\x96\x29\xde\xe6\xe2\x62\x3f\x52\x7b\xcb\x4b\xf2\xc1\x3a\xca\x98\x0d\x09\x6d\x53\xa9\x91\x2b\x4d\x8b\xd1\x4a\xb5\x0c\xa5\xf0\x4d\x5d\x6b\x45\x19\xf6\x47\xf4\xff\x8f\xbc\x71\x0e\x0f\x7c\x8e\xde\x7b\xfa\x7c\xff\xe5\x2e\x81\x6f\xf2\x5c\xfd\x88\xf1\x38\xb2\xf2\x2f\x7c\xdc\x8b\x61\x45\x74\x12\xff\x8e\x2f\xad\x13\xab\x6f\x3c\xcf\x1c\xfd\x3c\xf5\x3d\xb6\x3b\xab\xae\xcf\xf6\x51\x6e\x5d\x74\x76\x47\x34\xf0\x23\xda\xd6\x49\xb6\xcf\xed\xf3\x02\xb7\x07\xac\x3e\x5d\x3a\x63\xe3\x28\x23\x13\x94\xd4\xbe\xeb\xc4\x9c\xaf\xec\xdb\x67\xbe\xaf\x23\xb4\xed\xed\x81\xaf\xbe\xe1\x16\xfc\x79\xb5\xf5\xeb\x8a\xa4\x7e\x4f\x31\xf6\xe9\x9d\x39\xfc\x2d\xdd\x5a\x2b\xfe\x24\x75\xdd\x85\x11\x07\x6b\x41\x3a\xc2\x7c\x3e\x7c\x95\x22\x5f\x53\xca\x9c\xcc\xe7\x90\xa7\xe4\x9e\xef\x7e\x8f\x7b\x7b\x20\x91\xbe\x1d\x0c\x07\xa9\x1b\xf2\x2b\xf1\x5f\x10\x2e\x47\x98\xcc\xdd\x17\xef\x4b\x27\x27\x08\xc9\x14\xc3\xf9\x77\x7c\x33\x25\xe1\x9f\x00\x00\x00\xff\xff\x70\x43\x0a\xc4\x5c\x08\x00\x00")
-
-func templatesDnsProviderDocTemplateTmplBytes() ([]byte, error) {
-	return bindataRead(
-		_templatesDnsProviderDocTemplateTmpl,
-		"templates/dns-provider-doc-template.tmpl",
-	)
-}
-
-func templatesDnsProviderDocTemplateTmpl() (*asset, error) {
-	bytes, err := templatesDnsProviderDocTemplateTmplBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "templates/dns-provider-doc-template.tmpl", size: 2140, mode: os.FileMode(0644), modTime: time.Unix(1617333386, 0)}
-	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x5b, 0xcd, 0xe4, 0x4f, 0x37, 0x50, 0x30, 0xa6, 0x59, 0xd6, 0xf7, 0xdc, 0xe, 0x7e, 0x58, 0x5d, 0x3a, 0x51, 0x2, 0xf0, 0x33, 0x20, 0xee, 0x77, 0x45, 0xa7, 0xff, 0x31, 0xb8, 0x4c, 0xbd}}
-	return a, nil
-}
-
-var _templatesDnsProviderGoTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\xfa\x14\xd3\x10\x68\x02\x59\xf9\xbe\x90\x43\xd8\x64\x7b\x6a\x08\x2c\xe4\x52\x7a\x98\xb5\xc6\x8e\xb0\x32\x12\x92\xec\x12\x8c\xbe\x7b\x91\x13\xbb\xe9\x9f\x94\x3d\xd9\x33\xd2\xbc\xf7\x7b\xf6\x14\x05\x6c\xda\x68\x9f\x6a\x62\xf2\x18\x49\x41\xa5\x0d\x49\xd8\x5a\x60\x1b\x81\x94\x8e\x52\x38\x2c\x1b\xac\x09\x14\x07\x67\xda\x5a\xb3\x10\xfa\xec\xac\x8f\xb0\x10\xb3\xbe\x9f\xcb\x43\x53\x1f\x30\x9e\x52\x2a\xca\x13\x1a\x43\x5c\xd3\x4c\xf4\xfd\x13\x78\xe4\x9a\x40\x1e\xbc\xed\xb4\x22\x1f\x52\xfa\x73\xc0\x8d\x47\x85\xe2\x50\xf4\xbd\xfc\x62\x0f\x4d\x9d\xd2\x75\x9e\x58\xa5\x24\x96\x42\x14\x45\x76\x1f\x75\x5e\xb1\x8c\xd6\x5f\x5e\x5b\x2e\x41\x07\x40\xa8\x5a\x2e\xa3\xb6\x0c\xf1\x84\x11\x4a\x34\x26\x77\x47\xed\xcf\x21\xcf\x97\x96\x43\xf4\x6d\x9e\x04\x64\x05\x9e\x62\xeb\x39\x40\x3c\xd1\x74\x13\x34\x47\xf2\x15\x96\x24\x45\xbc\x38\x7a\x64\x9a\xfd\x16\x4b\x58\x4c\x71\xa7\x88\x2b\x20\xef\xad\x7f\x84\x7c\xc3\xbd\x15\x55\x46\x31\x06\x6c\x35\x50\x74\x68\xb4\x82\xed\xfe\x6d\xe2\x19\xc0\x43\xeb\xf2\xc7\x26\x05\xef\x17\xd8\xbc\x7c\xdd\x4d\xc7\x52\x74\xe8\xff\xe5\xb2\x86\x33\xba\x6f\x21\x7a\xcd\xf5\xf7\x07\x19\xfa\xff\xfc\x21\xf9\x62\x15\xa5\x34\x7b\xfe\x40\xd2\x9b\x90\xae\x40\xee\xb8\x3b\xa2\xdf\x18\x8d\x81\xb2\xd2\x19\xdd\x8e\x3b\xed\x2d\x9f\x89\xe3\x11\xbd\xc6\x77\x43\x47\x34\x2d\x85\xc5\x1d\xe1\xf5\x71\x0f\x34\x6f\x56\x30\xef\xe0\x79\xfd\xb7\x68\x5e\xa0\x66\x60\xcb\x6f\x5d\x4a\xb3\xd5\xdd\xae\xa4\xe5\x5d\xe1\x06\xc6\xac\xf2\x6b\xb1\xe4\x9e\x7e\x6c\xf7\x6f\x63\x8a\xc5\x52\xe8\x6a\xb8\xf5\x69\x0d\xac\x0d\xf4\xe2\xba\x18\xb9\x18\xc6\x45\x12\x63\xcb\xad\x72\x57\xa4\xdf\x0c\xc5\xcf\x00\x00\x00\xff\xff\xfb\x91\x9c\xf9\x44\x03\x00\x00")
-
-func templatesDnsProviderGoTemplateTmplBytes() ([]byte, error) {
-	return bindataRead(
-		_templatesDnsProviderGoTemplateTmpl,
-		"templates/dns-provider-go-template.tmpl",
-	)
-}
-
-func templatesDnsProviderGoTemplateTmpl() (*asset, error) {
-	bytes, err := templatesDnsProviderGoTemplateTmplBytes()
-	if err != nil {
-		return nil, err
-	}
-
-	info := bindataFileInfo{name: "templates/dns-provider-go-template.tmpl", size: 836, mode: os.FileMode(0644), modTime: time.Unix(1675544429, 0)}
-	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0xaa, 0x46, 0x47, 0x53, 0x35, 0x17, 0x78, 0x2a, 0xea, 0x14, 0x20, 0xac, 0xc3, 0xe2, 0x4c, 0x3e, 0xad, 0x57, 0xe1, 0xac, 0xfa, 0x26, 0xa7, 0xa5, 0x5e, 0x5b, 0x28, 0x7a, 0x67, 0x14, 0xb6}}
-	return a, nil
-}
-
-// Asset loads and returns the asset for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func Asset(name string) ([]byte, error) {
-	canonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[canonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
-		}
-		return a.bytes, nil
-	}
-	return nil, fmt.Errorf("Asset %s not found", name)
-}
-
-// AssetString returns the asset contents as a string (instead of a []byte).
-func AssetString(name string) (string, error) {
-	data, err := Asset(name)
-	return string(data), err
-}
-
-// MustAsset is like Asset but panics when Asset would return an error.
-// It simplifies safe initialization of global variables.
-func MustAsset(name string) []byte {
-	a, err := Asset(name)
-	if err != nil {
-		panic("asset: Asset(" + name + "): " + err.Error())
-	}
-
-	return a
-}
-
-// MustAssetString is like AssetString but panics when Asset would return an
-// error. It simplifies safe initialization of global variables.
-func MustAssetString(name string) string {
-	return string(MustAsset(name))
-}
-
-// AssetInfo loads and returns the asset info for the given name.
-// It returns an error if the asset could not be found or
-// could not be loaded.
-func AssetInfo(name string) (os.FileInfo, error) {
-	canonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[canonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
-		}
-		return a.info, nil
-	}
-	return nil, fmt.Errorf("AssetInfo %s not found", name)
-}
-
-// AssetDigest returns the digest of the file with the given name. It returns an
-// error if the asset could not be found or the digest could not be loaded.
-func AssetDigest(name string) ([sha256.Size]byte, error) {
-	canonicalName := strings.Replace(name, "\\", "/", -1)
-	if f, ok := _bindata[canonicalName]; ok {
-		a, err := f()
-		if err != nil {
-			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
-		}
-		return a.digest, nil
-	}
-	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
-}
-
-// Digests returns a map of all known files and their checksums.
-func Digests() (map[string][sha256.Size]byte, error) {
-	mp := make(map[string][sha256.Size]byte, len(_bindata))
-	for name := range _bindata {
-		a, err := _bindata[name]()
-		if err != nil {
-			return nil, err
-		}
-		mp[name] = a.digest
-	}
-	return mp, nil
-}
-
-// AssetNames returns the names of the assets.
-func AssetNames() []string {
-	names := make([]string, 0, len(_bindata))
-	for name := range _bindata {
-		names = append(names, name)
-	}
-	return names
-}
-
-// _bindata is a table, holding each asset generator, mapped to its name.
-var _bindata = map[string]func() (*asset, error){
-	"templates/dns-provider-doc-template.tmpl": templatesDnsProviderDocTemplateTmpl,
-	"templates/dns-provider-go-template.tmpl":  templatesDnsProviderGoTemplateTmpl,
-}
-
-// AssetDebug is true if the assets were built with the debug flag enabled.
-const AssetDebug = false
-
-// AssetDir returns the file names below a certain
-// directory embedded in the file by go-bindata.
-// For example if you run go-bindata on data/... and data contains the
-// following hierarchy:
-//     data/
-//       foo.txt
-//       img/
-//         a.png
-//         b.png
-// then AssetDir("data") would return []string{"foo.txt", "img"},
-// AssetDir("data/img") would return []string{"a.png", "b.png"},
-// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
-// AssetDir("") will return []string{"data"}.
-func AssetDir(name string) ([]string, error) {
-	node := _bintree
-	if len(name) != 0 {
-		canonicalName := strings.Replace(name, "\\", "/", -1)
-		pathList := strings.Split(canonicalName, "/")
-		for _, p := range pathList {
-			node = node.Children[p]
-			if node == nil {
-				return nil, fmt.Errorf("Asset %s not found", name)
-			}
-		}
-	}
-	if node.Func != nil {
-		return nil, fmt.Errorf("Asset %s not found", name)
-	}
-	rv := make([]string, 0, len(node.Children))
-	for childName := range node.Children {
-		rv = append(rv, childName)
-	}
-	return rv, nil
-}
-
-type bintree struct {
-	Func     func() (*asset, error)
-	Children map[string]*bintree
-}
-
-var _bintree = &bintree{nil, map[string]*bintree{
-	"templates": {nil, map[string]*bintree{
-		"dns-provider-doc-template.tmpl": {templatesDnsProviderDocTemplateTmpl, map[string]*bintree{}},
-		"dns-provider-go-template.tmpl": {templatesDnsProviderGoTemplateTmpl, map[string]*bintree{}},
-	}},
-}}
-
-// RestoreAsset restores an asset under the given directory.
-func RestoreAsset(dir, name string) error {
-	data, err := Asset(name)
-	if err != nil {
-		return err
-	}
-	info, err := AssetInfo(name)
-	if err != nil {
-		return err
-	}
-	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
-	if err != nil {
-		return err
-	}
-	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
-	if err != nil {
-		return err
-	}
-	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
-}
-
-// RestoreAssets restores an asset under the given directory recursively.
-func RestoreAssets(dir, name string) error {
-	children, err := AssetDir(name)
-	// File
-	if err != nil {
-		return RestoreAsset(dir, name)
-	}
-	// Dir
-	for _, child := range children {
-		err = RestoreAssets(dir, filepath.Join(name, child))
-		if err != nil {
-			return err
-		}
-	}
-	return nil
-}
-
-func _filePath(dir, name string) string {
-	canonicalName := strings.Replace(name, "\\", "/", -1)
-	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/main.go ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go
--- ./build-support/generate-dns-providers/main.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,284 +0,0 @@
-//go:generate go-bindata ./templates
-package main
-
-import (
-	"bytes"
-	"encoding/json"
-	"log"
-	"os"
-	"os/exec"
-	"path/filepath"
-	"strings"
-	"text/template"
-
-	"github.com/BurntSushi/toml"
-)
-
-// envVarAliases are Terraform-specific environment variables for
-// specific providers.
-var envVarAliases = map[string]map[string]string{
-	"azure": {
-		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
-		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
-		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
-		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
-		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
-	},
-	"azuredns": {
-		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
-		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
-		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
-		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
-		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
-	},
-}
-
-// providerURLs is a list of providers to override provider pages
-// for. Usually this is just used to provide blank links for
-// anything that would normally just link back to the provider page
-// in lego.
-var providerURLs = map[string]string{
-	"exec":    "",
-	"httpreq": "",
-}
-
-// dnsProviderGoTemplate is the template for
-// dnsProviderGoTemplateText.
-var dnsProviderGoTemplate = template.Must(
-	template.New("dns-provider-go-template").Parse(string(MustAsset("templates/dns-provider-go-template.tmpl"))),
-)
-
-// dnsProviderDocTemplate is the template for DNS provider
-// documentation.
-var dnsProviderDocTemplate = template.Must(
-	template.New("dns-provider-doc-template").Parse(string(MustAsset("templates/dns-provider-doc-template.tmpl"))),
-)
-
-// legoPkgPath is the root lego package path to use.
-const legoPkgPath = "github.com/go-acme/lego/v4"
-
-// Type from "go help mod edit"
-type pkgInfoGoMod struct {
-	Module  pkgInfoModule
-	Go      string
-	Require []pkgInfoRequire
-	Exclude []pkgInfoModule
-	Replace []pkgInfoReplace
-}
-
-// Type from "go help mod edit"
-type pkgInfoModule struct {
-	Path    string
-	Version string
-}
-
-// Type from "go help mod edit"
-type pkgInfoRequire struct {
-	Path     string
-	Version  string
-	Indirect bool
-}
-
-// Type from "go help mod edit"
-type pkgInfoReplace struct {
-	Old pkgInfoModule
-	New pkgInfoModule
-}
-
-type dnsProviderInfo struct {
-	Name          string
-	URL           string
-	Code          string
-	GoPkg         string
-	Additional    string
-	Configuration dnsProviderConfig
-	EnvVarAliases map[string]string
-}
-
-type dnsProviderConfig struct {
-	Credentials map[string]string
-	Additional  map[string]string
-}
-
-func (c dnsProviderConfig) Present() bool {
-	return len(c.Credentials) > 0 || len(c.Additional) > 0
-}
-
-// execCommand is a exec.Cmd builder that just sets the error stream
-// to stderr.
-func execCommand(cmd string, args ...string) *exec.Cmd {
-	c := exec.Command(cmd, args...)
-	c.Stderr = os.Stderr
-	return c
-}
-
-// loadProviders loads all of the provider information from the
-// provider TOML files.
-func loadProviders() []dnsProviderInfo {
-	out, err := execCommand("go", "mod", "edit", "-json").Output()
-	if err != nil {
-		log.Fatal(err)
-	}
-
-	var info pkgInfoGoMod
-	if err := json.Unmarshal(out, &info); err != nil {
-		log.Fatal(err)
-	}
-
-	var version string
-	for _, req := range info.Require {
-		if req.Path == legoPkgPath {
-			version = req.Version
-			break
-		}
-	}
-
-	if version == "" {
-		log.Fatalf("package %q not found in go.mod, cannot get version", legoPkgPath)
-	}
-
-	out, err = execCommand("go", "env", "GOPATH").Output()
-	if err != nil {
-		log.Fatal(err)
-	}
-
-	pkgDir := filepath.Join(
-		strings.TrimSpace(string(out)), "pkg", "mod", strings.ReplaceAll(legoPkgPath, "/", string(os.PathSeparator))+"@"+version)
-
-	// Check to see if this is actually a directory, in case it's not
-	// in the cache.
-	fi, err := os.Stat(pkgDir)
-	if err != nil {
-		if os.IsNotExist(err) {
-			err := execCommand("go", "mod", "download", legoPkgPath+"@"+version).Run()
-			if err != nil {
-				log.Fatal(err)
-			}
-
-			// Get fileinfo again and fail 100% if still error
-			fi, err = os.Stat(pkgDir)
-			if err != nil {
-				log.Fatal(err)
-			}
-		} else {
-			log.Fatal(err)
-		}
-	}
-
-	if !fi.Mode().IsDir() {
-		log.Fatalf("not a directory: %q", pkgDir)
-	}
-
-	// Start loading in the TOML files
-	var result []dnsProviderInfo
-	rootDir := filepath.Join(pkgDir, "providers", "dns")
-	if err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {
-		if err != nil {
-			return err
-		}
-
-		if filepath.Ext(path) != ".toml" {
-			return nil
-		}
-
-		var p dnsProviderInfo
-		_, err = toml.DecodeFile(path, &p)
-		if err != nil {
-			return err
-		}
-
-		// We work off of Go packages to find the metadata, but some
-		// packages have different codes (ie: acme-dns for acmedns in Go)
-		// so we need to save the provider as the package name.
-		p.GoPkg, err = filepath.Rel(rootDir, filepath.Dir(path))
-		if err != nil {
-			return err
-		}
-
-		// Environment variable aliases if we have them (ie: azure)
-		if aliases, ok := envVarAliases[p.Code]; ok {
-			p.EnvVarAliases = aliases
-		}
-
-		// Check for a provider URL override
-		if url, ok := providerURLs[p.Code]; ok {
-			p.URL = url
-		}
-
-		// A couple of docs have hugo template artifacts that could use
-		// stripping, just do this for "notice" for now which seems to be
-		// the only one that's in use.
-		p.Additional = strings.ReplaceAll(
-			p.Additional, "{{% notice note %}}\n", "-> **NOTE**: ")
-		p.Additional = strings.ReplaceAll(
-			p.Additional, "{{% /notice %}}\n", "")
-
-		result = append(result, p)
-		return nil
-	}); err != nil {
-		log.Fatal(err)
-	}
-
-	return result
-}
-
-// generateGo generates the factory template file.
-func generateGo(providers []dnsProviderInfo) {
-	b := new(bytes.Buffer)
-	if err := dnsProviderGoTemplate.Execute(b, struct {
-		PkgPath   string
-		Providers []dnsProviderInfo
-	}{
-		PkgPath:   legoPkgPath,
-		Providers: providers,
-	}); err != nil {
-		log.Fatal(err)
-	}
-
-	cmd := execCommand("gofmt")
-	cmd.Stdin = b
-	out, err := cmd.Output()
-	if err != nil {
-		log.Fatal(err)
-	}
-
-	if err := os.WriteFile(os.Args[2], out, 0666); err != nil {
-		log.Fatal(err)
-	}
-}
-
-// generateProviderDocs generates each of the provider documentation
-// pages.
-func generateProviderDocs(providers []dnsProviderInfo) {
-	for _, provider := range providers {
-		b := new(bytes.Buffer)
-		if err := dnsProviderDocTemplate.Execute(b, provider); err != nil {
-			log.Fatal(err)
-		}
-
-		path := filepath.Join(os.Args[2], "dns-providers-"+provider.Code+".md")
-		if err := os.WriteFile(path, b.Bytes(), 0666); err != nil {
-			log.Fatal(err)
-		}
-
-		log.Println("wrote", provider.Code, "documentation to:", path)
-	}
-}
-
-func main() {
-	if len(os.Args) < 3 {
-		log.Fatal("usage: generate-dns-providers [go | doc ] PATH")
-	}
-
-	providers := loadProviders()
-	switch os.Args[1] {
-	case "go":
-		generateGo(providers)
-
-	case "doc":
-		generateProviderDocs(providers)
-
-	default:
-		log.Fatal("usage: generate-dns-providers [go | doc] PATH")
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl
--- ./build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	1970-01-01 07:30:00.000000000 +0730
@@ -1,67 +0,0 @@
----
-page_title: "{{.Code}}"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# {{.Name}} DNS Challenge Provider
-
-The `{{.Code}}` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-{{if .URL}}[{{.Name}}]({{.URL}}){{else}}{{.Name}}{{- end}}.
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "{{.Code}}"
-  }
-}
-```
-
-{{- if .Configuration.Present}}
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-{{range $k, $v := .Configuration.Credentials}}
-* `{{$k}}` - {{$v}}.
-{{- end}}
-{{range $k, $v := .Configuration.Additional}}
-* `{{$k}}` - {{$v}}.
-{{- end}}
-{{if .EnvVarAliases}}
-The following variables are **Terraform-specific** aliases for the above
-configuration values:
-
-{{range $k, $v := .EnvVarAliases}}
-* `{{$k}}` - alias for `{{$v}}`.
-{{- end}}
-{{end}}
-{{- end}}
-{{.Additional}}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl
--- ./build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	1970-01-01 07:30:00.000000000 +0730
@@ -1,35 +0,0 @@
-// Auto-generated file. Do not edit.
-package dnsplugin
-
-import (
-"{{$.PkgPath}}/challenge"
-{{- range .Providers}}
-"{{$.PkgPath}}/providers/dns/{{.GoPkg}}"
-{{- end}}
-)
-
-// dnsProviderFactoryFunc is a function that calls a provider's
-// constructor and returns the provider interface.
-type dnsProviderFactoryFunc func() (challenge.Provider, error)
-
-// dnsProviderFactory is a factory for all of the valid DNS providers
-// supported by ACME provider.
-var dnsProviderFactory = map[string]dnsProviderFactoryFunc {
-{{- range .Providers}}
-"{{.Code}}": func() (challenge.Provider, error) {
-{{- if .EnvVarAliases}}
-mapEnvironmentVariableValues(map[string]string{
-{{- range $k, $v := .EnvVarAliases}}
-"{{$k}}": "{{$v}}",
-{{- end}}
-})
-{{- end}}
-p, err := {{.GoPkg}}.NewDNSProvider()
-if err != nil {
-return nil, err
-}
-
-return p, nil
-},
-{{- end}}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/go-version-for-workflow/main.go ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go
--- ./build-support/go-version-for-workflow/main.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,16 +0,0 @@
-package main
-
-import (
-	"fmt"
-	"runtime"
-	"strings"
-)
-
-func main() {
-	versionStr := strings.TrimPrefix(runtime.Version(), "go")
-	if len(strings.Split(versionStr, ".")) == 2 {
-		versionStr += ".0"
-	}
-
-	fmt.Println(versionStr)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/pebblecfg/basic.json ./vancluever/v2.21.0/build-support/pebblecfg/basic.json
--- ./build-support/pebblecfg/basic.json	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/pebblecfg/basic.json	1970-01-01 07:30:00.000000000 +0730
@@ -1,12 +0,0 @@
-{
-  "pebble": {
-    "listenAddress": "0.0.0.0:14000",
-    "managementListenAddress": "0.0.0.0:15000",
-    "certificate": "test/certs/localhost/cert.pem",
-    "privateKey": "test/certs/localhost/key.pem",
-    "httpPort": 5002,
-    "tlsPort": 5001,
-    "ocspResponderURL": "",
-    "externalAccountBindingRequired": false
-  }
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/pebblecfg/eab.json ./vancluever/v2.21.0/build-support/pebblecfg/eab.json
--- ./build-support/pebblecfg/eab.json	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/pebblecfg/eab.json	1970-01-01 07:30:00.000000000 +0730
@@ -1,16 +0,0 @@
-{
-  "pebble": {
-    "listenAddress": "0.0.0.0:14001",
-    "managementListenAddress": "0.0.0.0:15001",
-    "certificate": "test/certs/localhost/cert.pem",
-    "privateKey": "test/certs/localhost/key.pem",
-    "httpPort": 6002,
-    "tlsPort": 6001,
-    "ocspResponderURL": "",
-    "externalAccountBindingRequired": true,
-    "externalAccountMACKeys": {
-      "kid-1": "zWNDZM6eQGHWpSRTPal5eIUYFTu7EajVIoguysqZ9wG44nMEtx3MUAsUDkMTQ12W",
-      "kid-2": "b10lLJs8l1GPIzsLP0s6pMt8O0XVGnfTaCeROxQM0BIt2XrJMDHJZBM5NuQmQJQH"
-    }
-  }
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/provider-local-testing/dev.tfrc ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc
--- ./build-support/provider-local-testing/dev.tfrc	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc	1970-01-01 07:30:00.000000000 +0730
@@ -1,7 +0,0 @@
-provider_installation {
-  dev_overrides {
-    "vancluever/acme" = "/tmp/terraform-provider-acme"
-  }
-
-  direct {}
-}
\ No newline at end of file
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/memcached-start.sh ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh
--- ./build-support/scripts/memcached-start.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,15 +0,0 @@
-#!/usr/bin/env bash
-
-case "$(uname)" in
-  "Darwin")
-    brew list memcached > /dev/null 2>&1 || brew install memcached
-    brew services run memcached
-    ;;
-
-  *)
-    # Assuming Ubuntu as that's what our CI runs on. YMMV here, might
-    # need to expand this into a separate function for distribution
-    # detection if need be.
-    sudo apt-get update && sudo apt-get -y install memcached && sudo /etc/init.d/memcached start
-    ;;
-esac
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/memcached-stop.sh ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh
--- ./build-support/scripts/memcached-stop.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,10 +0,0 @@
-#!/usr/bin/env bash
-
-case "$(uname)" in
-  "Darwin")
-    brew services stop memcached || exit 0
-    ;;
-
-  *)
-    echo "stopping unsupported on this system, please stop manually."
-esac
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-challtest-dns.sh ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh
--- ./build-support/scripts/pebble-challtest-dns.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,21 +0,0 @@
-#!/usr/bin/env bash
-
-OP="$1"
-REC="$2"
-DATA="$3"
-
-set -e
-
-case "${OP}" in
-  present)
-    curl -q -X POST -d "{\"host\":\"${REC}\", \"value\": \"${DATA}\"}" \
-      http://localhost:8055/set-txt
-    ;;
-  cleanup)
-    curl -q -X POST -d "{\"host\":\"${REC}\"}" \
-      http://localhost:8055/clear-txt
-    ;;
-  *)
-    echo "error: invalid command ${OP}">&2
-    exit 1
-esac
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-start.sh ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh
--- ./build-support/scripts/pebble-start.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,82 +0,0 @@
-#!/usr/bin/env bash
-
-set -e
-
-GOPATH="$(go env GOPATH)"
-PEBBLE_VERSION="2.3.1"
-# config files are relative to script dir
-PEBBLE_CFGFILE="../pebblecfg/basic.json"
-PEBBLE_PIDFILE="/tmp/pebble.pid"
-PEBBLE_LOGFILE="/tmp/pebble.log"
-# config files are relative to script dir
-PEBBLE_EAB_CFGFILE="../pebblecfg/eab.json"
-PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
-PEBBLE_EAB_LOGFILE="/tmp/pebble-eab.log"
-PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
-PEBBLE_CHALLTESTSRV_LOGFILE="/tmp/pebble-challtestsrv.log"
-PEBBLE_CHALLTESTSRV_DNS_SERVER="0.0.0.0:5553"
-PEBBLE_SRC="https://github.com/letsencrypt/pebble.git"
-PEBBLE_DIR="src/github.com/letsencrypt/pebble"
-PEBBLE_CA_CERT="test/certs/pebble.minica.pem"
-
-# Calculate path names
-BASIC_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_CFGFILE})"
-EAB_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_EAB_CFGFILE})"
-
-# Enable alternate roots
-export PEBBLE_ALTERNATE_ROOTS="1"
-
-if [ "$1" == "--install" ]; then
-  INSTALL="yes"
-fi
-
-if [ ! -d "${GOPATH}/${PEBBLE_DIR}" ] || [ "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-parse HEAD)" != "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-list -n 1 "tags/v${PEBBLE_VERSION}")" ]; then
-  echo "pebble source code missing or incorrect version, forcing install."
-  INSTALL="yes"
-fi
-
-if [ "${INSTALL}" == "yes" ]; then
-  cd "${GOPATH}"
-  rm -rf "${PEBBLE_DIR}"
-  git clone "${PEBBLE_SRC}" "${PEBBLE_DIR}"
-  cd "${PEBBLE_DIR}"
-  git checkout "v${PEBBLE_VERSION}"
-  go install ./...
-else
-  cd "${GOPATH}/${PEBBLE_DIR}"
-  if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
-    echo "rebuilding ${GOPATH}/bin/pebble and ${GOPATH}/bin/pebble-challtestsrv from cache."
-    go install ./...
-  fi
-fi
-
-if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
-  echo "${GOPATH}/bin/pebble or ${GOPATH}/bin/pebble-challtestsrv missing; error happened in installation.">&2
-  exit 1
-fi
-
-pebble-challtestsrv -dns01 "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -http01 "" -tlsalpn01 "" > "${PEBBLE_CHALLTESTSRV_LOGFILE}" 2>&1 &
-echo -n $! > "${PEBBLE_CHALLTESTSRV_PIDFILE}"
-# Basic Pebble instance
-pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${BASIC_CFG}" > "${PEBBLE_LOGFILE}" 2>&1 &
-echo -n $! > "${PEBBLE_PIDFILE}"
-# EAB pebble instance
-pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${EAB_CFG}" > "${PEBBLE_EAB_LOGFILE}" 2>&1 &
-echo -n $! > "${PEBBLE_EAB_PIDFILE}"
-cat << EOS
-
-pebble instances (and pebble-challtestsrv) started.
-
-pebble PID:              ${PEBBLE_PIDFILE} (PID $(cat ${PEBBLE_PIDFILE}))
-pebble Log:              ${PEBBLE_LOGFILE}
-pebble PID (EAB):        ${PEBBLE_EAB_PIDFILE} (PID $(cat ${PEBBLE_EAB_PIDFILE}))
-pebble Log (EAB):        ${PEBBLE_EAB_LOGFILE}
-pebble-challtestsrv PID: ${PEBBLE_CHALLTESTSRV_PIDFILE} (PID $(cat ${PEBBLE_CHALLTESTSRV_PIDFILE}))
-pebble-challtestsrv Log: ${PEBBLE_CHALLTESTSRV_LOGFILE}
-Configured DNS server:   ${PEBBLE_CHALLTESTSRV_DNS_SERVER}
-Repository directory:    ${GOPATH}/${PEBBLE_DIR}
-Config file:             ${BASIC_CFG}
-Config file (EAB):       ${EAB_CFG}
-Root CA certificate:     ${GOPATH}/${PEBBLE_DIR}/${PEBBLE_CA_CERT}
-
-EOS
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-stop.sh ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh
--- ./build-support/scripts/pebble-stop.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,76 +0,0 @@
-#!/usr/bin/env bash
-
-PEBBLE_PIDFILE="/tmp/pebble.pid"
-PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
-PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
-
-PEBBLE_ERROR="false"
-PEBBLE_EAB_ERROR="false"
-PEBBLE_CHALLTESTSRV_ERROR="false"
-
-PEBBLE_PID=""
-if [ -f "${PEBBLE_PIDFILE}" ]; then
-  PEBBLE_PID="$(cat "${PEBBLE_PIDFILE}")"
-fi
-
-PEBBLE_EAB_PID=""
-if [ -f "${PEBBLE_EAB_PIDFILE}" ]; then
-  PEBBLE_EAB_PID="$(cat "${PEBBLE_EAB_PIDFILE}")"
-fi
-
-PEBBLE_CHALLTESTSRV_PID=""
-if [ -f "${PEBBLE_CHALLTESTSRV_PIDFILE}" ]; then
-  PEBBLE_CHALLTESTSRV_PID="$(cat "${PEBBLE_CHALLTESTSRV_PIDFILE}")"
-fi
-
-if [ -z "${PEBBLE_PID}" ] && [ -z "${PEBBLE_EAB_PID}" ] && [ -z "${PEBBLE_CHALLTESTSRV_PID}" ]; then
-  echo "no pebble instances nor pebble-challtestsrv are running; do not need to stop.">&2
-  exit 0
-fi
-
-# pebble
-if [ -n "${PEBBLE_PID}" ]; then
-  if [ "$(ps -p "${PEBBLE_PID}" -o comm=)" != "pebble" ]; then
-    echo "error: stale PID file ${PEBBLE_PIDFILE}; PID ${PEBBLE_PID} not found or is not \"pebble\".">&2
-    PEBBLE_ERROR="true"
-  fi
-
-  if [ "${PEBBLE_ERROR}"  != "true" ]; then
-    kill "${PEBBLE_PID}" && \
-      echo "pebble (PID ${PEBBLE_PID}) stopped." && \
-      rm "${PEBBLE_PIDFILE}"
-  fi
-fi
-
-# pebble (EAB)
-
-if [ -n "${PEBBLE_EAB_PID}" ]; then
-  if [ "$(ps -p "${PEBBLE_EAB_PID}" -o comm=)" != "pebble" ]; then
-    echo "error: stale PID file ${PEBBLE_EAB_PIDFILE}; PID ${PEBBLE_EAB_PID} not found or is not \"pebble\".">&2
-    PEBBLE_EAB_ERROR="true"
-  fi
-
-  if [ "${PEBBLE_EAB_ERROR}"  != "true" ]; then
-    kill "${PEBBLE_EAB_PID}" && \
-      echo "pebble (PID ${PEBBLE_EAB_PID}) stopped." && \
-      rm "${PEBBLE_EAB_PIDFILE}"
-  fi
-fi
-
-# pebble-challtestsrv
-if [ -n "${PEBBLE_CHALLTESTSRV_PID}" ]; then
-  if [ "$(ps -p "${PEBBLE_CHALLTESTSRV_PID}" -o comm=)" != "pebble-challtestsrv" ]; then
-    echo "error: stale PID file ${PEBBLE_CHALLTESTSRV_PIDFILE}; PID ${PEBBLE_CHALLTESTSRV_PID} not found or not \"pebble-challtestsrv\".">&2
-    PEBBLE_CHALLTESTSRV_ERROR="true"
-  fi
-
-  if [ "${PEBBLE_CHALLTESTSRV_ERROR}"  != "true" ]; then
-    kill "${PEBBLE_CHALLTESTSRV_PID}" && \
-      echo "pebble-challtestsrv (PID ${PEBBLE_CHALLTESTSRV_PID}) stopped." && \
-      rm "${PEBBLE_CHALLTESTSRV_PIDFILE}"
-  fi
-fi
-
-if [ "${PEBBLE_ERROR}" == "true" ] || [ "${PEBBLE_EAB_ERROR}" == "true" ] || [ "${PEBBLE_CHALLTESTSRV_ERROR}" == "true" ]; then
-  exit 1
-fi
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/release.sh ./vancluever/v2.21.0/build-support/scripts/release.sh
--- ./build-support/scripts/release.sh	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/build-support/scripts/release.sh	1970-01-01 07:30:00.000000000 +0730
@@ -1,98 +0,0 @@
-#!/usr/bin/env bash
-
-# message prints text with a color, redirected to stderr in the event of
-# warning or error messages.
-message() {
-  declare -A __colors=(
-    ["error"]="31"   # red
-    ["warning"]="33" # yellow
-    ["begin"]="32"   # green
-    ["ok"]="32"      # green
-    ["info"]="1"     # bold
-    ["reset"]="0"    # here just to note reset code
-  )
-  local __type="$1"
-  local __message="$2"
-  if [ -z "${__colors[$__type]}" ]; then
-    __type="info"
-  fi
-  if [[ "${__type}" == "error" ]]; then
-    echo -e "\e[${__colors[$__type]}m${__message}\e[0m" 1>&2
-  else
-    echo -e "\e[${__colors[$__type]}m${__message}\e[0m"
-  fi
-}
-
-if [[ "$(head -n 1 CHANGELOG.md | cut -d ' ' -f 3-)" != "(Unreleased)" ]]; then
-  message error "The changelog must have \"Unreleased\" in brackets next to its version number in order to be used by this tool."
-  exit 1
-fi
-
-release=$(head -n 1 CHANGELOG.md | awk '{print $2}')
-IFS="." read -r -a semver <<< "${release}"
-major="${semver[0]}"
-minor="${semver[1]}"
-IFS="-+" read -r -a patchpremeta <<< "${semver[2]}"
-patch="${patchpremeta[0]}"
-extra="${patchpremeta[1]}"
-
-for x in "${major}" "${minor}" "${patch}"; do 
-  if ! [ "${x}" -eq "${x}" ]; then
-    message error "${release} is not a proper semantic-versioned release."
-    message error "Please update the first line in CHANGELOG.md to a numeric MAJOR.MINOR.PATCH version."
-    exit 1
-  fi
-done
-
-if [[ "${extra}" == "pre" ]]; then
-  message error "Pre-releases tagged as \"pre\" are not supported. Release aborted."
-  message error "Please update the first line in CHANGELOG.md to a version without the -pre tag,"
-  message error "or use a different pre-release tag (i.e. beta)."
-  exit 1
-fi
-
-
-if [[ -t 0 ]]; then
-  message warning "You are releasing: ${release}"
-  message warning "Type \"yes\" to continue, anything else to abort."
-  prompt="$(message info "Continue?")"
-  read -r -p "${prompt} " confirm
-  if [[ "${confirm}" != "yes" ]]; then
-    message error "Release aborted."
-    exit 1
-  fi
-fi
-
-set -e
-
-# Timestamp and update version in changelog
-message begin "==> Timetsamping current release in CHANGELOG.md <=="
-current_date="$(date "+%B %e, %Y" | sed -E -e 's/  / /')"
-echo -e "## ${release} (${current_date})\n$(tail -n +2 CHANGELOG.md)" > CHANGELOG.md
-
-message begin "==> Committing CHANGELOG.md <=="
-git add CHANGELOG.md
-git commit -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
-
-message begin "==> Tagging Release v${release} <=="
-git tag "v${release}" -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
-
-if [[ "${extra}" != "" ]]; then
-  # We just drop the pre-release tags from the release information and don't increment.
-  message warning "NOTE: extra pre-release and metadata tags have been dropped from new version."
-  message warning "Manual modification may be necessary post-release."
-fi
-  
-new_prerelease="${semver[0]}.${semver[1]}.$((semver[2]+1))-pre"
-
-message begin "==> Bumping CHANGELOG.md to Release v${new_prerelease} <=="
-echo -e "## ${new_prerelease} (Unreleased)\n\nBumped version for dev.\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
-
-git add CHANGELOG.md
-git commit -m "Bump CHANGELOG.md to v${new_prerelease}"
-
-message begin "==> Pushing Commits and Tags <=="
-git push origin "$(git ls-remote --symref origin HEAD | head -n1 | awk '{print $2}')"
-git push origin --tags
-
-message ok "\nRelease v${release} successful."
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./CHANGELOG.md ./vancluever/v2.21.0/CHANGELOG.md
--- ./CHANGELOG.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/CHANGELOG.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,800 +0,0 @@
-## 2.21.1-pre (Unreleased)
-
-Bumped version for dev.
-
-## 2.21.0 (March 11, 2024)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.16.1 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.16.1/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-## 2.20.2 (February 13, 2024)
-
-This is a re-release to address the expired Terraform registry key due with
-release issues with key ID 1D9DFB214E18E085. The new key ID is
-974239543C576C78. No other changes are being made.
-
-
-## 2.20.1 (February 13, 2024)
-
-This is a release to address the expired Terraform registry key (key ID
-F282F2CFA56C3D69). The new key ID is 1D9DFB214E18E085. No other changes are
-being made.
-
-## 2.20.0 (January 29, 2024)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.15.0 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.15.0/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-## 2.19.1 (January 23, 2024)
-
-BUG FIXES:
-
-* `resource/acme_registration`: Fixed a situation where certain errors during
-  creation of the resource may result in "inconsistent result after apply" in
-  Terraform instead of the actual error.
-  [#375](https://github.com/vancluever/terraform-provider-acme/pull/375)
-
-## 2.19.0 (December 7, 2023)
-
-FEATURES:
-
-* `resource/acme_certificate`: Added the ability to specify a revocation
-  reason.
-  [#364](https://github.com/vancluever/terraform-provider-acme/issues/364) 
-
-## 2.18.0 (September 21, 2023)
-
-FEATURES:
-
-* `resource/acme_certificate`: Added the `cert_timeout` option to control the
-  timeout of HTTP requests used to obtain the certificate after challenges are
-  complete.
-  [#349](https://github.com/vancluever/terraform-provider-acme/issues/349) 
-
-## 2.17.2 (September 20, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.14.2 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.2/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-## 2.17.1 (September 11, 2023)
-
-FEATURES:
-
-* `resource/acme_certificate`: `azuredns` DNS provider now has the same
-  environment variable aliasing as the old `azure` provider.
-  [#342](https://github.com/vancluever/terraform-provider-acme/issues/342) 
-
-## 2.17.0 (August 22, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.14.0 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.0/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-FEATURES:
-
-* `resource/acme_certificate`: New HTTP challenge type `http_s3_challenge`,
-  which will allow publishing HTTP challenge records to an S3 bucket.
-  [#330](https://github.com/vancluever/terraform-provider-acme/pull/330)
-
-## 2.16.1 (August 11, 2023)
-
-This change is being made to correct build issues. No other changes are being
-made.
-
-## 2.16.0 (August 11, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.13.3 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.13.3/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-## 2.15.1 (June 19, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.12.2 See the
-lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.2/CHANGELOG.md)
-for more details on additions and changes to DNS providers, and other minor
-changes to the library.
-
-This lego update contains a critical fix to the `dnsmadeeasy` DNS provider,
-ensuring that it does not delete all records in a zone during cleanup.
-[go-acme/lego#1939](https://github.com/go-acme/lego/pull/1939)
-
-## 2.15.0 (June 14, 2023)
-
-This update is a full release of [2.15.0-beta1](#2150-beta1-june-13-2023),
-including the lego update and the bug fix for the `recursive_nameservers`
-setting. See that release for more details.
-
-## 2.15.0-beta1 (June 13, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.12.1 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.1/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-BUG FIXES:
-
-* `resource/acme_certificate`: DNS plugins should now respect the setting of
-  `recursive_nameservers` again.
-  [#316](https://github.com/vancluever/terraform-provider-acme/pull/316)
-
-## 2.14.0 (May 5, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.11.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.11.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.13.1 (February 23, 2023)
-
-This is a security fix to address
-[CVE-2022-41723](https://github.com/advisories/GHSA-vvpx-j8f3-3w6h). No other
-changes have been made.
-
-## 2.13.0 (February 18, 2023)
-
-This update is a full release of [2.13.0-beta1](#2130-beta1-february-5-2023) and
-[2.13.0-beta2](#2130-beta2-february-11-2023), including the new DNS provider
-plugin system, and lego v4.10.0. See those releases for more details.
-
-BUG FIXES:
-
-* `resource/acme_certificate`: New DNS providers and documentation for v4.10.0
-  should now be properly generated.
-
-## 2.13.0-beta2 (February 11, 2023)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.10.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.10.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-BUG FIXES:
-
-* `resource/acme_certificate`: The new DNS plugin system now implements
-  challenge provider timeouts properly.
-  [#277](https://github.com/vancluever/terraform-provider-acme/pull/277)
-
-## 2.13.0-beta1 (February 5, 2023)
-
-NEW DNS PLUGIN SYSTEM
-
-This update moves DNS providers for the `acme_certificate` resource into a
-[go-plugin](https://github.com/hashicorp/go-plugin) backed sub-plugin built into
-the provider. One provider is executed for each instance of a DNS provider
-supplied in `acme_certificate`, each with its own environment. This fixes a
-long-running issue where the environment variables set in the `config` parameter
-of one provider in one resource would overwrite the settings of another resource
-with different config settings for the same DNS provider. See
-[#235](https://github.com/vancluever/terraform-provider-acme/issues/235) and
-[#276](https://github.com/vancluever/terraform-provider-acme/pull/276) for more
-details.
-
-## 2.12.0 (Dec 21, 2022)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.9.1 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.1/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.11.1 (Oct 8, 2022)
-
-This update is a bugfix to correct the fact that the provider was not fully
-synced with the lego updates when 2.11.0 was released. No other changes were
-made.
-
-## 2.11.0 (Oct 8, 2022)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.9.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-FEATURES:
-
-* `resource/acme_certificate`: Added the `certificate_not_after` attribute to
-  show the certificate expiry date in state.
-  [#264](https://github.com/vancluever/terraform-provider-acme/pull/264)
-
-## 2.10.0 (Jul 5, 2022)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.8.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.8.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.9.0 (May 30, 2022)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.7.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.7.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.8.0 (January 24, 2022)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.6.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.6.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.7.1 (December 10, 2021)
-
-This is a patch version bump to build with the latest version of Go to address
-CVE-2021-44716.
-
-Note that this update is being made proactively and not in response to any known
-security issue. The ACME provider would normally only use `net/http` in HTTP
-challenges.
-
-No other changes are being made.
-
-## 2.7.0 (November 15, 2021)
-
-FEATURES:
-
-* `resource/acme_certificate`: New flag `revoke_certificate_on_destroy` to
-  control if certificates are revoked on destroy. Default is `true`, keeping
-  with existing behaviour.
-  [#192](https://github.com/vancluever/terraform-provider-acme/issues/192) 
-
-## 2.6.0 (October 6, 2021)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.5.3 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.5.3/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.5.3 (August 10, 2021)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Corrected an issue where `preferred_chain` was
-  not working for certificates that used an external CSR.
-  [#199](https://github.com/vancluever/terraform-provider-acme/issues/199)
-
-## 2.5.2 (June 9, 2021)
-
-This is another re-issue of v2.5.0 due to a goreleaser config issue. No other
-changes have been made.
-
-## 2.5.1 (June 9, 2021)
-
-This is a re-issue of 2.5.0 without freebsd/arm support, which has been
-suspended due to build issues for the time being. No other changes have been
-made.
-
-## 2.5.0 (June 9, 2021)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.4.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.4.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.4.0 (April 4, 2021)
-
-FEATURES:
-
-* `resource/acme_certificate`: The resource now supports HTTP-01 and
-  TLS-ALPN-01 challenges again. These are done through the `http_challenge`,
-  `http_webroot_challenge`, `http_memcached_challenge`, and `tls_challenge`
-  challenge types. It is still recommended that you use DNS challenges whenever
-  possible. See the documentation for more details.
-  [#169](https://github.com/vancluever/terraform-provider-acme/pull/169)
-
-## 2.3.0 (March 19, 2021)
-
-FEATURES:
-
-* `resource/acme_certificate`: Added the `preferred_chain` option to allow for
-  the selection of alternate certificate chains offered by the CA.
-  [#161](https://github.com/vancluever/terraform-provider-acme/issues/161)
-
-## 2.2.0 (March 12, 2021)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.3.1 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.3.1/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.1.2 (February 22, 2021)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: The resource no longer always expects two
-  certificates (ie: a single intermediate certificate). All intermediate
-  certificates are now concatenated in `issuer_pem`. The `certificate_p12`
-  should contain all issuer certificates as well.
-  [#154](https://github.com/vancluever/terraform-provider-acme/issues/154)
-
-## 2.1.1 (February 11, 2021)
-
-This is a simple version bump to fix documentation on the Terraform Registry. No
-changes are being made.
-
-## 2.1.0 (February 10, 2021)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.2.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/16660b2/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-## 2.0.0 (December 23, 2020)
-
-BREAKING CHANGES:
-
-* `resource/acme_certificate`: The resource ID is now a state-local UUID, not
-  the same as `certificate_url`. This is to prevent drift issues during renewal.
-  If you need the URL for the current version of the certificate, use the
-  `certificate_url` field.
-  [#103](https://github.com/vancluever/terraform-provider-acme/issues/103)
-
-FEATURES:
-
-* `resource/acme_certificate`: Added the `pre_check_delay` option to allow for
-  the insertion of delays in DNS challenges. This should help with DNS
-  propagation issues with certain providers.
-  [#111](https://github.com/vancluever/terraform-provider-acme/pull/111)
-* `resource/acme_certificate`: The domain defined in the `common_name` field can
-  now be specified in `subject_alternative_names`. This is a strictly semantic
-  change as the CN is already included in the SAN list of issued certificates.
-  [#90](https://github.com/vancluever/terraform-provider-acme/issues/90)
-
-## 1.6.3 (November 30, 2020)
-
-This is (yet another) simple version bump to attempt to fix documentation on the
-Terraform Registry. No changes are being made.
-
-## 1.6.2 (November 30, 2020)
-
-This is (another) simple version bump to attempt to fix documentation on the
-Terraform Registry. No changes are being made.
-
-## 1.6.1 (November 27, 2020)
-
-This is a simple version bump to attempt to fix documentation on the Terraform
-Registry. No changes are being made.
-
-## 1.6.0 (November 27, 2020)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v4.1.3 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.1.3/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library.
-
-GENERAL NOTIFICATIONS:
-
-* Testing of the provider has moved to use
-  [pebble](https://github.com/letsencrypt/pebble/) exclusively. Tests for some
-  features that are not explicitly supported by pebble or were otherwise tested
-  manually have been removed. See
-  [`907de66`](https://github.com/vancluever/terraform-provider-acme/commit/907de66625886fbd86b383cb158515ef458f3604)
-  for more details.
-* Support for Terraform 0.11 has been dropped. The provider is now only
-  available on the Terraform registry.
-
-FEATURES:
-
-* `resource/acme_registration`: Added support for external account binding. This
-  allows registrations to be linked to external accounts, commonly used by
-  commercial CAs.
-* `resource/acme_certificate`: Added the `disable_complete_propagation` option,
-  which allows one to disable the propagation pre-check before attempting to
-  complete the DNS challenge. Enabling this is only recommended for testing.
-
-## 1.5.0 (October 21, 2019)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v3.1.0 See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.1.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library. ([#92](https://github.com/terraform-providers/terraform-provider-acme/issues/92))
-
-## 1.4.0 (August 20, 2019)
-
-LEGO UPDATE:
-
-[lego](https://github.com/go-acme/lego) has been updated to v3.0.0 (from v2.5.0
-in provider version 1.2.0). See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.0.0/CHANGELOG.md) for
-more details on additions and changes to DNS providers, and other minor changes
-to the library. ([#82](https://github.com/terraform-providers/terraform-provider-acme/issues/82))
-
-Starting with this release, all DNS providers and documentation for the DNS
-providers will be auto-generated, so the lego CHANGELOG will be the place to
-look for lego-specific changes in the future.
-
-BUG FIXES:
-
-* `resource/acme_certificate`: When renewing certificate, private keys and CSRs
-  will now only be set if they are present in the state. This may correct some
-  library-related issues during the renewal process. ([#84](https://github.com/terraform-providers/terraform-provider-acme/issues/84))
-* `resource/acme_registration`: Unknown or deactivated registrations will now be
-  removed from state on refresh. ([#85](https://github.com/terraform-providers/terraform-provider-acme/issues/85))
-
-## 1.3.5 (July 30, 2019)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Expired certificates flagged for renewal will now
-  properly renew on the next `terraform apply` on Terraform 0.12.0 and higher.
-  ([#77](https://github.com/terraform-providers/terraform-provider-acme/issues/77))
-
-## 1.3.4 (June 06, 2019)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: All computed attributes associated with a
-  certificate are now marked for re-generation when a certificate needs to be
-  renewed. While this was previously happening in reality, this was not being
-  reflected in the plan. ([#64](https://github.com/terraform-providers/terraform-provider-acme/issues/64))
-
-## 1.3.3 (May 29, 2019)
-
-This update is a Terraform 0.12 support build for the changes from 1.3.2.
-
-## 1.3.2 (May 28, 2019)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Corrected an issue where `certificate_pem` would
-  be deleted from state on certificate renew failure. ([#60](https://github.com/terraform-providers/terraform-provider-acme/issues/60))
-* `resource/acme_certificate`: The resource will now attempt to recover the
-  `certificate_pem` field from the CA if it is missing in state. ([#59](https://github.com/terraform-providers/terraform-provider-acme/issues/59))
-
-## 1.3.1 (May 23, 2019)
-
-IMPROVEMENTS:
-
-* The provider now will log lego's log messages when `TF_LOG=debug` or higher is
-  set. ([#53](https://github.com/terraform-providers/terraform-provider-acme/issues/53))
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Corrected state migration issues that were
-  causing the resource to not function at all in Terraform 0.12. ([#57](https://github.com/terraform-providers/terraform-provider-acme/issues/57))
-* `resource/acme_certificate`: Corrected state migration issues that may have
-  triggered an update of settings due to incorrect migration of the
-  `recursive_nameservers` attribute on Terraform 0.11. ([#55](https://github.com/terraform-providers/terraform-provider-acme/issues/55))
-
-## 1.3.0 (May 17, 2019)
-
-BREAKING CHANGES: 
-
-* `resource/acme_certificate`: The `recursive_nameservers` option for checking
-  propagation of DNS challenge records has been promoted to a top-level option
-  and is no longer provided as part of an individual `dns_challenge` block.
-  ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
-
-FEATURES:
-
-* `resource/acme_certificate`: This resource now supports multiple DNS
-  challenges for working with multiple primary DNS providers. ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
-
-## 1.2.1 (May 14, 2019)
-
-FEATURES:
-
-* The plugin has been updated to support Terraform 0.12 and higher. Backwards
-  compatibility has been maintained to Terraform 0.11.x and earlier versions
-  that support plugin protocol version 4. ([#45](https://github.com/terraform-providers/terraform-provider-acme/issues/45))
-
-## 1.2.0 (May 14, 2019)
-
-LEGO UPDATE AND NEW DNS PROVIDERS:
-
-[lego](https://github.com/go-acme/lego) has been updated to v2.5.0. See the lego
-[CHANGELOG.md](https://github.com/go-acme/lego/blob/master/CHANGELOG.md#v250---2019-04-17) for more details. ([#47](https://github.com/terraform-providers/terraform-provider-acme/issues/47))
-
-The update brings the following new DNS providers:
-
-* `cloudns`
-* `dode`
-* `oraclecloud`
-
-IMPROVEMENTS:
-
-* `resource/acme_certificate`: The default `min_days_remaining` is now set to 30
-  days, up from 7. ([#48](https://github.com/terraform-providers/terraform-provider-acme/issues/48))
-
-## 1.1.2 (May 06, 2019)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Revocation on destroy now skips expired
-  certificates. ([#42](https://github.com/terraform-providers/terraform-provider-acme/issues/42))
-
-## 1.1.1 (March 12, 2019)
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Added the optional `certificate_p12_password`
-  field, used when creating the PFX bundle found in `certificate_p12`. ([#35](https://github.com/terraform-providers/terraform-provider-acme/issues/35))
-* `resource/acme_certificate`: `certificate_p12` base64 data is now padded and
-  should be usable by Azure services that take PKCS12 data. ([#34](https://github.com/terraform-providers/terraform-provider-acme/issues/34))
-
-## 1.1.0 (March 01, 2019)
-
-LEGO UPDATE AND NEW DNS PROVIDERS:
-
-[lego](https://github.com/go-acme/lego) has been updated to v2.2.0.
-
-As part of this update, a number of new DNS providers have been added for
-`acme_certificate`:
-
-* `acmedns`
-* `alidns`
-* `conoha`
-* `designate`
-* `dreamhost`
-* `hostingde`
-* `httpreq`
-* `iij`
-* `inwx`
-* `linodev4`
-* `mydnsjp`
-* `netcup`
-* `nifcloud`
-* `sakuracloud`
-* `selectel`
-* `stackpath`
-* `transip`
-* `vegadns`
-* `vscale`
-* `zoneee`
-
-Thanks very much to @yamamoto-febc ([#10](https://github.com/terraform-providers/terraform-provider-acme/issues/10)) and @bzub ([#17](https://github.com/terraform-providers/terraform-provider-acme/issues/17)), ([#18](https://github.com/terraform-providers/terraform-provider-acme/issues/18)) for the
-help with documentation, code updates, and module migration work!
-
-IMPROVEMENTS:
-
-* `resource/acme_certificate`: Added the `recursive_nameservers` attribute to
-  the `dns_challenge` block. This allows someone to specify a static resolver
-  list for DNS propagation checks that will override the resolvers of the system
-  running Terraform. This can be useful when dealing with split horizon DNS
-  scenarios. ([#25](https://github.com/terraform-providers/terraform-provider-acme/issues/25))
-* `resource/acme_certificate`: Added the `certificate_p12` output, which makes
-  the certificate, intermediate CA, and private key available in a PFX PKCS12
-  archive. This can be useful when working with Microsoft products.  ([#26](https://github.com/terraform-providers/terraform-provider-acme/issues/26))
-
-BUG FIXES:
-
-* `resource/acme_certificate`: Modifications to the `dns_challenge`
-  configuration will now persist across no-op updates. Additionally,
-  modification of these values will no longer force a new resource. ([#28](https://github.com/terraform-providers/terraform-provider-acme/issues/28))
-
-## 1.0.1 (August 08, 2018)
-
-This is release bump for the sole purpose of releasing the provider upstream. As
-of this release, you will be able to fetch this project directly via Terraform!
-
-## 1.0.0 (Jun 17, 2018)
-
-BREAKING CHANGES:
-
-* The provider has now been updated for ACME v2 and will no longer work for ACME
-  v1. If you require v1, use version 0.6.0 of the provider.
-* Existing states for `acme_registration` and `acme_certificate` will be
-  preserved on update and there should be no need to re-create either
-  registrations or certificates, so long as the CA supports it. Let's Encrypt
-  supports these updates.
-* Several fields have been removed and the resource relationships have changed.
-  For full details, see the documentation.
-* `server_url` is now a provider-level configuration value. The documentation
-  has several full examples of this in action.
-* `resource/acme_certificate`: The `http_challenge_port` and
-  `tls_challenge_port` parameters have been removed. The resource now only
-  supports DNS challenges, so `dns_challenge` is now a required field.
-  [#40][gh-40]
-
-IMPROVEMENTS:
-
-* `resource/acme_certificate`: With the update to ACME v2, this resource now
-  supports wildcard certificates.
-* `resource/acme_registration`: This resource will now completely remove a
-  registration from the ACME server when the resource is destroyed. [#39][gh-39]
-
-BUG FIXES:
-
-* `resource/acme_certificate`: The post-revocation OCSP validation has been
-  completely removed. This should make destruction of the resource much more
-  reliable. [#41][gh-41]
-
-[gh-41]: https://github.com/vancluever/terraform-provider-acme/pull/41
-[gh-40]: https://github.com/vancluever/terraform-provider-acme/pull/40
-[gh-39]: https://github.com/vancluever/terraform-provider-acme/pull/39
-
-## 0.6.0
-
-**NOTE:** This is the last major release before 1.0.0, which will include
-support for ACME v2 and will more than likely break support for ACME v1. If you
-require ACME v1 after 1.0.0, use this version of the provider.
-
-NEW DNS PROVIDERS:
-
-The `acme_certificate` resource has had a provider refresh, with the following
-new providers added:
-
-* `bluecat`
-* `cloudxns`
-* `duckdns`
-* `fastdns`
-* `gandiv5`
-* `glesys`
-* `lightsail`
-* `namedotcom`
-* `exec`
-
-These providers, and previous providers, have been synchronized with their state
-at lego version [v0.5.0][lego-dns-providers-v0.5.0].
-
-[lego-dns-providers-v0.5.0]: https://github.com/xenolf/lego/tree/v0.5.0/providers/dns
-
-IMPROVEMENTS:
-
-* `resource/acme_certificate`: This resource now supports supplying the `delete`
-  [resource timeout][resource-timeouts] timeout, which controls the certificate
-  revocation timeout (or more specifically, the OCSP wait timeout).
-  ([#32][gh-32])
-* `resource/acme_certificate`: Added alias mappings for the Azure DNS provider's
-  environment variables so that the same environment variables for the
-  [Terraform Azure Provider][tf-azurerm-provider] can be used with the ACME
-  plugin. ([#36][gh-36])
-* `resource/acme_certificate`: Already revoked certificates are ignored by the
-  destroy process, ensuring that they are destroyed without error in Terraform.
-  ([#33][gh-33])
-* `resource/acme_certificate`: The `config` field of `dns_challenge` has now
-  been marked as a sensitive field to prevent credentials from being leaked in
-  output. ([#31][gh-31])
-
-[resource-timeouts]: https://www.terraform.io/docs/configuration/resources.html#timeouts
-[tf-azurerm-provider]: https://www.terraform.io/docs/providers/azurerm/index.html
-[gh-36]: https://github.com/vancluever/terraform-provider-acme/pull/36
-[gh-33]: https://github.com/vancluever/terraform-provider-acme/pull/33
-[gh-32]: https://github.com/vancluever/terraform-provider-acme/pull/32
-[gh-31]: https://github.com/vancluever/terraform-provider-acme/pull/31
-
-## 0.5.0
-
-Most of the items in this release are the result of a refresh of lego, which
-brings the following new features, amongst others:
-
- * DNSimple API now supports V2.
- * You can now supply `AWS_HOSTED_ZONE_ID` to the route53 DNS challenge to
-   directly specify the zone ID for the DNS challenge, instead of getting the
-   provider to try and detect it.
- * New DNS challenge providers: `azure`, `auroradns`, `dnspod`, `exoscale`,
-   `godaddy`, `linode`, `rackspace`, `ns1`, and `otc`.
-
-## v0.4.0
-
-### General Information
-
- * Releases are no longer signed. SHA256SUMS are still published, however, and
-   signing may come back under a more general signing key. Keep this in mind if
-   you need earlier releases as well.
- * Built against Terraform v0.10.0-beta2 with the [custom diff
-   patch](https://github.com/hashicorp/terraform/pull/14887). Although the
-   plugin API version has not yet changed, YMMV with using this on Terraform
-   versions below v0.10.0-beta2. See below for details on why we are using the
-   custom diff patch.
-
-### New Diff Behaviour for Certificate Renewals
-
-The correctness of the certificate renewal behaviour in this resource has been a
-long-running problem, due to the fact that certificates were renewed during the
-refresh cycle. This caused silent updates and empty diffs unless you had
-resources in the same stack that depended on the certificates. In addition to
-this, this has led to issues with implementing settings like
-`min_days_remaining` in a way that made its setting effective on the present run
-without `ForceNew`. These issues are articulated in #13 and #15.
-
-As of this version, these issues are no longer a problem. Using the
-aforementioned custom diff patch, the certificate's expiry is now checked during
-the diff phase of a `terraform plan`, articulated below:
-
-```
-The Terraform execution plan has been generated and is shown below.
-Resources are shown in alphabetical order for quick scanning. Green resources
-will be created (or destroyed and then created if an existing resource
-exists), yellow resources are being changed in-place, and red resources
-will be destroyed. Cyan entries are data sources to be read.
-
-Note: You didn't specify an "-out" parameter to save this plan, so when
-"apply" is called, Terraform can't guarantee this is what will execute.
-
-  ~ acme_certificate.certificate
-      certificate_pem: "-----BEGIN CERTIFICATE-----
-xxxxxxx
------END CERTIFICATE-----
-" => "<computed>"
-```
-
-If the certificate requires renewal, `certificate_pem` is set to `<computed>`
-and correctly renewed during the next `terraform apply` run.
-
-This also means that setting `min_days_remaining` no longer forces a new
-resource and also works immediately - if you adjust it, its settings will work
-during your next plan.
-
-## v0.3.0
-
-Fully updated version, supporting v0.9.0. Make sure you use this version for the
-full v0.9.0 release, as v0.3.0-beta2 will not work (the plugin API version has
-been incremented again). People still on versions of TF before v0.9.0 should use
-a v0.2.x version.
-
-## v0.3.0-beta2
-
-This beta version tracks Terraform `v0.9.0`, which as of this writing (Feb 28th,
-2017) is currently in beta. All that has changed so far on this side is that we
-need to rebuild as the plugin API has again changed.
-
-## v0.2.1
-
-This is a bugfix to correct #6 and ensure that TF will abort if a DNS challenge
-is improperly configured (example: missing credentials). Previous to this
-release if the DNS challenge could not be properly set up, the plugin would have
-proceeded with an HTTP or TLS challenge.
-
-## v0.2.0
-
-Note that this release is built for Terraform v0.8.0 and higher - using with
-v0.7.x and lower may not work. Use the v0.1.0 release instead.
-
- * Added the `must_staple` option - this option adds the [OCSP Stapling
-   Required][1] extension to created certificates, ensuring that a valid OCSP
-   Staple must be included in the TLS handshake for the connection to proceed.
-   This is disabled by default. This option has no effect when being used with
-   external CSRs.
-
-[1]: https://letsencrypt.org/docs/integration-guide/#implement-ocsp-stapling
-
-## v0.1.0
-
-Initial release.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./docs/index.md ./vancluever/v2.21.0/docs/index.md
--- ./docs/index.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/docs/index.md	2024-04-26 18:07:52.560299129 +0800
@@ -53,7 +53,7 @@
 terraform {
   required_providers {
     acme = {
-      source  = "vancluever/acme"
+      source  = "Kid-debug/acme"
       version = "~> 2.0"
     }
   }
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./docs/resources/certificate.md ./vancluever/v2.21.0/docs/resources/certificate.md
--- ./docs/resources/certificate.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/docs/resources/certificate.md	2024-04-26 18:07:52.560299129 +0800
@@ -450,7 +450,7 @@
   to grant escalated network privileges to either Terraform (`setcap
   'cap_net_bind_service=+eip' "$(which terraform)"`), or the provider (`setcap
   'cap_net_bind_service=+ep'
-  .terraform/providers/registry.terraform.io/vancluever/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
+  .terraform/providers/registry.terraform.io/Kid-debug/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
   Both have drawbacks: granting capabilites to Terraform itself will mean that
   Terraform core and any provider launched by it will also have the capability,
   while capabilities granted to the provider will be lost every time the
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.envrc ./vancluever/v2.21.0/.envrc
--- ./.envrc	1970-01-01 07:30:00.000000000 +0730
+++ ./vancluever/v2.21.0/.envrc	2024-04-26 18:07:21.589800106 +0800
@@ -0,0 +1 @@
+use flake
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.github/workflows/release.yml ./vancluever/v2.21.0/.github/workflows/release.yml
--- ./.github/workflows/release.yml	2024-04-26 17:58:30.826828382 +0800
+++ ./vancluever/v2.21.0/.github/workflows/release.yml	2024-04-26 18:07:21.589800106 +0800
@@ -1,48 +1,73 @@
 # This GitHub action can publish assets for release when a tag is created.
 # Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
 #
-# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your
+# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your 
 # private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
 # secret. If you would rather own your own GPG handling, please fork this action
 # or use an alternative one for key handling.
 #
-# You will need to pass the `--batch` flag to `gpg` in your signing step
+# You will need to pass the `--batch` flag to `gpg` in your signing step 
 # in `goreleaser` to indicate this is being used in a non-interactive mode.
 #
 name: release
 on:
   push:
-    # branches:
-    #   - main
     tags:
-      - "v*"
-
-# Releases need permissions to read and write the repository contents.
-# GitHub considers creating releases and uploading assets as writing contents.
-permissions:
-  contents: write
-
+      - 'v*'
 jobs:
+  test:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+      - uses: actions/setup-go@v5
+        with:
+          go-version: '^1.17.5'
+          check-latest: true
+      - name: Cache (Go Modules)
+        uses: actions/cache@v4
+        env:
+          cache-name: go-mod-cache
+        with:
+          path: /home/runner/go/pkg/mod
+          key: ${{ env.cache-name}}-${{ hashFiles('go.sum') }}
+          restore-keys: |
+            ${{ env.cache-name}}-
+      - name: Cache (Go Build)
+        uses: actions/cache@v4
+        env:
+          cache-name: go-build-cache
+          cache-dir: /home/runner/.cache/go-build
+        with:
+          path: ${{ env.cache-dir }}
+          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
+          restore-keys: |
+            ${{ env.cache-name}}-
+      - name: Cache (Pebble)
+        uses: actions/cache@v4
+        env:
+          cache-name: pebble-cache
+          cache-dir: /home/runner/go/src/github.com/letsencrypt/pebble
+        with:
+          path: ${{ env.cache-dir }}
+          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
+          restore-keys: |
+            ${{ env.cache-name}}-
+      - name: Verify Modules
+        run: go mod verify
+      - name: Run Tests
+        run: make tools pebble-start memcached-start test
+
   goreleaser:
+    needs: test
     runs-on: ubuntu-latest
-    # defaults:
-    #   run:
-    #     working-directory: ./vancluever/v2.21.0
     steps:
       - uses: actions/checkout@v4
-      - uses: actions/setup-go@v4
+      - uses: actions/setup-go@v5
         with:
-          go-version: "^1.21.0"
+          go-version: '^1.17.5'
           check-latest: true
-      - name: mov-sub-to-main
-        run: |
-          make move-sub-file
-      - name: patching
-        run: |
-          make patching-acme
-          ls
       - name: Cache (Go Modules)
-        uses: actions/cache@v3
+        uses: actions/cache@v4
         env:
           cache-name: go-mod-cache
         with:
@@ -51,7 +76,7 @@
           restore-keys: |
             ${{ env.cache-name}}-
       - name: Cache (Go Build)
-        uses: actions/cache@v3
+        uses: actions/cache@v4
         env:
           cache-name: go-build-cache
           cache-dir: /home/runner/.cache/go-build
@@ -61,22 +86,17 @@
           restore-keys: |
             ${{ env.cache-name}}-
       - run: go mod verify
-        env:
-          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
-          GITHUB_ACTOR: ${{github.actor}}
-          GITHUB_REPOSITORY: ${{github.repository}}
       - name: Import GPG key
         id: import_gpg
         uses: paultyng/ghaction-import-gpg@v2.1.0
         env:
           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
           PASSPHRASE: ${{ secrets.PASSPHRASE }}
-      - run: ls
       - name: Run GoReleaser
         uses: goreleaser/goreleaser-action@v5.0.0
         with:
           version: latest
-          args: release --clean --timeout 60m0s --skip=validate
+          args: release --clean --timeout 60m0s
         env:
-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.gitmodules ./vancluever/v2.21.0/.gitmodules
--- ./.gitmodules	2024-04-26 17:23:10.538990167 +0800
+++ ./vancluever/v2.21.0/.gitmodules	1970-01-01 07:30:00.000000000 +0730
@@ -1,3 +0,0 @@
-[submodule "vancluever/v2.21.0"]
-	path = vancluever/v2.21.0
-	url = https://github.com/vancluever/terraform-provider-acme.git
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./GNUmakefile ./vancluever/v2.21.0/GNUmakefile
--- ./GNUmakefile	1970-01-01 07:30:00.000000000 +0730
+++ ./vancluever/v2.21.0/GNUmakefile	2024-04-26 18:07:21.593801524 +0800
@@ -0,0 +1,91 @@
+# Test all packages by default
+TEST ?= ./...
+
+ifeq ($(shell go env GOOS),darwin)
+SEDOPTS = -i ''
+else
+SEDOPTS = -i
+endif
+
+GOWORKFLOWVERSION=$(shell go run ./build-support/go-version-for-workflow)
+
+.PHONY: default
+default: build
+
+.PHONY: tools
+tools:
+	cd $(shell go env GOROOT) && go install github.com/hashicorp/go-bindata/go-bindata@latest && go install gotest.tools/gotestsum@latest
+
+.PHONY: pebble-start-install
+pebble-start-install: pebble-stop
+	build-support/scripts/pebble-start.sh --install
+
+.PHONY: pebble-start
+pebble-start: pebble-stop
+	build-support/scripts/pebble-start.sh
+
+.PHONY: pebble-stop
+pebble-stop:
+	build-support/scripts/pebble-stop.sh
+
+.PHONY: memcached-start
+memcached-start: memcached-stop
+	build-support/scripts/memcached-start.sh
+
+.PHONY: memcached-stop
+memcached-stop:
+	build-support/scripts/memcached-stop.sh
+
+.PHONY: stop-services
+stop-services: memcached-stop pebble-stop
+
+.PHONY: template-generate
+template-generate:
+	@echo "==> Re-generating templates..."
+	@go generate ./build-support/generate-dns-providers
+
+.PHONY: provider-generate
+provider-generate:
+	@echo "==> Re-generating Go DNS provider factory in ./acme..."
+	@go generate ./acme/dnsplugin
+	@go build ./acme/dnsplugin
+	@go mod tidy
+	@echo "==> Re-genrating documentation..."
+	@rm -f docs/guides/dns-providers-*.md
+	@go run ./build-support/generate-dns-providers doc docs/guides/
+
+.PHONY: provider-generate-update
+provider-generate-update: provider-generate
+	test -z "$$(git diff acme docs)" || \
+		{ git add acme docs && \
+		git commit -m "re-generate lego DNS provider data"; }
+
+.PHONY: proto
+proto:
+	cd proto/ && buf generate
+
+.PHONY: build
+build:
+	go install
+
+.PHONY: release
+release:
+	build-support/scripts/release.sh
+
+.PHONY: build-pre-release
+build-pre-release:
+	mkdir -p /tmp/terraform-provider-acme/
+	go build -o /tmp/terraform-provider-acme/terraform-provider-acme
+
+.PHONY: clean-pre-release
+clean-pre-release:
+	rm -rf /tmp/terraform-provider-acme/
+
+.PHONY: test
+test:
+	TF_LOG=debug TF_ACC=1 gotestsum --format=short-verbose $(TEST) $(TESTARGS)
+
+.PHONY: go-version-sync
+go-version-sync:
+	sed $(SEDOPTS) -e "s/go-version:.*\$$/go-version: '^$(GOWORKFLOWVERSION)'/g" .github/workflows/*.yml
+	git add .github/workflows/*.yml && git commit -m "workflows: update Go to version $(GOWORKFLOWVERSION)"
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./go.mod ./vancluever/v2.21.0/go.mod
--- ./go.mod	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/go.mod	2024-04-26 18:07:52.560299129 +0800
@@ -1,11 +1,10 @@
-module github.com/vancluever/terraform-provider-acme/v2
+module github.com/Kid-debug/terraform-provider-acme/v2
 
-go 1.21
-
-toolchain go1.21.0
+go 1.21.0
 
 require (
 	github.com/BurntSushi/toml v1.3.2
+	github.com/cenkalti/backoff/v4 v4.2.1
 	github.com/davecgh/go-spew v1.1.1
 	github.com/go-acme/lego/v4 v4.16.1
 	github.com/google/go-cmp v0.6.0
@@ -19,195 +18,3 @@
 	google.golang.org/protobuf v1.33.0
 	software.sslmate.com/src/go-pkcs12 v0.4.0
 )
-
-require (
-	cloud.google.com/go/compute v1.24.0 // indirect
-	cloud.google.com/go/compute/metadata v0.2.3 // indirect
-	github.com/AdamSLevy/jsonrpc2/v14 v14.1.0 // indirect
-	github.com/Azure/azure-sdk-for-go v68.0.0+incompatible // indirect
-	github.com/Azure/azure-sdk-for-go/sdk/azcore v1.6.0 // indirect
-	github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.3.0 // indirect
-	github.com/Azure/azure-sdk-for-go/sdk/internal v1.3.0 // indirect
-	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns v1.1.0 // indirect
-	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns v1.1.0 // indirect
-	github.com/Azure/go-autorest v14.2.0+incompatible // indirect
-	github.com/Azure/go-autorest/autorest v0.11.29 // indirect
-	github.com/Azure/go-autorest/autorest/adal v0.9.22 // indirect
-	github.com/Azure/go-autorest/autorest/azure/auth v0.5.12 // indirect
-	github.com/Azure/go-autorest/autorest/azure/cli v0.4.5 // indirect
-	github.com/Azure/go-autorest/autorest/date v0.3.0 // indirect
-	github.com/Azure/go-autorest/autorest/to v0.4.0 // indirect
-	github.com/Azure/go-autorest/logger v0.2.1 // indirect
-	github.com/Azure/go-autorest/tracing v0.6.0 // indirect
-	github.com/AzureAD/microsoft-authentication-library-for-go v1.0.0 // indirect
-	github.com/OpenDNS/vegadns2client v0.0.0-20180418235048-a3fa4a771d87 // indirect
-	github.com/ProtonMail/go-crypto v1.1.0-alpha.0 // indirect
-	github.com/agext/levenshtein v1.2.2 // indirect
-	github.com/akamai/AkamaiOPEN-edgegrid-golang v1.2.2 // indirect
-	github.com/aliyun/alibaba-cloud-sdk-go v1.61.1755 // indirect
-	github.com/andres-erbsen/clock v0.0.0-20160526145045-9e14626cd129 // indirect
-	github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect
-	github.com/aws/aws-sdk-go-v2 v1.24.1 // indirect
-	github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect
-	github.com/aws/aws-sdk-go-v2/config v1.26.6 // indirect
-	github.com/aws/aws-sdk-go-v2/credentials v1.16.16 // indirect
-	github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 // indirect
-	github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect
-	github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect
-	github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect
-	github.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 // indirect
-	github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect
-	github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 // indirect
-	github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect
-	github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 // indirect
-	github.com/aws/aws-sdk-go-v2/service/lightsail v1.34.0 // indirect
-	github.com/aws/aws-sdk-go-v2/service/route53 v1.37.0 // indirect
-	github.com/aws/aws-sdk-go-v2/service/s3 v1.48.1 // indirect
-	github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect
-	github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect
-	github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect
-	github.com/aws/smithy-go v1.19.0 // indirect
-	github.com/boombuler/barcode v1.0.1 // indirect
-	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
-	github.com/civo/civogo v0.3.11 // indirect
-	github.com/cloudflare/circl v1.3.7 // indirect
-	github.com/cloudflare/cloudflare-go v0.86.0 // indirect
-	github.com/cpu/goacmedns v0.1.1 // indirect
-	github.com/deepmap/oapi-codegen v1.9.1 // indirect
-	github.com/dimchansky/utfbom v1.1.1 // indirect
-	github.com/dnsimple/dnsimple-go v1.2.0 // indirect
-	github.com/exoscale/egoscale v0.102.3 // indirect
-	github.com/fatih/color v1.16.0 // indirect
-	github.com/fatih/structs v1.1.0 // indirect
-	github.com/felixge/httpsnoop v1.0.4 // indirect
-	github.com/fsnotify/fsnotify v1.7.0 // indirect
-	github.com/ghodss/yaml v1.0.0 // indirect
-	github.com/go-errors/errors v1.0.1 // indirect
-	github.com/go-jose/go-jose/v4 v4.0.1 // indirect
-	github.com/go-logr/logr v1.4.1 // indirect
-	github.com/go-logr/stdr v1.2.2 // indirect
-	github.com/go-resty/resty/v2 v2.11.0 // indirect
-	github.com/go-viper/mapstructure/v2 v2.0.0-alpha.1 // indirect
-	github.com/goccy/go-json v0.10.2 // indirect
-	github.com/gofrs/uuid v4.4.0+incompatible // indirect
-	github.com/golang-jwt/jwt/v4 v4.5.0 // indirect
-	github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect
-	github.com/golang/protobuf v1.5.4 // indirect
-	github.com/google/go-querystring v1.1.0 // indirect
-	github.com/google/s2a-go v0.1.7 // indirect
-	github.com/google/uuid v1.6.0 // indirect
-	github.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect
-	github.com/googleapis/gax-go/v2 v2.12.0 // indirect
-	github.com/gophercloud/gophercloud v1.0.0 // indirect
-	github.com/gophercloud/utils v0.0.0-20210216074907-f6de111f2eae // indirect
-	github.com/hashicorp/errwrap v1.0.0 // indirect
-	github.com/hashicorp/go-checkpoint v0.5.0 // indirect
-	github.com/hashicorp/go-cleanhttp v0.5.2 // indirect
-	github.com/hashicorp/go-cty v1.4.1-0.20200414143053-d3edf31b6320 // indirect
-	github.com/hashicorp/go-hclog v1.5.0 // indirect
-	github.com/hashicorp/go-retryablehttp v0.7.5 // indirect
-	github.com/hashicorp/go-version v1.6.0 // indirect
-	github.com/hashicorp/hc-install v0.6.3 // indirect
-	github.com/hashicorp/hcl/v2 v2.19.1 // indirect
-	github.com/hashicorp/logutils v1.0.0 // indirect
-	github.com/hashicorp/terraform-exec v0.20.0 // indirect
-	github.com/hashicorp/terraform-json v0.21.0 // indirect
-	github.com/hashicorp/terraform-plugin-go v0.22.0 // indirect
-	github.com/hashicorp/terraform-plugin-log v0.9.0 // indirect
-	github.com/hashicorp/terraform-registry-address v0.2.3 // indirect
-	github.com/hashicorp/terraform-svchost v0.1.1 // indirect
-	github.com/hashicorp/yamux v0.1.1 // indirect
-	github.com/iij/doapi v0.0.0-20190504054126-0bbf12d6d7df // indirect
-	github.com/infobloxopen/infoblox-go-client v1.1.1 // indirect
-	github.com/jmespath/go-jmespath v0.4.0 // indirect
-	github.com/json-iterator/go v1.1.12 // indirect
-	github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213 // indirect
-	github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b // indirect
-	github.com/kr/pretty v0.3.1 // indirect
-	github.com/kylelemons/godebug v1.1.0 // indirect
-	github.com/labbsr0x/bindman-dns-webhook v1.0.2 // indirect
-	github.com/labbsr0x/goh v1.0.1 // indirect
-	github.com/linode/linodego v1.28.0 // indirect
-	github.com/liquidweb/liquidweb-cli v0.6.9 // indirect
-	github.com/liquidweb/liquidweb-go v1.6.4 // indirect
-	github.com/mattn/go-colorable v0.1.13 // indirect
-	github.com/mattn/go-isatty v0.0.20 // indirect
-	github.com/miekg/dns v1.1.58 // indirect
-	github.com/mimuret/golang-iij-dpf v0.9.1 // indirect
-	github.com/mitchellh/go-homedir v1.1.0 // indirect
-	github.com/mitchellh/go-testing-interface v1.14.1 // indirect
-	github.com/mitchellh/go-wordwrap v1.0.0 // indirect
-	github.com/mitchellh/mapstructure v1.5.0 // indirect
-	github.com/mitchellh/reflectwalk v1.0.2 // indirect
-	github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect
-	github.com/modern-go/reflect2 v1.0.2 // indirect
-	github.com/namedotcom/go v0.0.0-20180403034216-08470befbe04 // indirect
-	github.com/nrdcg/auroradns v1.1.0 // indirect
-	github.com/nrdcg/bunny-go v0.0.0-20230728143221-c9dda82568d9 // indirect
-	github.com/nrdcg/desec v0.7.0 // indirect
-	github.com/nrdcg/dnspod-go v0.4.0 // indirect
-	github.com/nrdcg/freemyip v0.2.0 // indirect
-	github.com/nrdcg/goinwx v0.10.0 // indirect
-	github.com/nrdcg/mailinabox v0.2.0 // indirect
-	github.com/nrdcg/namesilo v0.2.1 // indirect
-	github.com/nrdcg/nodion v0.1.0 // indirect
-	github.com/nrdcg/porkbun v0.3.0 // indirect
-	github.com/nzdjb/go-metaname v1.0.0 // indirect
-	github.com/oklog/run v1.1.0 // indirect
-	github.com/onsi/gomega v1.27.10 // indirect
-	github.com/oracle/oci-go-sdk v24.3.0+incompatible // indirect
-	github.com/ovh/go-ovh v1.4.3 // indirect
-	github.com/patrickmn/go-cache v2.1.0+incompatible // indirect
-	github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 // indirect
-	github.com/pkg/errors v0.9.1 // indirect
-	github.com/pmezard/go-difflib v1.0.0 // indirect
-	github.com/pquerna/otp v1.4.0 // indirect
-	github.com/rogpeppe/go-internal v1.11.0 // indirect
-	github.com/sacloud/api-client-go v0.2.8 // indirect
-	github.com/sacloud/go-http v0.1.6 // indirect
-	github.com/sacloud/iaas-api-go v1.11.1 // indirect
-	github.com/sacloud/packages-go v0.0.9 // indirect
-	github.com/scaleway/scaleway-sdk-go v1.0.0-beta.22 // indirect
-	github.com/sirupsen/logrus v1.9.3 // indirect
-	github.com/smartystreets/go-aws-auth v0.0.0-20180515143844-0c1422d1fdb9 // indirect
-	github.com/softlayer/softlayer-go v1.1.3 // indirect
-	github.com/softlayer/xmlrpc v0.0.0-20200409220501-5f089df7cb7e // indirect
-	github.com/spf13/cast v1.3.1 // indirect
-	github.com/stretchr/objx v0.5.1 // indirect
-	github.com/stretchr/testify v1.8.4 // indirect
-	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.490 // indirect
-	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod v1.0.490 // indirect
-	github.com/transip/gotransip/v6 v6.23.0 // indirect
-	github.com/ultradns/ultradns-go-sdk v1.6.1-20231103022937-8589b6a // indirect
-	github.com/vinyldns/go-vinyldns v0.9.16 // indirect
-	github.com/vmihailenco/msgpack v4.0.4+incompatible // indirect
-	github.com/vmihailenco/msgpack/v5 v5.4.1 // indirect
-	github.com/vmihailenco/tagparser/v2 v2.0.0 // indirect
-	github.com/vultr/govultr/v2 v2.17.2 // indirect
-	github.com/yandex-cloud/go-genproto v0.0.0-20220805142335-27b56ddae16f // indirect
-	github.com/yandex-cloud/go-sdk v0.0.0-20220805164847-cf028e604997 // indirect
-	github.com/zclconf/go-cty v1.14.2 // indirect
-	go.opencensus.io v0.24.0 // indirect
-	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 // indirect
-	go.opentelemetry.io/otel v1.22.0 // indirect
-	go.opentelemetry.io/otel/metric v1.22.0 // indirect
-	go.opentelemetry.io/otel/trace v1.22.0 // indirect
-	go.uber.org/ratelimit v0.2.0 // indirect
-	golang.org/x/crypto v0.21.0 // indirect
-	golang.org/x/mod v0.15.0 // indirect
-	golang.org/x/net v0.23.0 // indirect
-	golang.org/x/oauth2 v0.17.0 // indirect
-	golang.org/x/sys v0.18.0 // indirect
-	golang.org/x/text v0.14.0 // indirect
-	golang.org/x/time v0.5.0 // indirect
-	golang.org/x/tools v0.17.0 // indirect
-	google.golang.org/api v0.162.0 // indirect
-	google.golang.org/appengine v1.6.8 // indirect
-	google.golang.org/genproto v0.0.0-20240227224415-6ceb2ff114de // indirect
-	google.golang.org/genproto/googleapis/api v0.0.0-20240227224415-6ceb2ff114de // indirect
-	google.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de // indirect
-	gopkg.in/ini.v1 v1.67.0 // indirect
-	gopkg.in/ns1/ns1-go.v2 v2.7.13 // indirect
-	gopkg.in/yaml.v2 v2.4.0 // indirect
-	gopkg.in/yaml.v3 v3.0.1 // indirect
-)
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.goreleaser.yml ./vancluever/v2.21.0/.goreleaser.yml
--- ./.goreleaser.yml	1970-01-01 07:30:00.000000000 +0730
+++ ./vancluever/v2.21.0/.goreleaser.yml	2024-04-26 18:07:52.560299129 +0800
@@ -0,0 +1,60 @@
+# Visit https://goreleaser.com for documentation on how to customize this
+# behavior.
+before:
+  hooks:
+    # this is just an example and not a requirement for provider building/publishing
+    - go mod tidy
+builds:
+  - env:
+      # goreleaser does not work with CGO, it could also complicate
+      # usage by users in CI/CD systems like Terraform Cloud where
+      # they are unable to install libraries.
+      - CGO_ENABLED=0
+    mod_timestamp: "{{ .CommitTimestamp }}"
+    flags:
+      - -trimpath
+    ldflags:
+      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
+    goos:
+      - freebsd
+      - windows
+      - linux
+      - darwin
+    goarch:
+      - amd64
+      - "386"
+      - arm
+      - arm64
+    ignore:
+      - goos: darwin
+        goarch: "386"
+    binary: "{{ .ProjectName }}_v{{ .Version }}"
+archives:
+  - format: zip
+    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
+checksum:
+  extra_files:
+    - glob: "terraform-registry-manifest.json"
+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
+  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
+  algorithm: sha256
+signs:
+  - artifacts: checksum
+    args:
+      # if you are using this is a GitHub action or some other automated pipeline, you
+      # need to pass the batch flag to indicate its not interactive.
+      - "--batch"
+      - "--local-user"
+      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
+      - "--output"
+      - "${signature}"
+      - "--detach-sign"
+      - "${artifact}"
+release:
+  extra_files:
+    - glob: "terraform-registry-manifest.json"
+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
+  # If you want to manually examine the release before its live, uncomment this line:
+  # draft: true
+changelog:
+  skip: true
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./go.sum ./vancluever/v2.21.0/go.sum
--- ./go.sum	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/go.sum	2024-04-26 18:07:52.560299129 +0800
@@ -453,9 +453,8 @@
 github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
 github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
 github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
+github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
 github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
-github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
-github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
 github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
 github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
 github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
@@ -588,9 +587,8 @@
 github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
 github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
 github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=
+github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=
 github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
-github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
-github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
 github.com/oracle/oci-go-sdk v24.3.0+incompatible h1:x4mcfb4agelf1O4/1/auGlZ1lr97jXRSSN5MxTgG/zU=
 github.com/oracle/oci-go-sdk v24.3.0+incompatible/go.mod h1:VQb79nF8Z2cwLkLS35ukwStZIg5F66tcBccjip/j888=
 github.com/ovh/go-ovh v1.4.3 h1:Gs3V823zwTFpzgGLZNI6ILS4rmxZgJwJCz54Er9LwD0=
@@ -639,9 +637,8 @@
 github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
 github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
 github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
-github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
-github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=
-github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=
+github.com/rogpeppe/go-internal v1.8.1 h1:geMPLpDpQOgVyCg5z5GoRwLHepNdb71NXb67XFkP+Eg=
+github.com/rogpeppe/go-internal v1.8.1/go.mod h1:JeRgkft04UBgHMgCIwADu4Pn6Mtm5d4nPKWu0nJ5d+o=
 github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
 github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
 github.com/sacloud/api-client-go v0.2.8 h1:tIY6PZNBX900K66TqEPa4d6UIbedUczfCBnPJkzi8kw=
@@ -791,8 +788,8 @@
 golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
 golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=
 golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=
-golang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=
-golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=
+golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=
+golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
 golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
 golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
 golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
@@ -849,8 +846,8 @@
 golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
 golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
 golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=
-golang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=
-golang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=
+golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=
+golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
 golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
 golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
 golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
@@ -922,16 +919,16 @@
 golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=
-golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=
+golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
 golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
 golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
 golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
 golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
 golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
 golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=
-golang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=
-golang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=
+golang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=
+golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./main.go ./vancluever/v2.21.0/main.go
--- ./main.go	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/main.go	2024-04-26 18:07:52.560299129 +0800
@@ -3,9 +3,9 @@
 import (
 	"os"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme"
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/plugin"
-	"github.com/vancluever/terraform-provider-acme/v2/acme"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 func main() {
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./Makefile ./vancluever/v2.21.0/Makefile
--- ./Makefile	2024-04-26 18:06:22.114687786 +0800
+++ ./vancluever/v2.21.0/Makefile	1970-01-01 07:30:00.000000000 +0730
@@ -1,17 +0,0 @@
-# The url of Terraform provider.
-NEW_VERSION ?= v2.21.0
-
-.PHONY: create-patch
-create-patch:
-	diff -ruN --exclude=acme/errorlist.go --exclude=.git/ --exclude=.git  --exclude=.git. . ./vancluever/v2.21.0 > ./patch/subModule1.patch || exit 0
-
-.PHONY: patch-file
-patching-acme:
-	git submodule update --init --recursive
-	-patch -p0  < ./patch/subModule.patch
-	-patch -p0 ./vancluever/v2.21.0/acme/errorlist.go < ./patch/acme.errorlist.go.patch
-
-.PHONY: move-sub-dir-to-main
-move-sub-file:
-	git submodule update --init --recursive
-	rsync -av --progress ./vancluever/v2.21.0/* . --exclude .git --exclude .gitignore --exclude README.md --exclude GNUmakefile --exclude .github/
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/acme.errorlist.go.patch ./vancluever/v2.21.0/patch/acme.errorlist.go.patch
--- ./patch/acme.errorlist.go.patch	2024-04-26 17:21:52.898088602 +0800
+++ ./vancluever/v2.21.0/patch/acme.errorlist.go.patch	1970-01-01 07:30:00.000000000 +0730
@@ -1,32 +0,0 @@
-0a1,31
-> package acme
-> 
-> import "strings"
-> 
-> const (
-> 	ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newAccount"
-> 	ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS     = "429 ::HEAD :: https://acme.zerossl.com/v2/DV90/newNonce"
-> 	ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS = "429 ::GET :: https://acme.zerossl.com/v2/DV90"
-> 	ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS         = "429 ::POST :: https://acme.zerossl.com/v2/DV90/authz"
-> 	ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newOrder"
-> 	ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS       = "429 ::POST :: https://acme.zerossl.com/v2/DV90/account"
-> 	ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/revokeCert"
-> 	ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/chall"
-> 	LETSENCRYPT_ERR_RATE_LIMITED                = "429 :: POST :: https://acme-staging-v02.api.letsencrypt.org/acme/new-acct"
-> 	ERR_TIME_LIMIT_EXCEEDED                     = "time limit exceeded"
-> 	ERR_SERVER_NO_RESPONSE                      = "net/http: timeout awaiting response headers"
-> )
-> 
-> func isAbleToRetry(errCode string) bool {
-> 	return strings.Contains(errCode, ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS) ||
-> 		strings.Contains(errCode, LETSENCRYPT_ERR_RATE_LIMITED) ||
-> 		strings.Contains(errCode, ERR_TIME_LIMIT_EXCEEDED) ||
-> 		strings.Contains(errCode, ERR_SERVER_NO_RESPONSE)
-> }
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/.github.workflows.release.yml.patch ./vancluever/v2.21.0/patch/.github.workflows.release.yml.patch
--- ./patch/.github.workflows.release.yml.patch	2024-04-26 17:21:52.898088602 +0800
+++ ./vancluever/v2.21.0/patch/.github.workflows.release.yml.patch	1970-01-01 07:30:00.000000000 +0730
@@ -1,16 +0,0 @@
-16c16,20
-<       - 'v*'
----
->       - "v*"
-> # Releases need permissions to read and write the repository contents.
-> # GitHub considers creating releases and uploading assets as writing contents.
-> permissions:
->   contents: write
-24c28
-<           go-version: '^1.17.5'
----
->           go-version: "^1.17.5"
-67c71
-<           go-version: '^1.17.5'
----
->           go-version: "^1.17.5"
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/README.md.patch ./vancluever/v2.21.0/patch/README.md.patch
--- ./patch/README.md.patch	2024-04-26 17:21:52.898088602 +0800
+++ ./vancluever/v2.21.0/patch/README.md.patch	1970-01-01 07:30:00.000000000 +0730
@@ -1,27 +0,0 @@
-6c6
-< CA, such as [Let's Encrypt][lets-encrypt].
----
-> CA, such as Let's Encrypt, ZeroSSL and GCP.
-9d8
-< [lets-encrypt]: https://letsencrypt.org
-21,22c20,21
-< Documentation for this provider can be found at
-< https://registry.terraform.io/providers/vancluever/acme/latest/docs.
----
-> This is a forked, reworked repository of Terraform ACME provider by vancluever to provide backoff retry functionalities.
-> Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/vancluever/acme/latest/docs)
-24c23
-< ## License
----
-> ## Retryable Errors
-26,33c25
-< ```
-< Copyright 2018-2023 Chris Marchesi
-< Copyright 2016-2018 PayByPhone Technologies, Inc.
-< 
-< This Source Code Form is subject to the terms of the Mozilla Public
-< License, v. 2.0. If a copy of the MPL was not distributed with this
-< file, You can obtain one at http://mozilla.org/MPL/2.0/.
-<  ```
----
-> Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/subModule1.patch ./vancluever/v2.21.0/patch/subModule1.patch
--- ./patch/subModule1.patch	2024-04-26 18:08:03.559806619 +0800
+++ ./vancluever/v2.21.0/patch/subModule1.patch	1970-01-01 07:30:00.000000000 +0730
@@ -1,3258 +0,0 @@
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/acme_structure.go ./vancluever/v2.21.0/acme/acme_structure.go
---- ./acme/acme_structure.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/acme_structure.go	2024-04-26 18:07:52.556297833 +0800
-@@ -12,6 +12,7 @@
- 	"fmt"
- 	"time"
- 
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/certcrypto"
- 	"github.com/go-acme/lego/v4/certificate"
- 	"github.com/go-acme/lego/v4/lego"
-@@ -20,6 +21,10 @@
- 	"software.sslmate.com/src/go-pkcs12"
- )
- 
-+const (
-+	DefaultMaxElapsedTime = 120 * time.Minute
-+)
-+
- // acmeUser implements acme.User.
- type acmeUser struct {
- 
-@@ -84,17 +89,32 @@
- 		return nil, nil, fmt.Errorf("error getting user data: %s", err.Error())
- 	}
- 
--	client, err := lego.NewClient(expandACMEClient_config(d, meta, user))
--	if err != nil {
--		return nil, nil, err
--	}
-+	var client *lego.Client
- 
--	// Populate user's registration resource if needed
--	if loadReg {
--		user.Registration, err = client.Registration.ResolveAccountByKey()
-+	newClient := func() error {
-+		client, err = lego.NewClient(expandACMEClient_config(d, meta, user))
- 		if err != nil {
--			return nil, nil, err
-+			return err
- 		}
-+
-+		// Populate user's registration resource if needed
-+		if loadReg {
-+			user.Registration, err = client.Registration.ResolveAccountByKey()
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(newClient, reconnectBackoff)
-+	if err != nil {
-+		return nil, nil, err
- 	}
- 
- 	return client, user, nil
-@@ -241,8 +261,11 @@
- 	cert = pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: cb[0].Raw})
- 	certNotAfter = cb[0].NotAfter.Format(time.RFC3339)
- 	issuer = make([]byte, 0)
--	for _, ic := range cb[1:] {
-+	for i, ic := range cb[1:] {
- 		issuer = append(issuer, pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: ic.Raw})...)
-+		if i < len(cb)-2 {
-+			issuer = append(issuer, '\n')
-+		}
- 	}
- 
- 	return
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/certificate_challenges.go ./vancluever/v2.21.0/acme/certificate_challenges.go
---- ./acme/certificate_challenges.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/certificate_challenges.go	2024-04-26 18:07:52.556297833 +0800
-@@ -5,6 +5,8 @@
- 	"strconv"
- 	"time"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
- 	"github.com/go-acme/lego/v4/challenge/http01"
-@@ -15,7 +17,6 @@
- 	"github.com/go-acme/lego/v4/providers/http/webroot"
- 	"github.com/hashicorp/go-multierror"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- // setCertificateChallengeProviders sets all of the challenge providers in the
-@@ -48,7 +49,20 @@
- 			}
- 		}
- 
--		if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
-+		setDns01Provider := func() error {
-+			if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setDns01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -61,7 +75,20 @@
- 			httpServerProvider.SetProxyHeader(proxyHeader.(string))
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err := backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -75,7 +102,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -89,7 +129,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -103,7 +156,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -113,7 +179,20 @@
- 		tlsProvider := tlsalpn01.NewProviderServer(
- 			"", strconv.Itoa(provider.([]interface{})[0].(map[string]interface{})["port"].(int)))
- 
--		if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
-+		setTlsAlpn01Provider := func() error {
-+			if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err := backoff.Retry(setTlsAlpn01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/client.go ./vancluever/v2.21.0/acme/dnsplugin/client.go
---- ./acme/dnsplugin/client.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/client.go	2024-04-26 18:07:52.556297833 +0800
-@@ -8,9 +8,9 @@
- 	"os/exec"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/hashicorp/go-plugin"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- )
- 
- // NewClient creates a new DNS provider instance by dispatching to itself via
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/plugin.go ./vancluever/v2.21.0/acme/dnsplugin/plugin.go
---- ./acme/dnsplugin/plugin.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin.go	2024-04-26 18:07:52.556297833 +0800
-@@ -8,10 +8,10 @@
- 	"os"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
- 	"github.com/hashicorp/go-plugin"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"google.golang.org/grpc"
- 	"google.golang.org/protobuf/types/known/durationpb"
- )
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/dnsplugin/plugin_test.go ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go
---- ./acme/dnsplugin/plugin_test.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go	2024-04-26 18:07:52.556297833 +0800
-@@ -6,9 +6,9 @@
- 	"testing"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/providers/dns/route53"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- )
- 
- var _ = challenge.ProviderTimeout((*DnsProviderClient)(nil))
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/errorlist.go ./vancluever/v2.21.0/acme/errorlist.go
---- ./acme/errorlist.go	1970-01-01 07:30:00.000000000 +0730
-+++ ./vancluever/v2.21.0/acme/errorlist.go	2024-04-26 18:07:52.564300426 +0800
-@@ -0,0 +1,31 @@
-+package acme
-+
-+import "strings"
-+
-+const (
-+	ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newAccount"
-+	ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS     = "429 ::HEAD :: https://acme.zerossl.com/v2/DV90/newNonce"
-+	ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS = "429 ::GET :: https://acme.zerossl.com/v2/DV90"
-+	ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS         = "429 ::POST :: https://acme.zerossl.com/v2/DV90/authz"
-+	ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newOrder"
-+	ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS       = "429 ::POST :: https://acme.zerossl.com/v2/DV90/account"
-+	ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/revokeCert"
-+	ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/chall"
-+	LETSENCRYPT_ERR_RATE_LIMITED                = "429 :: POST :: https://acme-staging-v02.api.letsencrypt.org/acme/new-acct"
-+	ERR_TIME_LIMIT_EXCEEDED                     = "time limit exceeded"
-+	ERR_SERVER_NO_RESPONSE                      = "net/http: timeout awaiting response headers"
-+)
-+
-+func isAbleToRetry(errCode string) bool {
-+	return strings.Contains(errCode, ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS) ||
-+		strings.Contains(errCode, LETSENCRYPT_ERR_RATE_LIMITED) ||
-+		strings.Contains(errCode, ERR_TIME_LIMIT_EXCEEDED) ||
-+		strings.Contains(errCode, ERR_SERVER_NO_RESPONSE)
-+}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/provider_test.go ./vancluever/v2.21.0/acme/provider_test.go
---- ./acme/provider_test.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/provider_test.go	2024-04-26 18:07:52.556297833 +0800
-@@ -12,9 +12,9 @@
- 	"path/filepath"
- 	"testing"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- func testAccProviderAcme() *schema.Provider {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/resource_acme_certificate.go ./vancluever/v2.21.0/acme/resource_acme_certificate.go
---- ./acme/resource_acme_certificate.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/resource_acme_certificate.go	2024-04-26 18:07:52.556297833 +0800
-@@ -7,6 +7,7 @@
- 	"log"
- 	"time"
- 
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/acme"
- 	"github.com/go-acme/lego/v4/certificate"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
-@@ -271,6 +272,12 @@
- 				ValidateFunc: validateRevocationReason,
- 			},
- 		},
-+		Timeouts: &schema.ResourceTimeout{
-+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+		},
- 	}
- }
- 
-@@ -306,11 +313,28 @@
- 		if err != nil {
- 			return err
- 		}
--		cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
--			CSR:            csr,
--			Bundle:         true,
--			PreferredChain: d.Get("preferred_chain").(string),
--		})
-+
-+		obtainCertCSR := func() error {
-+			cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
-+				CSR:            csr,
-+				Bundle:         true,
-+				PreferredChain: d.Get("preferred_chain").(string),
-+			})
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(obtainCertCSR, reconnectBackoff)
-+		if err != nil {
-+			return err
-+		}
- 	} else {
- 		cn := d.Get("common_name").(string)
- 		domains := []string{cn}
-@@ -322,12 +346,28 @@
- 			}
- 		}
- 
--		cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
--			Domains:        domains,
--			Bundle:         true,
--			MustStaple:     d.Get("must_staple").(bool),
--			PreferredChain: d.Get("preferred_chain").(string),
--		})
-+		obtainCert := func() error {
-+			cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
-+				Domains:        domains,
-+				Bundle:         true,
-+				MustStaple:     d.Get("must_staple").(bool),
-+				PreferredChain: d.Get("preferred_chain").(string),
-+			})
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(obtainCert, reconnectBackoff)
-+		if err != nil {
-+			return err
-+		}
- 	}
- 
- 	if err != nil {
-@@ -354,7 +394,21 @@
- 			return err
- 		}
- 
--		srcCR, err := client.Certificate.Get(d.Get("certificate_url").(string), true)
-+		var srcCR *certificate.Resource
-+		getCert := func() error {
-+			srcCR, err = client.Certificate.Get(d.Get("certificate_url").(string), true)
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(getCert, reconnectBackoff)
- 		if err != nil {
- 			// There are probably some cases that we will want to just drop
- 			// the resource if there's been an issue, but seeing as this is
-@@ -454,7 +508,21 @@
- 		return err
- 	}
- 
--	newCert, err := client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
-+	var newCert *certificate.Resource
-+	renewCert := func() error {
-+		newCert, err = client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(renewCert, reconnectBackoff)
- 	if err != nil {
- 		return err
- 	}
-@@ -487,17 +555,43 @@
- 	}
- 
- 	if remaining >= 0 {
--		maybeReason, ok := d.GetOk("revoke_certificate_reason")
--		if ok {
--			reason := RevocationReason(maybeReason.(string))
--			reasonNum, err := GetRevocationReason(reason)
--			if err != nil {
--				return err
-+		revokeCert := func() error {
-+			maybeReason, ok := d.GetOk("revoke_certificate_reason")
-+			if ok {
-+				reason := RevocationReason(maybeReason.(string))
-+				reasonNum, err := GetRevocationReason(reason)
-+				if err != nil {
-+					return err
-+				}
-+				if err = client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum); err != nil {
-+					if isAbleToRetry(err.Error()) {
-+						return err
-+					} else {
-+						return backoff.Permanent(err)
-+					}
-+
-+				}
-+				return nil
- 			}
--			return client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum)
-+
-+			if err = client.Certificate.Revoke(cert.Certificate); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(revokeCert, reconnectBackoff)
-+		if err != nil {
-+			return err
- 		}
--		return client.Certificate.Revoke(cert.Certificate)
- 	}
-+
- 	return nil
- }
- 
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./acme/resource_acme_registration.go ./vancluever/v2.21.0/acme/resource_acme_registration.go
---- ./acme/resource_acme_registration.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/acme/resource_acme_registration.go	2024-04-26 18:07:52.556297833 +0800
-@@ -1,6 +1,7 @@
- package acme
- 
- import (
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/acme"
- 	"github.com/go-acme/lego/v4/registration"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-@@ -57,6 +58,12 @@
- 				Computed: true,
- 			},
- 		},
-+		Timeouts: &schema.ResourceTimeout{
-+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+		},
- 	}
- }
- 
-@@ -69,24 +76,34 @@
- 
- 	var reg *registration.Resource
- 	// If EAB was enabled, register using EAB.
--	if v, ok := d.GetOk("external_account_binding"); ok {
--		reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
--			TermsOfServiceAgreed: true,
--			Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
--			HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
--		})
--	} else {
--		// Normal registration.
--		reg, err = client.Registration.Register(registration.RegisterOptions{
--			TermsOfServiceAgreed: true,
--		})
--	}
--
--	if err != nil {
--		return err
-+	registerAccount := func() error {
-+		if v, ok := d.GetOk("external_account_binding"); ok {
-+			reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
-+				TermsOfServiceAgreed: true,
-+				Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
-+				HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
-+			})
-+		} else {
-+			// Normal registration.
-+			reg, err = client.Registration.Register(registration.RegisterOptions{
-+				TermsOfServiceAgreed: true,
-+			})
-+		}
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
- 	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(registerAccount, reconnectBackoff)
- 
- 	_, user, err := expandACMEClient(d, meta, true)
-+
- 	if err != nil {
- 		return err
- 	}
-@@ -117,7 +134,25 @@
- 		return err
- 	}
- 
--	return client.Registration.DeleteRegistration()
-+	deleteRegistration := func() error {
-+		err := client.Registration.DeleteRegistration()
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(deleteRegistration, reconnectBackoff)
-+	if err != nil {
-+		return err
-+	}
-+
-+	return nil
- }
- 
- func regGone(err error) bool {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/bindata.go ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go
---- ./build-support/generate-dns-providers/bindata.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,299 +0,0 @@
--// Code generated by go-bindata. DO NOT EDIT.
--// sources:
--// templates/dns-provider-doc-template.tmpl (2.14kB)
--// templates/dns-provider-go-template.tmpl (836B)
--
--package main
--
--import (
--	"bytes"
--	"compress/gzip"
--	"crypto/sha256"
--	"fmt"
--	"io"
--	"io/ioutil"
--	"os"
--	"path/filepath"
--	"strings"
--	"time"
--)
--
--func bindataRead(data []byte, name string) ([]byte, error) {
--	gz, err := gzip.NewReader(bytes.NewBuffer(data))
--	if err != nil {
--		return nil, fmt.Errorf("read %q: %w", name, err)
--	}
--
--	var buf bytes.Buffer
--	_, err = io.Copy(&buf, gz)
--	clErr := gz.Close()
--
--	if err != nil {
--		return nil, fmt.Errorf("read %q: %w", name, err)
--	}
--	if clErr != nil {
--		return nil, err
--	}
--
--	return buf.Bytes(), nil
--}
--
--type asset struct {
--	bytes  []byte
--	info   os.FileInfo
--	digest [sha256.Size]byte
--}
--
--type bindataFileInfo struct {
--	name    string
--	size    int64
--	mode    os.FileMode
--	modTime time.Time
--}
--
--func (fi bindataFileInfo) Name() string {
--	return fi.name
--}
--func (fi bindataFileInfo) Size() int64 {
--	return fi.size
--}
--func (fi bindataFileInfo) Mode() os.FileMode {
--	return fi.mode
--}
--func (fi bindataFileInfo) ModTime() time.Time {
--	return fi.modTime
--}
--func (fi bindataFileInfo) IsDir() bool {
--	return false
--}
--func (fi bindataFileInfo) Sys() interface{} {
--	return nil
--}
--
--var _templatesDnsProviderDocTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5d\x6b\xdb\x48\x14\x7d\x9f\x5f\x71\x70\x02\xdb\x1a\x4b\x7e\x37\x74\xc1\x78\x53\x08\x74\x4b\x68\xba\xfb\x62\x4c\x34\x96\xae\xa4\x21\xa3\x19\x31\x33\x72\x6a\x84\xfe\xfb\x72\xe5\x58\x8a\xbc\x8b\x1b\x16\xfa\x64\x4b\x77\xee\xc7\x39\xf7\x9c\x51\x14\x45\xa2\x96\x05\x3d\x05\x15\x34\xad\x30\x6b\xdb\x78\x63\x33\xea\xba\x99\xf0\xcd\x3e\x95\x81\x0a\xeb\x8e\x2b\xcc\xfe\xf8\xfa\x88\x07\x67\x0f\x2a\x23\xe7\x67\x82\x13\x45\xf4\x3b\xbe\x97\x84\xdc\x6a\x6d\x5f\x94\x29\x90\xd9\xb4\xa9\xc8\x04\x19\x94\x35\x50\x1e\xb2\x09\x36\x2a\xc8\x90\x93\x81\x32\xe4\xce\x56\x08\x25\x61\xbd\xf9\xf3\x4e\xd4\xaf\xe5\x7e\xf3\x58\x3f\xdc\x43\xab\xbd\x93\xee\x88\xad\xa6\xc2\xee\x3e\x94\x21\xd4\x7e\xb5\x5c\x16\x36\x92\x69\x45\x71\xa1\x42\xd9\xec\x63\x65\x97\x1c\x5f\x7e\x8c\x81\x47\x5b\x91\xf0\x94\x72\x37\x8f\x4a\x1e\xe1\x28\x27\x87\x60\xc1\x67\x90\x29\x47\x69\xd0\x47\x44\x50\x06\x95\xf5\x01\xa9\xf4\xe4\x17\x3c\x83\x27\x9c\x53\x85\xac\x6b\x7d\xe4\x34\x9e\xed\x3b\x39\x27\x73\xeb\x2a\x9c\x07\x84\xf4\x78\x21\xad\x63\x21\x6e\xd0\xb6\xf1\x57\x59\x51\xd7\x81\x29\xd9\x94\x52\x6b\x32\x05\x0d\xe4\x08\xc1\x9c\x24\x03\x91\x49\x7f\x2e\x1d\xce\x0d\x45\x53\x69\xb0\x27\x34\x9e\x32\x6e\x5d\x93\xeb\x9b\x4e\x4e\x7b\xe4\xd6\x09\x9e\x6a\x9b\x30\x0b\x4f\x29\xb9\xa0\x72\xc5\x8b\x49\x76\x5b\x47\xde\x36\x2e\xa5\x9e\xa1\xe8\x4d\x6c\x87\x73\x08\x2f\x2a\x94\xa2\x6d\x55\x8e\xf8\xaf\x6f\x5f\xba\x6e\x3b\x00\xd8\x7d\x68\xdb\xd3\xbb\x8f\x6d\x4b\xda\x53\xd7\x0d\xb1\xb6\x8d\x40\x26\xeb\xba\x58\x88\x2b\x6d\x56\x88\xe3\xe5\x39\xec\x97\x6f\x42\x71\x95\x09\xf1\xd9\x3a\xa4\xb6\xaa\x35\x05\x82\x32\x8c\xef\x24\x0d\x6b\x50\xda\x17\x86\xdd\x78\x42\x28\x95\x1f\x79\xe1\x81\xfb\x45\x4c\x10\x33\x60\x71\xee\xb4\x80\x27\xc2\xb6\x24\x47\x57\x48\x88\x32\xe3\xa3\x91\xca\xdd\x55\x28\x97\x87\xaf\x22\xbb\x69\xbc\x32\xc5\x45\x8a\x10\x37\x37\xb8\xfb\x21\x19\xae\x10\x49\x92\x94\xa9\x1e\x26\xc6\xec\x72\x7d\x33\xcc\x26\x4f\xad\x00\xe2\x38\x16\x02\xc8\x8c\x7f\x1a\x05\xc3\x01\x8c\xf4\x7c\x9a\x98\x14\xe8\x44\xc7\xcd\x84\xe0\x95\xf1\x96\x37\xd6\xe4\xaa\x68\x5c\xcf\x74\xfc\xe0\xc8\x93\x09\x5d\xc7\xd3\xad\x5d\xd1\xfb\x13\xdf\xd8\x27\x64\x52\x3a\xa9\x75\x74\xb0\x7c\x3d\xe1\xcf\xf2\x24\x15\x4a\x72\xa8\xa5\x67\x9d\x4a\x0f\x32\x07\xe5\xac\xe9\xcb\x1c\xa4\x53\x72\xaf\xd9\x51\xd6\x89\xc1\x6e\xa1\x74\xb6\x29\x5e\x97\x98\xf6\xe3\x24\xd8\x6b\x9b\x3e\xb3\x0f\x43\x49\x62\x9b\x4c\x30\x5e\x93\xf2\x94\xe5\x48\xba\x62\x37\x4c\x39\x96\xfb\x7f\xe6\x88\xc1\x0a\xad\xac\x23\x64\x14\xa4\xd2\xbe\x57\x96\xf8\x85\xca\xea\x01\x5c\x17\xd7\x84\x1a\x21\xee\x0d\x64\x96\x29\xde\xe6\xe2\x62\x3f\x52\x7b\xcb\x4b\xf2\xc1\x3a\xca\x98\x0d\x09\x6d\x53\xa9\x91\x2b\x4d\x8b\xd1\x4a\xb5\x0c\xa5\xf0\x4d\x5d\x6b\x45\x19\xf6\x47\xf4\xff\x8f\xbc\x71\x0e\x0f\x7c\x8e\xde\x7b\xfa\x7c\xff\xe5\x2e\x81\x6f\xf2\x5c\xfd\x88\xf1\x38\xb2\xf2\x2f\x7c\xdc\x8b\x61\x45\x74\x12\xff\x8e\x2f\xad\x13\xab\x6f\x3c\xcf\x1c\xfd\x3c\xf5\x3d\xb6\x3b\xab\xae\xcf\xf6\x51\x6e\x5d\x74\x76\x47\x34\xf0\x23\xda\xd6\x49\xb6\xcf\xed\xf3\x02\xb7\x07\xac\x3e\x5d\x3a\x63\xe3\x28\x23\x13\x94\xd4\xbe\xeb\xc4\x9c\xaf\xec\xdb\x67\xbe\xaf\x23\xb4\xed\xed\x81\xaf\xbe\xe1\x16\xfc\x79\xb5\xf5\xeb\x8a\xa4\x7e\x4f\x31\xf6\xe9\x9d\x39\xfc\x2d\xdd\x5a\x2b\xfe\x24\x75\xdd\x85\x11\x07\x6b\x41\x3a\xc2\x7c\x3e\x7c\x95\x22\x5f\x53\xca\x9c\xcc\xe7\x90\xa7\xe4\x9e\xef\x7e\x8f\x7b\x7b\x20\x91\xbe\x1d\x0c\x07\xa9\x1b\xf2\x2b\xf1\x5f\x10\x2e\x47\x98\xcc\xdd\x17\xef\x4b\x27\x27\x08\xc9\x14\xc3\xf9\x77\x7c\x33\x25\xe1\x9f\x00\x00\x00\xff\xff\x70\x43\x0a\xc4\x5c\x08\x00\x00")
--
--func templatesDnsProviderDocTemplateTmplBytes() ([]byte, error) {
--	return bindataRead(
--		_templatesDnsProviderDocTemplateTmpl,
--		"templates/dns-provider-doc-template.tmpl",
--	)
--}
--
--func templatesDnsProviderDocTemplateTmpl() (*asset, error) {
--	bytes, err := templatesDnsProviderDocTemplateTmplBytes()
--	if err != nil {
--		return nil, err
--	}
--
--	info := bindataFileInfo{name: "templates/dns-provider-doc-template.tmpl", size: 2140, mode: os.FileMode(0644), modTime: time.Unix(1617333386, 0)}
--	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x5b, 0xcd, 0xe4, 0x4f, 0x37, 0x50, 0x30, 0xa6, 0x59, 0xd6, 0xf7, 0xdc, 0xe, 0x7e, 0x58, 0x5d, 0x3a, 0x51, 0x2, 0xf0, 0x33, 0x20, 0xee, 0x77, 0x45, 0xa7, 0xff, 0x31, 0xb8, 0x4c, 0xbd}}
--	return a, nil
--}
--
--var _templatesDnsProviderGoTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\xfa\x14\xd3\x10\x68\x02\x59\xf9\xbe\x90\x43\xd8\x64\x7b\x6a\x08\x2c\xe4\x52\x7a\x98\xb5\xc6\x8e\xb0\x32\x12\x92\xec\x12\x8c\xbe\x7b\x91\x13\xbb\xe9\x9f\x94\x3d\xd9\x33\xd2\xbc\xf7\x7b\xf6\x14\x05\x6c\xda\x68\x9f\x6a\x62\xf2\x18\x49\x41\xa5\x0d\x49\xd8\x5a\x60\x1b\x81\x94\x8e\x52\x38\x2c\x1b\xac\x09\x14\x07\x67\xda\x5a\xb3\x10\xfa\xec\xac\x8f\xb0\x10\xb3\xbe\x9f\xcb\x43\x53\x1f\x30\x9e\x52\x2a\xca\x13\x1a\x43\x5c\xd3\x4c\xf4\xfd\x13\x78\xe4\x9a\x40\x1e\xbc\xed\xb4\x22\x1f\x52\xfa\x73\xc0\x8d\x47\x85\xe2\x50\xf4\xbd\xfc\x62\x0f\x4d\x9d\xd2\x75\x9e\x58\xa5\x24\x96\x42\x14\x45\x76\x1f\x75\x5e\xb1\x8c\xd6\x5f\x5e\x5b\x2e\x41\x07\x40\xa8\x5a\x2e\xa3\xb6\x0c\xf1\x84\x11\x4a\x34\x26\x77\x47\xed\xcf\x21\xcf\x97\x96\x43\xf4\x6d\x9e\x04\x64\x05\x9e\x62\xeb\x39\x40\x3c\xd1\x74\x13\x34\x47\xf2\x15\x96\x24\x45\xbc\x38\x7a\x64\x9a\xfd\x16\x4b\x58\x4c\x71\xa7\x88\x2b\x20\xef\xad\x7f\x84\x7c\xc3\xbd\x15\x55\x46\x31\x06\x6c\x35\x50\x74\x68\xb4\x82\xed\xfe\x6d\xe2\x19\xc0\x43\xeb\xf2\xc7\x26\x05\xef\x17\xd8\xbc\x7c\xdd\x4d\xc7\x52\x74\xe8\xff\xe5\xb2\x86\x33\xba\x6f\x21\x7a\xcd\xf5\xf7\x07\x19\xfa\xff\xfc\x21\xf9\x62\x15\xa5\x34\x7b\xfe\x40\xd2\x9b\x90\xae\x40\xee\xb8\x3b\xa2\xdf\x18\x8d\x81\xb2\xd2\x19\xdd\x8e\x3b\xed\x2d\x9f\x89\xe3\x11\xbd\xc6\x77\x43\x47\x34\x2d\x85\xc5\x1d\xe1\xf5\x71\x0f\x34\x6f\x56\x30\xef\xe0\x79\xfd\xb7\x68\x5e\xa0\x66\x60\xcb\x6f\x5d\x4a\xb3\xd5\xdd\xae\xa4\xe5\x5d\xe1\x06\xc6\xac\xf2\x6b\xb1\xe4\x9e\x7e\x6c\xf7\x6f\x63\x8a\xc5\x52\xe8\x6a\xb8\xf5\x69\x0d\xac\x0d\xf4\xe2\xba\x18\xb9\x18\xc6\x45\x12\x63\xcb\xad\x72\x57\xa4\xdf\x0c\xc5\xcf\x00\x00\x00\xff\xff\xfb\x91\x9c\xf9\x44\x03\x00\x00")
--
--func templatesDnsProviderGoTemplateTmplBytes() ([]byte, error) {
--	return bindataRead(
--		_templatesDnsProviderGoTemplateTmpl,
--		"templates/dns-provider-go-template.tmpl",
--	)
--}
--
--func templatesDnsProviderGoTemplateTmpl() (*asset, error) {
--	bytes, err := templatesDnsProviderGoTemplateTmplBytes()
--	if err != nil {
--		return nil, err
--	}
--
--	info := bindataFileInfo{name: "templates/dns-provider-go-template.tmpl", size: 836, mode: os.FileMode(0644), modTime: time.Unix(1675544429, 0)}
--	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0xaa, 0x46, 0x47, 0x53, 0x35, 0x17, 0x78, 0x2a, 0xea, 0x14, 0x20, 0xac, 0xc3, 0xe2, 0x4c, 0x3e, 0xad, 0x57, 0xe1, 0xac, 0xfa, 0x26, 0xa7, 0xa5, 0x5e, 0x5b, 0x28, 0x7a, 0x67, 0x14, 0xb6}}
--	return a, nil
--}
--
--// Asset loads and returns the asset for the given name.
--// It returns an error if the asset could not be found or
--// could not be loaded.
--func Asset(name string) ([]byte, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
--		}
--		return a.bytes, nil
--	}
--	return nil, fmt.Errorf("Asset %s not found", name)
--}
--
--// AssetString returns the asset contents as a string (instead of a []byte).
--func AssetString(name string) (string, error) {
--	data, err := Asset(name)
--	return string(data), err
--}
--
--// MustAsset is like Asset but panics when Asset would return an error.
--// It simplifies safe initialization of global variables.
--func MustAsset(name string) []byte {
--	a, err := Asset(name)
--	if err != nil {
--		panic("asset: Asset(" + name + "): " + err.Error())
--	}
--
--	return a
--}
--
--// MustAssetString is like AssetString but panics when Asset would return an
--// error. It simplifies safe initialization of global variables.
--func MustAssetString(name string) string {
--	return string(MustAsset(name))
--}
--
--// AssetInfo loads and returns the asset info for the given name.
--// It returns an error if the asset could not be found or
--// could not be loaded.
--func AssetInfo(name string) (os.FileInfo, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
--		}
--		return a.info, nil
--	}
--	return nil, fmt.Errorf("AssetInfo %s not found", name)
--}
--
--// AssetDigest returns the digest of the file with the given name. It returns an
--// error if the asset could not be found or the digest could not be loaded.
--func AssetDigest(name string) ([sha256.Size]byte, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
--		}
--		return a.digest, nil
--	}
--	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
--}
--
--// Digests returns a map of all known files and their checksums.
--func Digests() (map[string][sha256.Size]byte, error) {
--	mp := make(map[string][sha256.Size]byte, len(_bindata))
--	for name := range _bindata {
--		a, err := _bindata[name]()
--		if err != nil {
--			return nil, err
--		}
--		mp[name] = a.digest
--	}
--	return mp, nil
--}
--
--// AssetNames returns the names of the assets.
--func AssetNames() []string {
--	names := make([]string, 0, len(_bindata))
--	for name := range _bindata {
--		names = append(names, name)
--	}
--	return names
--}
--
--// _bindata is a table, holding each asset generator, mapped to its name.
--var _bindata = map[string]func() (*asset, error){
--	"templates/dns-provider-doc-template.tmpl": templatesDnsProviderDocTemplateTmpl,
--	"templates/dns-provider-go-template.tmpl":  templatesDnsProviderGoTemplateTmpl,
--}
--
--// AssetDebug is true if the assets were built with the debug flag enabled.
--const AssetDebug = false
--
--// AssetDir returns the file names below a certain
--// directory embedded in the file by go-bindata.
--// For example if you run go-bindata on data/... and data contains the
--// following hierarchy:
--//     data/
--//       foo.txt
--//       img/
--//         a.png
--//         b.png
--// then AssetDir("data") would return []string{"foo.txt", "img"},
--// AssetDir("data/img") would return []string{"a.png", "b.png"},
--// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
--// AssetDir("") will return []string{"data"}.
--func AssetDir(name string) ([]string, error) {
--	node := _bintree
--	if len(name) != 0 {
--		canonicalName := strings.Replace(name, "\\", "/", -1)
--		pathList := strings.Split(canonicalName, "/")
--		for _, p := range pathList {
--			node = node.Children[p]
--			if node == nil {
--				return nil, fmt.Errorf("Asset %s not found", name)
--			}
--		}
--	}
--	if node.Func != nil {
--		return nil, fmt.Errorf("Asset %s not found", name)
--	}
--	rv := make([]string, 0, len(node.Children))
--	for childName := range node.Children {
--		rv = append(rv, childName)
--	}
--	return rv, nil
--}
--
--type bintree struct {
--	Func     func() (*asset, error)
--	Children map[string]*bintree
--}
--
--var _bintree = &bintree{nil, map[string]*bintree{
--	"templates": {nil, map[string]*bintree{
--		"dns-provider-doc-template.tmpl": {templatesDnsProviderDocTemplateTmpl, map[string]*bintree{}},
--		"dns-provider-go-template.tmpl": {templatesDnsProviderGoTemplateTmpl, map[string]*bintree{}},
--	}},
--}}
--
--// RestoreAsset restores an asset under the given directory.
--func RestoreAsset(dir, name string) error {
--	data, err := Asset(name)
--	if err != nil {
--		return err
--	}
--	info, err := AssetInfo(name)
--	if err != nil {
--		return err
--	}
--	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
--	if err != nil {
--		return err
--	}
--	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
--	if err != nil {
--		return err
--	}
--	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
--}
--
--// RestoreAssets restores an asset under the given directory recursively.
--func RestoreAssets(dir, name string) error {
--	children, err := AssetDir(name)
--	// File
--	if err != nil {
--		return RestoreAsset(dir, name)
--	}
--	// Dir
--	for _, child := range children {
--		err = RestoreAssets(dir, filepath.Join(name, child))
--		if err != nil {
--			return err
--		}
--	}
--	return nil
--}
--
--func _filePath(dir, name string) string {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/main.go ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go
---- ./build-support/generate-dns-providers/main.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,284 +0,0 @@
--//go:generate go-bindata ./templates
--package main
--
--import (
--	"bytes"
--	"encoding/json"
--	"log"
--	"os"
--	"os/exec"
--	"path/filepath"
--	"strings"
--	"text/template"
--
--	"github.com/BurntSushi/toml"
--)
--
--// envVarAliases are Terraform-specific environment variables for
--// specific providers.
--var envVarAliases = map[string]map[string]string{
--	"azure": {
--		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
--		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
--		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
--		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
--		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
--	},
--	"azuredns": {
--		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
--		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
--		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
--		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
--		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
--	},
--}
--
--// providerURLs is a list of providers to override provider pages
--// for. Usually this is just used to provide blank links for
--// anything that would normally just link back to the provider page
--// in lego.
--var providerURLs = map[string]string{
--	"exec":    "",
--	"httpreq": "",
--}
--
--// dnsProviderGoTemplate is the template for
--// dnsProviderGoTemplateText.
--var dnsProviderGoTemplate = template.Must(
--	template.New("dns-provider-go-template").Parse(string(MustAsset("templates/dns-provider-go-template.tmpl"))),
--)
--
--// dnsProviderDocTemplate is the template for DNS provider
--// documentation.
--var dnsProviderDocTemplate = template.Must(
--	template.New("dns-provider-doc-template").Parse(string(MustAsset("templates/dns-provider-doc-template.tmpl"))),
--)
--
--// legoPkgPath is the root lego package path to use.
--const legoPkgPath = "github.com/go-acme/lego/v4"
--
--// Type from "go help mod edit"
--type pkgInfoGoMod struct {
--	Module  pkgInfoModule
--	Go      string
--	Require []pkgInfoRequire
--	Exclude []pkgInfoModule
--	Replace []pkgInfoReplace
--}
--
--// Type from "go help mod edit"
--type pkgInfoModule struct {
--	Path    string
--	Version string
--}
--
--// Type from "go help mod edit"
--type pkgInfoRequire struct {
--	Path     string
--	Version  string
--	Indirect bool
--}
--
--// Type from "go help mod edit"
--type pkgInfoReplace struct {
--	Old pkgInfoModule
--	New pkgInfoModule
--}
--
--type dnsProviderInfo struct {
--	Name          string
--	URL           string
--	Code          string
--	GoPkg         string
--	Additional    string
--	Configuration dnsProviderConfig
--	EnvVarAliases map[string]string
--}
--
--type dnsProviderConfig struct {
--	Credentials map[string]string
--	Additional  map[string]string
--}
--
--func (c dnsProviderConfig) Present() bool {
--	return len(c.Credentials) > 0 || len(c.Additional) > 0
--}
--
--// execCommand is a exec.Cmd builder that just sets the error stream
--// to stderr.
--func execCommand(cmd string, args ...string) *exec.Cmd {
--	c := exec.Command(cmd, args...)
--	c.Stderr = os.Stderr
--	return c
--}
--
--// loadProviders loads all of the provider information from the
--// provider TOML files.
--func loadProviders() []dnsProviderInfo {
--	out, err := execCommand("go", "mod", "edit", "-json").Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	var info pkgInfoGoMod
--	if err := json.Unmarshal(out, &info); err != nil {
--		log.Fatal(err)
--	}
--
--	var version string
--	for _, req := range info.Require {
--		if req.Path == legoPkgPath {
--			version = req.Version
--			break
--		}
--	}
--
--	if version == "" {
--		log.Fatalf("package %q not found in go.mod, cannot get version", legoPkgPath)
--	}
--
--	out, err = execCommand("go", "env", "GOPATH").Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	pkgDir := filepath.Join(
--		strings.TrimSpace(string(out)), "pkg", "mod", strings.ReplaceAll(legoPkgPath, "/", string(os.PathSeparator))+"@"+version)
--
--	// Check to see if this is actually a directory, in case it's not
--	// in the cache.
--	fi, err := os.Stat(pkgDir)
--	if err != nil {
--		if os.IsNotExist(err) {
--			err := execCommand("go", "mod", "download", legoPkgPath+"@"+version).Run()
--			if err != nil {
--				log.Fatal(err)
--			}
--
--			// Get fileinfo again and fail 100% if still error
--			fi, err = os.Stat(pkgDir)
--			if err != nil {
--				log.Fatal(err)
--			}
--		} else {
--			log.Fatal(err)
--		}
--	}
--
--	if !fi.Mode().IsDir() {
--		log.Fatalf("not a directory: %q", pkgDir)
--	}
--
--	// Start loading in the TOML files
--	var result []dnsProviderInfo
--	rootDir := filepath.Join(pkgDir, "providers", "dns")
--	if err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {
--		if err != nil {
--			return err
--		}
--
--		if filepath.Ext(path) != ".toml" {
--			return nil
--		}
--
--		var p dnsProviderInfo
--		_, err = toml.DecodeFile(path, &p)
--		if err != nil {
--			return err
--		}
--
--		// We work off of Go packages to find the metadata, but some
--		// packages have different codes (ie: acme-dns for acmedns in Go)
--		// so we need to save the provider as the package name.
--		p.GoPkg, err = filepath.Rel(rootDir, filepath.Dir(path))
--		if err != nil {
--			return err
--		}
--
--		// Environment variable aliases if we have them (ie: azure)
--		if aliases, ok := envVarAliases[p.Code]; ok {
--			p.EnvVarAliases = aliases
--		}
--
--		// Check for a provider URL override
--		if url, ok := providerURLs[p.Code]; ok {
--			p.URL = url
--		}
--
--		// A couple of docs have hugo template artifacts that could use
--		// stripping, just do this for "notice" for now which seems to be
--		// the only one that's in use.
--		p.Additional = strings.ReplaceAll(
--			p.Additional, "{{% notice note %}}\n", "-> **NOTE**: ")
--		p.Additional = strings.ReplaceAll(
--			p.Additional, "{{% /notice %}}\n", "")
--
--		result = append(result, p)
--		return nil
--	}); err != nil {
--		log.Fatal(err)
--	}
--
--	return result
--}
--
--// generateGo generates the factory template file.
--func generateGo(providers []dnsProviderInfo) {
--	b := new(bytes.Buffer)
--	if err := dnsProviderGoTemplate.Execute(b, struct {
--		PkgPath   string
--		Providers []dnsProviderInfo
--	}{
--		PkgPath:   legoPkgPath,
--		Providers: providers,
--	}); err != nil {
--		log.Fatal(err)
--	}
--
--	cmd := execCommand("gofmt")
--	cmd.Stdin = b
--	out, err := cmd.Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	if err := os.WriteFile(os.Args[2], out, 0666); err != nil {
--		log.Fatal(err)
--	}
--}
--
--// generateProviderDocs generates each of the provider documentation
--// pages.
--func generateProviderDocs(providers []dnsProviderInfo) {
--	for _, provider := range providers {
--		b := new(bytes.Buffer)
--		if err := dnsProviderDocTemplate.Execute(b, provider); err != nil {
--			log.Fatal(err)
--		}
--
--		path := filepath.Join(os.Args[2], "dns-providers-"+provider.Code+".md")
--		if err := os.WriteFile(path, b.Bytes(), 0666); err != nil {
--			log.Fatal(err)
--		}
--
--		log.Println("wrote", provider.Code, "documentation to:", path)
--	}
--}
--
--func main() {
--	if len(os.Args) < 3 {
--		log.Fatal("usage: generate-dns-providers [go | doc ] PATH")
--	}
--
--	providers := loadProviders()
--	switch os.Args[1] {
--	case "go":
--		generateGo(providers)
--
--	case "doc":
--		generateProviderDocs(providers)
--
--	default:
--		log.Fatal("usage: generate-dns-providers [go | doc] PATH")
--	}
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl
---- ./build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	1970-01-01 07:30:00.000000000 +0730
-@@ -1,67 +0,0 @@
-----
--page_title: "{{.Code}}"
--subcategory: "DNS Providers"
-----
--
---> The following documentation is auto-generated from the ACME
--provider's API library [lego](https://go-acme.github.io/lego/).  Some
--sections may refer to lego directly - in most cases, these sections
--apply to the Terraform provider as well.
--
--# {{.Name}} DNS Challenge Provider
--
--The `{{.Code}}` DNS challenge provider can be used to perform DNS challenges for
--the [`acme_certificate`][resource-acme-certificate] resource with
--{{if .URL}}[{{.Name}}]({{.URL}}){{else}}{{.Name}}{{- end}}.
--
--[resource-acme-certificate]: ../resources/certificate.md
--
--For complete information on how to use this provider with the `acme_certifiate`
--resource, see [here][resource-acme-certificate-dns-challenges].
--
--[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
--
--## Example
--
--```hcl
--resource "acme_certificate" "certificate" {
--  ...
--
--  dns_challenge {
--    provider = "{{.Code}}"
--  }
--}
--```
--
--{{- if .Configuration.Present}}
--## Argument Reference
--
--The following arguments can be either passed as environment variables, or
--directly through the `config` block in the
--[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
--[`acme_certificate`][resource-acme-certificate] resource. For more details, see
--[here][resource-acme-certificate-dns-challenges].
--
--[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
--
--In addition, arguments can also be stored in a local file, with the path
--supplied by supplying the argument with the `_FILE` suffix. See
--[here][acme-certificate-file-arg-example] for more information.
--
--[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
--{{range $k, $v := .Configuration.Credentials}}
--* `{{$k}}` - {{$v}}.
--{{- end}}
--{{range $k, $v := .Configuration.Additional}}
--* `{{$k}}` - {{$v}}.
--{{- end}}
--{{if .EnvVarAliases}}
--The following variables are **Terraform-specific** aliases for the above
--configuration values:
--
--{{range $k, $v := .EnvVarAliases}}
--* `{{$k}}` - alias for `{{$v}}`.
--{{- end}}
--{{end}}
--{{- end}}
--{{.Additional}}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl
---- ./build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	1970-01-01 07:30:00.000000000 +0730
-@@ -1,35 +0,0 @@
--// Auto-generated file. Do not edit.
--package dnsplugin
--
--import (
--"{{$.PkgPath}}/challenge"
--{{- range .Providers}}
--"{{$.PkgPath}}/providers/dns/{{.GoPkg}}"
--{{- end}}
--)
--
--// dnsProviderFactoryFunc is a function that calls a provider's
--// constructor and returns the provider interface.
--type dnsProviderFactoryFunc func() (challenge.Provider, error)
--
--// dnsProviderFactory is a factory for all of the valid DNS providers
--// supported by ACME provider.
--var dnsProviderFactory = map[string]dnsProviderFactoryFunc {
--{{- range .Providers}}
--"{{.Code}}": func() (challenge.Provider, error) {
--{{- if .EnvVarAliases}}
--mapEnvironmentVariableValues(map[string]string{
--{{- range $k, $v := .EnvVarAliases}}
--"{{$k}}": "{{$v}}",
--{{- end}}
--})
--{{- end}}
--p, err := {{.GoPkg}}.NewDNSProvider()
--if err != nil {
--return nil, err
--}
--
--return p, nil
--},
--{{- end}}
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/go-version-for-workflow/main.go ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go
---- ./build-support/go-version-for-workflow/main.go	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,16 +0,0 @@
--package main
--
--import (
--	"fmt"
--	"runtime"
--	"strings"
--)
--
--func main() {
--	versionStr := strings.TrimPrefix(runtime.Version(), "go")
--	if len(strings.Split(versionStr, ".")) == 2 {
--		versionStr += ".0"
--	}
--
--	fmt.Println(versionStr)
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/pebblecfg/basic.json ./vancluever/v2.21.0/build-support/pebblecfg/basic.json
---- ./build-support/pebblecfg/basic.json	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/pebblecfg/basic.json	1970-01-01 07:30:00.000000000 +0730
-@@ -1,12 +0,0 @@
--{
--  "pebble": {
--    "listenAddress": "0.0.0.0:14000",
--    "managementListenAddress": "0.0.0.0:15000",
--    "certificate": "test/certs/localhost/cert.pem",
--    "privateKey": "test/certs/localhost/key.pem",
--    "httpPort": 5002,
--    "tlsPort": 5001,
--    "ocspResponderURL": "",
--    "externalAccountBindingRequired": false
--  }
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/pebblecfg/eab.json ./vancluever/v2.21.0/build-support/pebblecfg/eab.json
---- ./build-support/pebblecfg/eab.json	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/pebblecfg/eab.json	1970-01-01 07:30:00.000000000 +0730
-@@ -1,16 +0,0 @@
--{
--  "pebble": {
--    "listenAddress": "0.0.0.0:14001",
--    "managementListenAddress": "0.0.0.0:15001",
--    "certificate": "test/certs/localhost/cert.pem",
--    "privateKey": "test/certs/localhost/key.pem",
--    "httpPort": 6002,
--    "tlsPort": 6001,
--    "ocspResponderURL": "",
--    "externalAccountBindingRequired": true,
--    "externalAccountMACKeys": {
--      "kid-1": "zWNDZM6eQGHWpSRTPal5eIUYFTu7EajVIoguysqZ9wG44nMEtx3MUAsUDkMTQ12W",
--      "kid-2": "b10lLJs8l1GPIzsLP0s6pMt8O0XVGnfTaCeROxQM0BIt2XrJMDHJZBM5NuQmQJQH"
--    }
--  }
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/provider-local-testing/dev.tfrc ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc
---- ./build-support/provider-local-testing/dev.tfrc	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc	1970-01-01 07:30:00.000000000 +0730
-@@ -1,7 +0,0 @@
--provider_installation {
--  dev_overrides {
--    "vancluever/acme" = "/tmp/terraform-provider-acme"
--  }
--
--  direct {}
--}
-\ No newline at end of file
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/memcached-start.sh ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh
---- ./build-support/scripts/memcached-start.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,15 +0,0 @@
--#!/usr/bin/env bash
--
--case "$(uname)" in
--  "Darwin")
--    brew list memcached > /dev/null 2>&1 || brew install memcached
--    brew services run memcached
--    ;;
--
--  *)
--    # Assuming Ubuntu as that's what our CI runs on. YMMV here, might
--    # need to expand this into a separate function for distribution
--    # detection if need be.
--    sudo apt-get update && sudo apt-get -y install memcached && sudo /etc/init.d/memcached start
--    ;;
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/memcached-stop.sh ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh
---- ./build-support/scripts/memcached-stop.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,10 +0,0 @@
--#!/usr/bin/env bash
--
--case "$(uname)" in
--  "Darwin")
--    brew services stop memcached || exit 0
--    ;;
--
--  *)
--    echo "stopping unsupported on this system, please stop manually."
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-challtest-dns.sh ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh
---- ./build-support/scripts/pebble-challtest-dns.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,21 +0,0 @@
--#!/usr/bin/env bash
--
--OP="$1"
--REC="$2"
--DATA="$3"
--
--set -e
--
--case "${OP}" in
--  present)
--    curl -q -X POST -d "{\"host\":\"${REC}\", \"value\": \"${DATA}\"}" \
--      http://localhost:8055/set-txt
--    ;;
--  cleanup)
--    curl -q -X POST -d "{\"host\":\"${REC}\"}" \
--      http://localhost:8055/clear-txt
--    ;;
--  *)
--    echo "error: invalid command ${OP}">&2
--    exit 1
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-start.sh ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh
---- ./build-support/scripts/pebble-start.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,82 +0,0 @@
--#!/usr/bin/env bash
--
--set -e
--
--GOPATH="$(go env GOPATH)"
--PEBBLE_VERSION="2.3.1"
--# config files are relative to script dir
--PEBBLE_CFGFILE="../pebblecfg/basic.json"
--PEBBLE_PIDFILE="/tmp/pebble.pid"
--PEBBLE_LOGFILE="/tmp/pebble.log"
--# config files are relative to script dir
--PEBBLE_EAB_CFGFILE="../pebblecfg/eab.json"
--PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
--PEBBLE_EAB_LOGFILE="/tmp/pebble-eab.log"
--PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
--PEBBLE_CHALLTESTSRV_LOGFILE="/tmp/pebble-challtestsrv.log"
--PEBBLE_CHALLTESTSRV_DNS_SERVER="0.0.0.0:5553"
--PEBBLE_SRC="https://github.com/letsencrypt/pebble.git"
--PEBBLE_DIR="src/github.com/letsencrypt/pebble"
--PEBBLE_CA_CERT="test/certs/pebble.minica.pem"
--
--# Calculate path names
--BASIC_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_CFGFILE})"
--EAB_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_EAB_CFGFILE})"
--
--# Enable alternate roots
--export PEBBLE_ALTERNATE_ROOTS="1"
--
--if [ "$1" == "--install" ]; then
--  INSTALL="yes"
--fi
--
--if [ ! -d "${GOPATH}/${PEBBLE_DIR}" ] || [ "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-parse HEAD)" != "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-list -n 1 "tags/v${PEBBLE_VERSION}")" ]; then
--  echo "pebble source code missing or incorrect version, forcing install."
--  INSTALL="yes"
--fi
--
--if [ "${INSTALL}" == "yes" ]; then
--  cd "${GOPATH}"
--  rm -rf "${PEBBLE_DIR}"
--  git clone "${PEBBLE_SRC}" "${PEBBLE_DIR}"
--  cd "${PEBBLE_DIR}"
--  git checkout "v${PEBBLE_VERSION}"
--  go install ./...
--else
--  cd "${GOPATH}/${PEBBLE_DIR}"
--  if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
--    echo "rebuilding ${GOPATH}/bin/pebble and ${GOPATH}/bin/pebble-challtestsrv from cache."
--    go install ./...
--  fi
--fi
--
--if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
--  echo "${GOPATH}/bin/pebble or ${GOPATH}/bin/pebble-challtestsrv missing; error happened in installation.">&2
--  exit 1
--fi
--
--pebble-challtestsrv -dns01 "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -http01 "" -tlsalpn01 "" > "${PEBBLE_CHALLTESTSRV_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_CHALLTESTSRV_PIDFILE}"
--# Basic Pebble instance
--pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${BASIC_CFG}" > "${PEBBLE_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_PIDFILE}"
--# EAB pebble instance
--pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${EAB_CFG}" > "${PEBBLE_EAB_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_EAB_PIDFILE}"
--cat << EOS
--
--pebble instances (and pebble-challtestsrv) started.
--
--pebble PID:              ${PEBBLE_PIDFILE} (PID $(cat ${PEBBLE_PIDFILE}))
--pebble Log:              ${PEBBLE_LOGFILE}
--pebble PID (EAB):        ${PEBBLE_EAB_PIDFILE} (PID $(cat ${PEBBLE_EAB_PIDFILE}))
--pebble Log (EAB):        ${PEBBLE_EAB_LOGFILE}
--pebble-challtestsrv PID: ${PEBBLE_CHALLTESTSRV_PIDFILE} (PID $(cat ${PEBBLE_CHALLTESTSRV_PIDFILE}))
--pebble-challtestsrv Log: ${PEBBLE_CHALLTESTSRV_LOGFILE}
--Configured DNS server:   ${PEBBLE_CHALLTESTSRV_DNS_SERVER}
--Repository directory:    ${GOPATH}/${PEBBLE_DIR}
--Config file:             ${BASIC_CFG}
--Config file (EAB):       ${EAB_CFG}
--Root CA certificate:     ${GOPATH}/${PEBBLE_DIR}/${PEBBLE_CA_CERT}
--
--EOS
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/pebble-stop.sh ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh
---- ./build-support/scripts/pebble-stop.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,76 +0,0 @@
--#!/usr/bin/env bash
--
--PEBBLE_PIDFILE="/tmp/pebble.pid"
--PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
--PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
--
--PEBBLE_ERROR="false"
--PEBBLE_EAB_ERROR="false"
--PEBBLE_CHALLTESTSRV_ERROR="false"
--
--PEBBLE_PID=""
--if [ -f "${PEBBLE_PIDFILE}" ]; then
--  PEBBLE_PID="$(cat "${PEBBLE_PIDFILE}")"
--fi
--
--PEBBLE_EAB_PID=""
--if [ -f "${PEBBLE_EAB_PIDFILE}" ]; then
--  PEBBLE_EAB_PID="$(cat "${PEBBLE_EAB_PIDFILE}")"
--fi
--
--PEBBLE_CHALLTESTSRV_PID=""
--if [ -f "${PEBBLE_CHALLTESTSRV_PIDFILE}" ]; then
--  PEBBLE_CHALLTESTSRV_PID="$(cat "${PEBBLE_CHALLTESTSRV_PIDFILE}")"
--fi
--
--if [ -z "${PEBBLE_PID}" ] && [ -z "${PEBBLE_EAB_PID}" ] && [ -z "${PEBBLE_CHALLTESTSRV_PID}" ]; then
--  echo "no pebble instances nor pebble-challtestsrv are running; do not need to stop.">&2
--  exit 0
--fi
--
--# pebble
--if [ -n "${PEBBLE_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_PID}" -o comm=)" != "pebble" ]; then
--    echo "error: stale PID file ${PEBBLE_PIDFILE}; PID ${PEBBLE_PID} not found or is not \"pebble\".">&2
--    PEBBLE_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_PID}" && \
--      echo "pebble (PID ${PEBBLE_PID}) stopped." && \
--      rm "${PEBBLE_PIDFILE}"
--  fi
--fi
--
--# pebble (EAB)
--
--if [ -n "${PEBBLE_EAB_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_EAB_PID}" -o comm=)" != "pebble" ]; then
--    echo "error: stale PID file ${PEBBLE_EAB_PIDFILE}; PID ${PEBBLE_EAB_PID} not found or is not \"pebble\".">&2
--    PEBBLE_EAB_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_EAB_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_EAB_PID}" && \
--      echo "pebble (PID ${PEBBLE_EAB_PID}) stopped." && \
--      rm "${PEBBLE_EAB_PIDFILE}"
--  fi
--fi
--
--# pebble-challtestsrv
--if [ -n "${PEBBLE_CHALLTESTSRV_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_CHALLTESTSRV_PID}" -o comm=)" != "pebble-challtestsrv" ]; then
--    echo "error: stale PID file ${PEBBLE_CHALLTESTSRV_PIDFILE}; PID ${PEBBLE_CHALLTESTSRV_PID} not found or not \"pebble-challtestsrv\".">&2
--    PEBBLE_CHALLTESTSRV_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_CHALLTESTSRV_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_CHALLTESTSRV_PID}" && \
--      echo "pebble-challtestsrv (PID ${PEBBLE_CHALLTESTSRV_PID}) stopped." && \
--      rm "${PEBBLE_CHALLTESTSRV_PIDFILE}"
--  fi
--fi
--
--if [ "${PEBBLE_ERROR}" == "true" ] || [ "${PEBBLE_EAB_ERROR}" == "true" ] || [ "${PEBBLE_CHALLTESTSRV_ERROR}" == "true" ]; then
--  exit 1
--fi
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./build-support/scripts/release.sh ./vancluever/v2.21.0/build-support/scripts/release.sh
---- ./build-support/scripts/release.sh	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/release.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,98 +0,0 @@
--#!/usr/bin/env bash
--
--# message prints text with a color, redirected to stderr in the event of
--# warning or error messages.
--message() {
--  declare -A __colors=(
--    ["error"]="31"   # red
--    ["warning"]="33" # yellow
--    ["begin"]="32"   # green
--    ["ok"]="32"      # green
--    ["info"]="1"     # bold
--    ["reset"]="0"    # here just to note reset code
--  )
--  local __type="$1"
--  local __message="$2"
--  if [ -z "${__colors[$__type]}" ]; then
--    __type="info"
--  fi
--  if [[ "${__type}" == "error" ]]; then
--    echo -e "\e[${__colors[$__type]}m${__message}\e[0m" 1>&2
--  else
--    echo -e "\e[${__colors[$__type]}m${__message}\e[0m"
--  fi
--}
--
--if [[ "$(head -n 1 CHANGELOG.md | cut -d ' ' -f 3-)" != "(Unreleased)" ]]; then
--  message error "The changelog must have \"Unreleased\" in brackets next to its version number in order to be used by this tool."
--  exit 1
--fi
--
--release=$(head -n 1 CHANGELOG.md | awk '{print $2}')
--IFS="." read -r -a semver <<< "${release}"
--major="${semver[0]}"
--minor="${semver[1]}"
--IFS="-+" read -r -a patchpremeta <<< "${semver[2]}"
--patch="${patchpremeta[0]}"
--extra="${patchpremeta[1]}"
--
--for x in "${major}" "${minor}" "${patch}"; do 
--  if ! [ "${x}" -eq "${x}" ]; then
--    message error "${release} is not a proper semantic-versioned release."
--    message error "Please update the first line in CHANGELOG.md to a numeric MAJOR.MINOR.PATCH version."
--    exit 1
--  fi
--done
--
--if [[ "${extra}" == "pre" ]]; then
--  message error "Pre-releases tagged as \"pre\" are not supported. Release aborted."
--  message error "Please update the first line in CHANGELOG.md to a version without the -pre tag,"
--  message error "or use a different pre-release tag (i.e. beta)."
--  exit 1
--fi
--
--
--if [[ -t 0 ]]; then
--  message warning "You are releasing: ${release}"
--  message warning "Type \"yes\" to continue, anything else to abort."
--  prompt="$(message info "Continue?")"
--  read -r -p "${prompt} " confirm
--  if [[ "${confirm}" != "yes" ]]; then
--    message error "Release aborted."
--    exit 1
--  fi
--fi
--
--set -e
--
--# Timestamp and update version in changelog
--message begin "==> Timetsamping current release in CHANGELOG.md <=="
--current_date="$(date "+%B %e, %Y" | sed -E -e 's/  / /')"
--echo -e "## ${release} (${current_date})\n$(tail -n +2 CHANGELOG.md)" > CHANGELOG.md
--
--message begin "==> Committing CHANGELOG.md <=="
--git add CHANGELOG.md
--git commit -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
--
--message begin "==> Tagging Release v${release} <=="
--git tag "v${release}" -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
--
--if [[ "${extra}" != "" ]]; then
--  # We just drop the pre-release tags from the release information and don't increment.
--  message warning "NOTE: extra pre-release and metadata tags have been dropped from new version."
--  message warning "Manual modification may be necessary post-release."
--fi
--  
--new_prerelease="${semver[0]}.${semver[1]}.$((semver[2]+1))-pre"
--
--message begin "==> Bumping CHANGELOG.md to Release v${new_prerelease} <=="
--echo -e "## ${new_prerelease} (Unreleased)\n\nBumped version for dev.\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
--
--git add CHANGELOG.md
--git commit -m "Bump CHANGELOG.md to v${new_prerelease}"
--
--message begin "==> Pushing Commits and Tags <=="
--git push origin "$(git ls-remote --symref origin HEAD | head -n1 | awk '{print $2}')"
--git push origin --tags
--
--message ok "\nRelease v${release} successful."
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./CHANGELOG.md ./vancluever/v2.21.0/CHANGELOG.md
---- ./CHANGELOG.md	2024-04-26 18:07:21.593801524 +0800
-+++ ./vancluever/v2.21.0/CHANGELOG.md	1970-01-01 07:30:00.000000000 +0730
-@@ -1,800 +0,0 @@
--## 2.21.1-pre (Unreleased)
--
--Bumped version for dev.
--
--## 2.21.0 (March 11, 2024)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.16.1 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.16.1/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.20.2 (February 13, 2024)
--
--This is a re-release to address the expired Terraform registry key due with
--release issues with key ID 1D9DFB214E18E085. The new key ID is
--974239543C576C78. No other changes are being made.
--
--
--## 2.20.1 (February 13, 2024)
--
--This is a release to address the expired Terraform registry key (key ID
--F282F2CFA56C3D69). The new key ID is 1D9DFB214E18E085. No other changes are
--being made.
--
--## 2.20.0 (January 29, 2024)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.15.0 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.15.0/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.19.1 (January 23, 2024)
--
--BUG FIXES:
--
--* `resource/acme_registration`: Fixed a situation where certain errors during
--  creation of the resource may result in "inconsistent result after apply" in
--  Terraform instead of the actual error.
--  [#375](https://github.com/vancluever/terraform-provider-acme/pull/375)
--
--## 2.19.0 (December 7, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the ability to specify a revocation
--  reason.
--  [#364](https://github.com/vancluever/terraform-provider-acme/issues/364) 
--
--## 2.18.0 (September 21, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `cert_timeout` option to control the
--  timeout of HTTP requests used to obtain the certificate after challenges are
--  complete.
--  [#349](https://github.com/vancluever/terraform-provider-acme/issues/349) 
--
--## 2.17.2 (September 20, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.14.2 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.2/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.17.1 (September 11, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: `azuredns` DNS provider now has the same
--  environment variable aliasing as the old `azure` provider.
--  [#342](https://github.com/vancluever/terraform-provider-acme/issues/342) 
--
--## 2.17.0 (August 22, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.14.0 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.0/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--FEATURES:
--
--* `resource/acme_certificate`: New HTTP challenge type `http_s3_challenge`,
--  which will allow publishing HTTP challenge records to an S3 bucket.
--  [#330](https://github.com/vancluever/terraform-provider-acme/pull/330)
--
--## 2.16.1 (August 11, 2023)
--
--This change is being made to correct build issues. No other changes are being
--made.
--
--## 2.16.0 (August 11, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.13.3 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.13.3/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.15.1 (June 19, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.12.2 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.2/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--This lego update contains a critical fix to the `dnsmadeeasy` DNS provider,
--ensuring that it does not delete all records in a zone during cleanup.
--[go-acme/lego#1939](https://github.com/go-acme/lego/pull/1939)
--
--## 2.15.0 (June 14, 2023)
--
--This update is a full release of [2.15.0-beta1](#2150-beta1-june-13-2023),
--including the lego update and the bug fix for the `recursive_nameservers`
--setting. See that release for more details.
--
--## 2.15.0-beta1 (June 13, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.12.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: DNS plugins should now respect the setting of
--  `recursive_nameservers` again.
--  [#316](https://github.com/vancluever/terraform-provider-acme/pull/316)
--
--## 2.14.0 (May 5, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.11.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.11.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.13.1 (February 23, 2023)
--
--This is a security fix to address
--[CVE-2022-41723](https://github.com/advisories/GHSA-vvpx-j8f3-3w6h). No other
--changes have been made.
--
--## 2.13.0 (February 18, 2023)
--
--This update is a full release of [2.13.0-beta1](#2130-beta1-february-5-2023) and
--[2.13.0-beta2](#2130-beta2-february-11-2023), including the new DNS provider
--plugin system, and lego v4.10.0. See those releases for more details.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: New DNS providers and documentation for v4.10.0
--  should now be properly generated.
--
--## 2.13.0-beta2 (February 11, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.10.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.10.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The new DNS plugin system now implements
--  challenge provider timeouts properly.
--  [#277](https://github.com/vancluever/terraform-provider-acme/pull/277)
--
--## 2.13.0-beta1 (February 5, 2023)
--
--NEW DNS PLUGIN SYSTEM
--
--This update moves DNS providers for the `acme_certificate` resource into a
--[go-plugin](https://github.com/hashicorp/go-plugin) backed sub-plugin built into
--the provider. One provider is executed for each instance of a DNS provider
--supplied in `acme_certificate`, each with its own environment. This fixes a
--long-running issue where the environment variables set in the `config` parameter
--of one provider in one resource would overwrite the settings of another resource
--with different config settings for the same DNS provider. See
--[#235](https://github.com/vancluever/terraform-provider-acme/issues/235) and
--[#276](https://github.com/vancluever/terraform-provider-acme/pull/276) for more
--details.
--
--## 2.12.0 (Dec 21, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.9.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.11.1 (Oct 8, 2022)
--
--This update is a bugfix to correct the fact that the provider was not fully
--synced with the lego updates when 2.11.0 was released. No other changes were
--made.
--
--## 2.11.0 (Oct 8, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.9.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `certificate_not_after` attribute to
--  show the certificate expiry date in state.
--  [#264](https://github.com/vancluever/terraform-provider-acme/pull/264)
--
--## 2.10.0 (Jul 5, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.8.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.8.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.9.0 (May 30, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.7.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.7.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.8.0 (January 24, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.6.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.6.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.7.1 (December 10, 2021)
--
--This is a patch version bump to build with the latest version of Go to address
--CVE-2021-44716.
--
--Note that this update is being made proactively and not in response to any known
--security issue. The ACME provider would normally only use `net/http` in HTTP
--challenges.
--
--No other changes are being made.
--
--## 2.7.0 (November 15, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: New flag `revoke_certificate_on_destroy` to
--  control if certificates are revoked on destroy. Default is `true`, keeping
--  with existing behaviour.
--  [#192](https://github.com/vancluever/terraform-provider-acme/issues/192) 
--
--## 2.6.0 (October 6, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.5.3 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.5.3/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.5.3 (August 10, 2021)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected an issue where `preferred_chain` was
--  not working for certificates that used an external CSR.
--  [#199](https://github.com/vancluever/terraform-provider-acme/issues/199)
--
--## 2.5.2 (June 9, 2021)
--
--This is another re-issue of v2.5.0 due to a goreleaser config issue. No other
--changes have been made.
--
--## 2.5.1 (June 9, 2021)
--
--This is a re-issue of 2.5.0 without freebsd/arm support, which has been
--suspended due to build issues for the time being. No other changes have been
--made.
--
--## 2.5.0 (June 9, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.4.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.4.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.4.0 (April 4, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: The resource now supports HTTP-01 and
--  TLS-ALPN-01 challenges again. These are done through the `http_challenge`,
--  `http_webroot_challenge`, `http_memcached_challenge`, and `tls_challenge`
--  challenge types. It is still recommended that you use DNS challenges whenever
--  possible. See the documentation for more details.
--  [#169](https://github.com/vancluever/terraform-provider-acme/pull/169)
--
--## 2.3.0 (March 19, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `preferred_chain` option to allow for
--  the selection of alternate certificate chains offered by the CA.
--  [#161](https://github.com/vancluever/terraform-provider-acme/issues/161)
--
--## 2.2.0 (March 12, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.3.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.3.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.1.2 (February 22, 2021)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The resource no longer always expects two
--  certificates (ie: a single intermediate certificate). All intermediate
--  certificates are now concatenated in `issuer_pem`. The `certificate_p12`
--  should contain all issuer certificates as well.
--  [#154](https://github.com/vancluever/terraform-provider-acme/issues/154)
--
--## 2.1.1 (February 11, 2021)
--
--This is a simple version bump to fix documentation on the Terraform Registry. No
--changes are being made.
--
--## 2.1.0 (February 10, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.2.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/16660b2/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.0.0 (December 23, 2020)
--
--BREAKING CHANGES:
--
--* `resource/acme_certificate`: The resource ID is now a state-local UUID, not
--  the same as `certificate_url`. This is to prevent drift issues during renewal.
--  If you need the URL for the current version of the certificate, use the
--  `certificate_url` field.
--  [#103](https://github.com/vancluever/terraform-provider-acme/issues/103)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `pre_check_delay` option to allow for
--  the insertion of delays in DNS challenges. This should help with DNS
--  propagation issues with certain providers.
--  [#111](https://github.com/vancluever/terraform-provider-acme/pull/111)
--* `resource/acme_certificate`: The domain defined in the `common_name` field can
--  now be specified in `subject_alternative_names`. This is a strictly semantic
--  change as the CN is already included in the SAN list of issued certificates.
--  [#90](https://github.com/vancluever/terraform-provider-acme/issues/90)
--
--## 1.6.3 (November 30, 2020)
--
--This is (yet another) simple version bump to attempt to fix documentation on the
--Terraform Registry. No changes are being made.
--
--## 1.6.2 (November 30, 2020)
--
--This is (another) simple version bump to attempt to fix documentation on the
--Terraform Registry. No changes are being made.
--
--## 1.6.1 (November 27, 2020)
--
--This is a simple version bump to attempt to fix documentation on the Terraform
--Registry. No changes are being made.
--
--## 1.6.0 (November 27, 2020)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.1.3 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.1.3/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--GENERAL NOTIFICATIONS:
--
--* Testing of the provider has moved to use
--  [pebble](https://github.com/letsencrypt/pebble/) exclusively. Tests for some
--  features that are not explicitly supported by pebble or were otherwise tested
--  manually have been removed. See
--  [`907de66`](https://github.com/vancluever/terraform-provider-acme/commit/907de66625886fbd86b383cb158515ef458f3604)
--  for more details.
--* Support for Terraform 0.11 has been dropped. The provider is now only
--  available on the Terraform registry.
--
--FEATURES:
--
--* `resource/acme_registration`: Added support for external account binding. This
--  allows registrations to be linked to external accounts, commonly used by
--  commercial CAs.
--* `resource/acme_certificate`: Added the `disable_complete_propagation` option,
--  which allows one to disable the propagation pre-check before attempting to
--  complete the DNS challenge. Enabling this is only recommended for testing.
--
--## 1.5.0 (October 21, 2019)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v3.1.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.1.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library. ([#92](https://github.com/terraform-providers/terraform-provider-acme/issues/92))
--
--## 1.4.0 (August 20, 2019)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v3.0.0 (from v2.5.0
--in provider version 1.2.0). See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.0.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library. ([#82](https://github.com/terraform-providers/terraform-provider-acme/issues/82))
--
--Starting with this release, all DNS providers and documentation for the DNS
--providers will be auto-generated, so the lego CHANGELOG will be the place to
--look for lego-specific changes in the future.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: When renewing certificate, private keys and CSRs
--  will now only be set if they are present in the state. This may correct some
--  library-related issues during the renewal process. ([#84](https://github.com/terraform-providers/terraform-provider-acme/issues/84))
--* `resource/acme_registration`: Unknown or deactivated registrations will now be
--  removed from state on refresh. ([#85](https://github.com/terraform-providers/terraform-provider-acme/issues/85))
--
--## 1.3.5 (July 30, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Expired certificates flagged for renewal will now
--  properly renew on the next `terraform apply` on Terraform 0.12.0 and higher.
--  ([#77](https://github.com/terraform-providers/terraform-provider-acme/issues/77))
--
--## 1.3.4 (June 06, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: All computed attributes associated with a
--  certificate are now marked for re-generation when a certificate needs to be
--  renewed. While this was previously happening in reality, this was not being
--  reflected in the plan. ([#64](https://github.com/terraform-providers/terraform-provider-acme/issues/64))
--
--## 1.3.3 (May 29, 2019)
--
--This update is a Terraform 0.12 support build for the changes from 1.3.2.
--
--## 1.3.2 (May 28, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected an issue where `certificate_pem` would
--  be deleted from state on certificate renew failure. ([#60](https://github.com/terraform-providers/terraform-provider-acme/issues/60))
--* `resource/acme_certificate`: The resource will now attempt to recover the
--  `certificate_pem` field from the CA if it is missing in state. ([#59](https://github.com/terraform-providers/terraform-provider-acme/issues/59))
--
--## 1.3.1 (May 23, 2019)
--
--IMPROVEMENTS:
--
--* The provider now will log lego's log messages when `TF_LOG=debug` or higher is
--  set. ([#53](https://github.com/terraform-providers/terraform-provider-acme/issues/53))
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected state migration issues that were
--  causing the resource to not function at all in Terraform 0.12. ([#57](https://github.com/terraform-providers/terraform-provider-acme/issues/57))
--* `resource/acme_certificate`: Corrected state migration issues that may have
--  triggered an update of settings due to incorrect migration of the
--  `recursive_nameservers` attribute on Terraform 0.11. ([#55](https://github.com/terraform-providers/terraform-provider-acme/issues/55))
--
--## 1.3.0 (May 17, 2019)
--
--BREAKING CHANGES: 
--
--* `resource/acme_certificate`: The `recursive_nameservers` option for checking
--  propagation of DNS challenge records has been promoted to a top-level option
--  and is no longer provided as part of an individual `dns_challenge` block.
--  ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
--
--FEATURES:
--
--* `resource/acme_certificate`: This resource now supports multiple DNS
--  challenges for working with multiple primary DNS providers. ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
--
--## 1.2.1 (May 14, 2019)
--
--FEATURES:
--
--* The plugin has been updated to support Terraform 0.12 and higher. Backwards
--  compatibility has been maintained to Terraform 0.11.x and earlier versions
--  that support plugin protocol version 4. ([#45](https://github.com/terraform-providers/terraform-provider-acme/issues/45))
--
--## 1.2.0 (May 14, 2019)
--
--LEGO UPDATE AND NEW DNS PROVIDERS:
--
--[lego](https://github.com/go-acme/lego) has been updated to v2.5.0. See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/master/CHANGELOG.md#v250---2019-04-17) for more details. ([#47](https://github.com/terraform-providers/terraform-provider-acme/issues/47))
--
--The update brings the following new DNS providers:
--
--* `cloudns`
--* `dode`
--* `oraclecloud`
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: The default `min_days_remaining` is now set to 30
--  days, up from 7. ([#48](https://github.com/terraform-providers/terraform-provider-acme/issues/48))
--
--## 1.1.2 (May 06, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Revocation on destroy now skips expired
--  certificates. ([#42](https://github.com/terraform-providers/terraform-provider-acme/issues/42))
--
--## 1.1.1 (March 12, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Added the optional `certificate_p12_password`
--  field, used when creating the PFX bundle found in `certificate_p12`. ([#35](https://github.com/terraform-providers/terraform-provider-acme/issues/35))
--* `resource/acme_certificate`: `certificate_p12` base64 data is now padded and
--  should be usable by Azure services that take PKCS12 data. ([#34](https://github.com/terraform-providers/terraform-provider-acme/issues/34))
--
--## 1.1.0 (March 01, 2019)
--
--LEGO UPDATE AND NEW DNS PROVIDERS:
--
--[lego](https://github.com/go-acme/lego) has been updated to v2.2.0.
--
--As part of this update, a number of new DNS providers have been added for
--`acme_certificate`:
--
--* `acmedns`
--* `alidns`
--* `conoha`
--* `designate`
--* `dreamhost`
--* `hostingde`
--* `httpreq`
--* `iij`
--* `inwx`
--* `linodev4`
--* `mydnsjp`
--* `netcup`
--* `nifcloud`
--* `sakuracloud`
--* `selectel`
--* `stackpath`
--* `transip`
--* `vegadns`
--* `vscale`
--* `zoneee`
--
--Thanks very much to @yamamoto-febc ([#10](https://github.com/terraform-providers/terraform-provider-acme/issues/10)) and @bzub ([#17](https://github.com/terraform-providers/terraform-provider-acme/issues/17)), ([#18](https://github.com/terraform-providers/terraform-provider-acme/issues/18)) for the
--help with documentation, code updates, and module migration work!
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: Added the `recursive_nameservers` attribute to
--  the `dns_challenge` block. This allows someone to specify a static resolver
--  list for DNS propagation checks that will override the resolvers of the system
--  running Terraform. This can be useful when dealing with split horizon DNS
--  scenarios. ([#25](https://github.com/terraform-providers/terraform-provider-acme/issues/25))
--* `resource/acme_certificate`: Added the `certificate_p12` output, which makes
--  the certificate, intermediate CA, and private key available in a PFX PKCS12
--  archive. This can be useful when working with Microsoft products.  ([#26](https://github.com/terraform-providers/terraform-provider-acme/issues/26))
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Modifications to the `dns_challenge`
--  configuration will now persist across no-op updates. Additionally,
--  modification of these values will no longer force a new resource. ([#28](https://github.com/terraform-providers/terraform-provider-acme/issues/28))
--
--## 1.0.1 (August 08, 2018)
--
--This is release bump for the sole purpose of releasing the provider upstream. As
--of this release, you will be able to fetch this project directly via Terraform!
--
--## 1.0.0 (Jun 17, 2018)
--
--BREAKING CHANGES:
--
--* The provider has now been updated for ACME v2 and will no longer work for ACME
--  v1. If you require v1, use version 0.6.0 of the provider.
--* Existing states for `acme_registration` and `acme_certificate` will be
--  preserved on update and there should be no need to re-create either
--  registrations or certificates, so long as the CA supports it. Let's Encrypt
--  supports these updates.
--* Several fields have been removed and the resource relationships have changed.
--  For full details, see the documentation.
--* `server_url` is now a provider-level configuration value. The documentation
--  has several full examples of this in action.
--* `resource/acme_certificate`: The `http_challenge_port` and
--  `tls_challenge_port` parameters have been removed. The resource now only
--  supports DNS challenges, so `dns_challenge` is now a required field.
--  [#40][gh-40]
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: With the update to ACME v2, this resource now
--  supports wildcard certificates.
--* `resource/acme_registration`: This resource will now completely remove a
--  registration from the ACME server when the resource is destroyed. [#39][gh-39]
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The post-revocation OCSP validation has been
--  completely removed. This should make destruction of the resource much more
--  reliable. [#41][gh-41]
--
--[gh-41]: https://github.com/vancluever/terraform-provider-acme/pull/41
--[gh-40]: https://github.com/vancluever/terraform-provider-acme/pull/40
--[gh-39]: https://github.com/vancluever/terraform-provider-acme/pull/39
--
--## 0.6.0
--
--**NOTE:** This is the last major release before 1.0.0, which will include
--support for ACME v2 and will more than likely break support for ACME v1. If you
--require ACME v1 after 1.0.0, use this version of the provider.
--
--NEW DNS PROVIDERS:
--
--The `acme_certificate` resource has had a provider refresh, with the following
--new providers added:
--
--* `bluecat`
--* `cloudxns`
--* `duckdns`
--* `fastdns`
--* `gandiv5`
--* `glesys`
--* `lightsail`
--* `namedotcom`
--* `exec`
--
--These providers, and previous providers, have been synchronized with their state
--at lego version [v0.5.0][lego-dns-providers-v0.5.0].
--
--[lego-dns-providers-v0.5.0]: https://github.com/xenolf/lego/tree/v0.5.0/providers/dns
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: This resource now supports supplying the `delete`
--  [resource timeout][resource-timeouts] timeout, which controls the certificate
--  revocation timeout (or more specifically, the OCSP wait timeout).
--  ([#32][gh-32])
--* `resource/acme_certificate`: Added alias mappings for the Azure DNS provider's
--  environment variables so that the same environment variables for the
--  [Terraform Azure Provider][tf-azurerm-provider] can be used with the ACME
--  plugin. ([#36][gh-36])
--* `resource/acme_certificate`: Already revoked certificates are ignored by the
--  destroy process, ensuring that they are destroyed without error in Terraform.
--  ([#33][gh-33])
--* `resource/acme_certificate`: The `config` field of `dns_challenge` has now
--  been marked as a sensitive field to prevent credentials from being leaked in
--  output. ([#31][gh-31])
--
--[resource-timeouts]: https://www.terraform.io/docs/configuration/resources.html#timeouts
--[tf-azurerm-provider]: https://www.terraform.io/docs/providers/azurerm/index.html
--[gh-36]: https://github.com/vancluever/terraform-provider-acme/pull/36
--[gh-33]: https://github.com/vancluever/terraform-provider-acme/pull/33
--[gh-32]: https://github.com/vancluever/terraform-provider-acme/pull/32
--[gh-31]: https://github.com/vancluever/terraform-provider-acme/pull/31
--
--## 0.5.0
--
--Most of the items in this release are the result of a refresh of lego, which
--brings the following new features, amongst others:
--
-- * DNSimple API now supports V2.
-- * You can now supply `AWS_HOSTED_ZONE_ID` to the route53 DNS challenge to
--   directly specify the zone ID for the DNS challenge, instead of getting the
--   provider to try and detect it.
-- * New DNS challenge providers: `azure`, `auroradns`, `dnspod`, `exoscale`,
--   `godaddy`, `linode`, `rackspace`, `ns1`, and `otc`.
--
--## v0.4.0
--
--### General Information
--
-- * Releases are no longer signed. SHA256SUMS are still published, however, and
--   signing may come back under a more general signing key. Keep this in mind if
--   you need earlier releases as well.
-- * Built against Terraform v0.10.0-beta2 with the [custom diff
--   patch](https://github.com/hashicorp/terraform/pull/14887). Although the
--   plugin API version has not yet changed, YMMV with using this on Terraform
--   versions below v0.10.0-beta2. See below for details on why we are using the
--   custom diff patch.
--
--### New Diff Behaviour for Certificate Renewals
--
--The correctness of the certificate renewal behaviour in this resource has been a
--long-running problem, due to the fact that certificates were renewed during the
--refresh cycle. This caused silent updates and empty diffs unless you had
--resources in the same stack that depended on the certificates. In addition to
--this, this has led to issues with implementing settings like
--`min_days_remaining` in a way that made its setting effective on the present run
--without `ForceNew`. These issues are articulated in #13 and #15.
--
--As of this version, these issues are no longer a problem. Using the
--aforementioned custom diff patch, the certificate's expiry is now checked during
--the diff phase of a `terraform plan`, articulated below:
--
--```
--The Terraform execution plan has been generated and is shown below.
--Resources are shown in alphabetical order for quick scanning. Green resources
--will be created (or destroyed and then created if an existing resource
--exists), yellow resources are being changed in-place, and red resources
--will be destroyed. Cyan entries are data sources to be read.
--
--Note: You didn't specify an "-out" parameter to save this plan, so when
--"apply" is called, Terraform can't guarantee this is what will execute.
--
--  ~ acme_certificate.certificate
--      certificate_pem: "-----BEGIN CERTIFICATE-----
--xxxxxxx
-------END CERTIFICATE-----
--" => "<computed>"
--```
--
--If the certificate requires renewal, `certificate_pem` is set to `<computed>`
--and correctly renewed during the next `terraform apply` run.
--
--This also means that setting `min_days_remaining` no longer forces a new
--resource and also works immediately - if you adjust it, its settings will work
--during your next plan.
--
--## v0.3.0
--
--Fully updated version, supporting v0.9.0. Make sure you use this version for the
--full v0.9.0 release, as v0.3.0-beta2 will not work (the plugin API version has
--been incremented again). People still on versions of TF before v0.9.0 should use
--a v0.2.x version.
--
--## v0.3.0-beta2
--
--This beta version tracks Terraform `v0.9.0`, which as of this writing (Feb 28th,
--2017) is currently in beta. All that has changed so far on this side is that we
--need to rebuild as the plugin API has again changed.
--
--## v0.2.1
--
--This is a bugfix to correct #6 and ensure that TF will abort if a DNS challenge
--is improperly configured (example: missing credentials). Previous to this
--release if the DNS challenge could not be properly set up, the plugin would have
--proceeded with an HTTP or TLS challenge.
--
--## v0.2.0
--
--Note that this release is built for Terraform v0.8.0 and higher - using with
--v0.7.x and lower may not work. Use the v0.1.0 release instead.
--
-- * Added the `must_staple` option - this option adds the [OCSP Stapling
--   Required][1] extension to created certificates, ensuring that a valid OCSP
--   Staple must be included in the TLS handshake for the connection to proceed.
--   This is disabled by default. This option has no effect when being used with
--   external CSRs.
--
--[1]: https://letsencrypt.org/docs/integration-guide/#implement-ocsp-stapling
--
--## v0.1.0
--
--Initial release.
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./docs/index.md ./vancluever/v2.21.0/docs/index.md
---- ./docs/index.md	2024-04-26 18:07:21.601804364 +0800
-+++ ./vancluever/v2.21.0/docs/index.md	2024-04-26 18:07:52.560299129 +0800
-@@ -53,7 +53,7 @@
- terraform {
-   required_providers {
-     acme = {
--      source  = "vancluever/acme"
-+      source  = "Kid-debug/acme"
-       version = "~> 2.0"
-     }
-   }
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./docs/resources/certificate.md ./vancluever/v2.21.0/docs/resources/certificate.md
---- ./docs/resources/certificate.md	2024-04-26 18:07:21.601804364 +0800
-+++ ./vancluever/v2.21.0/docs/resources/certificate.md	2024-04-26 18:07:52.560299129 +0800
-@@ -450,7 +450,7 @@
-   to grant escalated network privileges to either Terraform (`setcap
-   'cap_net_bind_service=+eip' "$(which terraform)"`), or the provider (`setcap
-   'cap_net_bind_service=+ep'
--  .terraform/providers/registry.terraform.io/vancluever/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
-+  .terraform/providers/registry.terraform.io/Kid-debug/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
-   Both have drawbacks: granting capabilites to Terraform itself will mean that
-   Terraform core and any provider launched by it will also have the capability,
-   while capabilities granted to the provider will be lost every time the
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.envrc ./vancluever/v2.21.0/.envrc
---- ./.envrc	1970-01-01 07:30:00.000000000 +0730
-+++ ./vancluever/v2.21.0/.envrc	2024-04-26 18:07:21.589800106 +0800
-@@ -0,0 +1 @@
-+use flake
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.github/workflows/release.yml ./vancluever/v2.21.0/.github/workflows/release.yml
---- ./.github/workflows/release.yml	2024-04-26 17:58:30.826828382 +0800
-+++ ./vancluever/v2.21.0/.github/workflows/release.yml	2024-04-26 18:07:21.589800106 +0800
-@@ -1,48 +1,73 @@
- # This GitHub action can publish assets for release when a tag is created.
- # Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
- #
--# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your
-+# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your 
- # private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
- # secret. If you would rather own your own GPG handling, please fork this action
- # or use an alternative one for key handling.
- #
--# You will need to pass the `--batch` flag to `gpg` in your signing step
-+# You will need to pass the `--batch` flag to `gpg` in your signing step 
- # in `goreleaser` to indicate this is being used in a non-interactive mode.
- #
- name: release
- on:
-   push:
--    # branches:
--    #   - main
-     tags:
--      - "v*"
--
--# Releases need permissions to read and write the repository contents.
--# GitHub considers creating releases and uploading assets as writing contents.
--permissions:
--  contents: write
--
-+      - 'v*'
- jobs:
-+  test:
-+    runs-on: ubuntu-latest
-+    steps:
-+      - uses: actions/checkout@v4
-+      - uses: actions/setup-go@v5
-+        with:
-+          go-version: '^1.17.5'
-+          check-latest: true
-+      - name: Cache (Go Modules)
-+        uses: actions/cache@v4
-+        env:
-+          cache-name: go-mod-cache
-+        with:
-+          path: /home/runner/go/pkg/mod
-+          key: ${{ env.cache-name}}-${{ hashFiles('go.sum') }}
-+          restore-keys: |
-+            ${{ env.cache-name}}-
-+      - name: Cache (Go Build)
-+        uses: actions/cache@v4
-+        env:
-+          cache-name: go-build-cache
-+          cache-dir: /home/runner/.cache/go-build
-+        with:
-+          path: ${{ env.cache-dir }}
-+          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
-+          restore-keys: |
-+            ${{ env.cache-name}}-
-+      - name: Cache (Pebble)
-+        uses: actions/cache@v4
-+        env:
-+          cache-name: pebble-cache
-+          cache-dir: /home/runner/go/src/github.com/letsencrypt/pebble
-+        with:
-+          path: ${{ env.cache-dir }}
-+          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
-+          restore-keys: |
-+            ${{ env.cache-name}}-
-+      - name: Verify Modules
-+        run: go mod verify
-+      - name: Run Tests
-+        run: make tools pebble-start memcached-start test
-+
-   goreleaser:
-+    needs: test
-     runs-on: ubuntu-latest
--    # defaults:
--    #   run:
--    #     working-directory: ./vancluever/v2.21.0
-     steps:
-       - uses: actions/checkout@v4
--      - uses: actions/setup-go@v4
-+      - uses: actions/setup-go@v5
-         with:
--          go-version: "^1.21.0"
-+          go-version: '^1.17.5'
-           check-latest: true
--      - name: mov-sub-to-main
--        run: |
--          make move-sub-file
--      - name: patching
--        run: |
--          make patching-acme
--          ls
-       - name: Cache (Go Modules)
--        uses: actions/cache@v3
-+        uses: actions/cache@v4
-         env:
-           cache-name: go-mod-cache
-         with:
-@@ -51,7 +76,7 @@
-           restore-keys: |
-             ${{ env.cache-name}}-
-       - name: Cache (Go Build)
--        uses: actions/cache@v3
-+        uses: actions/cache@v4
-         env:
-           cache-name: go-build-cache
-           cache-dir: /home/runner/.cache/go-build
-@@ -61,22 +86,17 @@
-           restore-keys: |
-             ${{ env.cache-name}}-
-       - run: go mod verify
--        env:
--          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
--          GITHUB_ACTOR: ${{github.actor}}
--          GITHUB_REPOSITORY: ${{github.repository}}
-       - name: Import GPG key
-         id: import_gpg
-         uses: paultyng/ghaction-import-gpg@v2.1.0
-         env:
-           GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
-           PASSPHRASE: ${{ secrets.PASSPHRASE }}
--      - run: ls
-       - name: Run GoReleaser
-         uses: goreleaser/goreleaser-action@v5.0.0
-         with:
-           version: latest
--          args: release --clean --timeout 60m0s --skip=validate
-+          args: release --clean --timeout 60m0s
-         env:
--          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
-           GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
-+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.gitmodules ./vancluever/v2.21.0/.gitmodules
---- ./.gitmodules	2024-04-26 17:23:10.538990167 +0800
-+++ ./vancluever/v2.21.0/.gitmodules	1970-01-01 07:30:00.000000000 +0730
-@@ -1,3 +0,0 @@
--[submodule "vancluever/v2.21.0"]
--	path = vancluever/v2.21.0
--	url = https://github.com/vancluever/terraform-provider-acme.git
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./GNUmakefile ./vancluever/v2.21.0/GNUmakefile
---- ./GNUmakefile	1970-01-01 07:30:00.000000000 +0730
-+++ ./vancluever/v2.21.0/GNUmakefile	2024-04-26 18:07:21.593801524 +0800
-@@ -0,0 +1,91 @@
-+# Test all packages by default
-+TEST ?= ./...
-+
-+ifeq ($(shell go env GOOS),darwin)
-+SEDOPTS = -i ''
-+else
-+SEDOPTS = -i
-+endif
-+
-+GOWORKFLOWVERSION=$(shell go run ./build-support/go-version-for-workflow)
-+
-+.PHONY: default
-+default: build
-+
-+.PHONY: tools
-+tools:
-+	cd $(shell go env GOROOT) && go install github.com/hashicorp/go-bindata/go-bindata@latest && go install gotest.tools/gotestsum@latest
-+
-+.PHONY: pebble-start-install
-+pebble-start-install: pebble-stop
-+	build-support/scripts/pebble-start.sh --install
-+
-+.PHONY: pebble-start
-+pebble-start: pebble-stop
-+	build-support/scripts/pebble-start.sh
-+
-+.PHONY: pebble-stop
-+pebble-stop:
-+	build-support/scripts/pebble-stop.sh
-+
-+.PHONY: memcached-start
-+memcached-start: memcached-stop
-+	build-support/scripts/memcached-start.sh
-+
-+.PHONY: memcached-stop
-+memcached-stop:
-+	build-support/scripts/memcached-stop.sh
-+
-+.PHONY: stop-services
-+stop-services: memcached-stop pebble-stop
-+
-+.PHONY: template-generate
-+template-generate:
-+	@echo "==> Re-generating templates..."
-+	@go generate ./build-support/generate-dns-providers
-+
-+.PHONY: provider-generate
-+provider-generate:
-+	@echo "==> Re-generating Go DNS provider factory in ./acme..."
-+	@go generate ./acme/dnsplugin
-+	@go build ./acme/dnsplugin
-+	@go mod tidy
-+	@echo "==> Re-genrating documentation..."
-+	@rm -f docs/guides/dns-providers-*.md
-+	@go run ./build-support/generate-dns-providers doc docs/guides/
-+
-+.PHONY: provider-generate-update
-+provider-generate-update: provider-generate
-+	test -z "$$(git diff acme docs)" || \
-+		{ git add acme docs && \
-+		git commit -m "re-generate lego DNS provider data"; }
-+
-+.PHONY: proto
-+proto:
-+	cd proto/ && buf generate
-+
-+.PHONY: build
-+build:
-+	go install
-+
-+.PHONY: release
-+release:
-+	build-support/scripts/release.sh
-+
-+.PHONY: build-pre-release
-+build-pre-release:
-+	mkdir -p /tmp/terraform-provider-acme/
-+	go build -o /tmp/terraform-provider-acme/terraform-provider-acme
-+
-+.PHONY: clean-pre-release
-+clean-pre-release:
-+	rm -rf /tmp/terraform-provider-acme/
-+
-+.PHONY: test
-+test:
-+	TF_LOG=debug TF_ACC=1 gotestsum --format=short-verbose $(TEST) $(TESTARGS)
-+
-+.PHONY: go-version-sync
-+go-version-sync:
-+	sed $(SEDOPTS) -e "s/go-version:.*\$$/go-version: '^$(GOWORKFLOWVERSION)'/g" .github/workflows/*.yml
-+	git add .github/workflows/*.yml && git commit -m "workflows: update Go to version $(GOWORKFLOWVERSION)"
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./go.mod ./vancluever/v2.21.0/go.mod
---- ./go.mod	2024-04-26 18:07:21.601804364 +0800
-+++ ./vancluever/v2.21.0/go.mod	2024-04-26 18:07:52.560299129 +0800
-@@ -1,11 +1,10 @@
--module github.com/vancluever/terraform-provider-acme/v2
-+module github.com/Kid-debug/terraform-provider-acme/v2
- 
--go 1.21
--
--toolchain go1.21.0
-+go 1.21.0
- 
- require (
- 	github.com/BurntSushi/toml v1.3.2
-+	github.com/cenkalti/backoff/v4 v4.2.1
- 	github.com/davecgh/go-spew v1.1.1
- 	github.com/go-acme/lego/v4 v4.16.1
- 	github.com/google/go-cmp v0.6.0
-@@ -19,195 +18,3 @@
- 	google.golang.org/protobuf v1.33.0
- 	software.sslmate.com/src/go-pkcs12 v0.4.0
- )
--
--require (
--	cloud.google.com/go/compute v1.24.0 // indirect
--	cloud.google.com/go/compute/metadata v0.2.3 // indirect
--	github.com/AdamSLevy/jsonrpc2/v14 v14.1.0 // indirect
--	github.com/Azure/azure-sdk-for-go v68.0.0+incompatible // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/azcore v1.6.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.3.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/internal v1.3.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns v1.1.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns v1.1.0 // indirect
--	github.com/Azure/go-autorest v14.2.0+incompatible // indirect
--	github.com/Azure/go-autorest/autorest v0.11.29 // indirect
--	github.com/Azure/go-autorest/autorest/adal v0.9.22 // indirect
--	github.com/Azure/go-autorest/autorest/azure/auth v0.5.12 // indirect
--	github.com/Azure/go-autorest/autorest/azure/cli v0.4.5 // indirect
--	github.com/Azure/go-autorest/autorest/date v0.3.0 // indirect
--	github.com/Azure/go-autorest/autorest/to v0.4.0 // indirect
--	github.com/Azure/go-autorest/logger v0.2.1 // indirect
--	github.com/Azure/go-autorest/tracing v0.6.0 // indirect
--	github.com/AzureAD/microsoft-authentication-library-for-go v1.0.0 // indirect
--	github.com/OpenDNS/vegadns2client v0.0.0-20180418235048-a3fa4a771d87 // indirect
--	github.com/ProtonMail/go-crypto v1.1.0-alpha.0 // indirect
--	github.com/agext/levenshtein v1.2.2 // indirect
--	github.com/akamai/AkamaiOPEN-edgegrid-golang v1.2.2 // indirect
--	github.com/aliyun/alibaba-cloud-sdk-go v1.61.1755 // indirect
--	github.com/andres-erbsen/clock v0.0.0-20160526145045-9e14626cd129 // indirect
--	github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect
--	github.com/aws/aws-sdk-go-v2 v1.24.1 // indirect
--	github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect
--	github.com/aws/aws-sdk-go-v2/config v1.26.6 // indirect
--	github.com/aws/aws-sdk-go-v2/credentials v1.16.16 // indirect
--	github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/lightsail v1.34.0 // indirect
--	github.com/aws/aws-sdk-go-v2/service/route53 v1.37.0 // indirect
--	github.com/aws/aws-sdk-go-v2/service/s3 v1.48.1 // indirect
--	github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect
--	github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect
--	github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect
--	github.com/aws/smithy-go v1.19.0 // indirect
--	github.com/boombuler/barcode v1.0.1 // indirect
--	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
--	github.com/civo/civogo v0.3.11 // indirect
--	github.com/cloudflare/circl v1.3.7 // indirect
--	github.com/cloudflare/cloudflare-go v0.86.0 // indirect
--	github.com/cpu/goacmedns v0.1.1 // indirect
--	github.com/deepmap/oapi-codegen v1.9.1 // indirect
--	github.com/dimchansky/utfbom v1.1.1 // indirect
--	github.com/dnsimple/dnsimple-go v1.2.0 // indirect
--	github.com/exoscale/egoscale v0.102.3 // indirect
--	github.com/fatih/color v1.16.0 // indirect
--	github.com/fatih/structs v1.1.0 // indirect
--	github.com/felixge/httpsnoop v1.0.4 // indirect
--	github.com/fsnotify/fsnotify v1.7.0 // indirect
--	github.com/ghodss/yaml v1.0.0 // indirect
--	github.com/go-errors/errors v1.0.1 // indirect
--	github.com/go-jose/go-jose/v4 v4.0.1 // indirect
--	github.com/go-logr/logr v1.4.1 // indirect
--	github.com/go-logr/stdr v1.2.2 // indirect
--	github.com/go-resty/resty/v2 v2.11.0 // indirect
--	github.com/go-viper/mapstructure/v2 v2.0.0-alpha.1 // indirect
--	github.com/goccy/go-json v0.10.2 // indirect
--	github.com/gofrs/uuid v4.4.0+incompatible // indirect
--	github.com/golang-jwt/jwt/v4 v4.5.0 // indirect
--	github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect
--	github.com/golang/protobuf v1.5.4 // indirect
--	github.com/google/go-querystring v1.1.0 // indirect
--	github.com/google/s2a-go v0.1.7 // indirect
--	github.com/google/uuid v1.6.0 // indirect
--	github.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect
--	github.com/googleapis/gax-go/v2 v2.12.0 // indirect
--	github.com/gophercloud/gophercloud v1.0.0 // indirect
--	github.com/gophercloud/utils v0.0.0-20210216074907-f6de111f2eae // indirect
--	github.com/hashicorp/errwrap v1.0.0 // indirect
--	github.com/hashicorp/go-checkpoint v0.5.0 // indirect
--	github.com/hashicorp/go-cleanhttp v0.5.2 // indirect
--	github.com/hashicorp/go-cty v1.4.1-0.20200414143053-d3edf31b6320 // indirect
--	github.com/hashicorp/go-hclog v1.5.0 // indirect
--	github.com/hashicorp/go-retryablehttp v0.7.5 // indirect
--	github.com/hashicorp/go-version v1.6.0 // indirect
--	github.com/hashicorp/hc-install v0.6.3 // indirect
--	github.com/hashicorp/hcl/v2 v2.19.1 // indirect
--	github.com/hashicorp/logutils v1.0.0 // indirect
--	github.com/hashicorp/terraform-exec v0.20.0 // indirect
--	github.com/hashicorp/terraform-json v0.21.0 // indirect
--	github.com/hashicorp/terraform-plugin-go v0.22.0 // indirect
--	github.com/hashicorp/terraform-plugin-log v0.9.0 // indirect
--	github.com/hashicorp/terraform-registry-address v0.2.3 // indirect
--	github.com/hashicorp/terraform-svchost v0.1.1 // indirect
--	github.com/hashicorp/yamux v0.1.1 // indirect
--	github.com/iij/doapi v0.0.0-20190504054126-0bbf12d6d7df // indirect
--	github.com/infobloxopen/infoblox-go-client v1.1.1 // indirect
--	github.com/jmespath/go-jmespath v0.4.0 // indirect
--	github.com/json-iterator/go v1.1.12 // indirect
--	github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213 // indirect
--	github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b // indirect
--	github.com/kr/pretty v0.3.1 // indirect
--	github.com/kylelemons/godebug v1.1.0 // indirect
--	github.com/labbsr0x/bindman-dns-webhook v1.0.2 // indirect
--	github.com/labbsr0x/goh v1.0.1 // indirect
--	github.com/linode/linodego v1.28.0 // indirect
--	github.com/liquidweb/liquidweb-cli v0.6.9 // indirect
--	github.com/liquidweb/liquidweb-go v1.6.4 // indirect
--	github.com/mattn/go-colorable v0.1.13 // indirect
--	github.com/mattn/go-isatty v0.0.20 // indirect
--	github.com/miekg/dns v1.1.58 // indirect
--	github.com/mimuret/golang-iij-dpf v0.9.1 // indirect
--	github.com/mitchellh/go-homedir v1.1.0 // indirect
--	github.com/mitchellh/go-testing-interface v1.14.1 // indirect
--	github.com/mitchellh/go-wordwrap v1.0.0 // indirect
--	github.com/mitchellh/mapstructure v1.5.0 // indirect
--	github.com/mitchellh/reflectwalk v1.0.2 // indirect
--	github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect
--	github.com/modern-go/reflect2 v1.0.2 // indirect
--	github.com/namedotcom/go v0.0.0-20180403034216-08470befbe04 // indirect
--	github.com/nrdcg/auroradns v1.1.0 // indirect
--	github.com/nrdcg/bunny-go v0.0.0-20230728143221-c9dda82568d9 // indirect
--	github.com/nrdcg/desec v0.7.0 // indirect
--	github.com/nrdcg/dnspod-go v0.4.0 // indirect
--	github.com/nrdcg/freemyip v0.2.0 // indirect
--	github.com/nrdcg/goinwx v0.10.0 // indirect
--	github.com/nrdcg/mailinabox v0.2.0 // indirect
--	github.com/nrdcg/namesilo v0.2.1 // indirect
--	github.com/nrdcg/nodion v0.1.0 // indirect
--	github.com/nrdcg/porkbun v0.3.0 // indirect
--	github.com/nzdjb/go-metaname v1.0.0 // indirect
--	github.com/oklog/run v1.1.0 // indirect
--	github.com/onsi/gomega v1.27.10 // indirect
--	github.com/oracle/oci-go-sdk v24.3.0+incompatible // indirect
--	github.com/ovh/go-ovh v1.4.3 // indirect
--	github.com/patrickmn/go-cache v2.1.0+incompatible // indirect
--	github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 // indirect
--	github.com/pkg/errors v0.9.1 // indirect
--	github.com/pmezard/go-difflib v1.0.0 // indirect
--	github.com/pquerna/otp v1.4.0 // indirect
--	github.com/rogpeppe/go-internal v1.11.0 // indirect
--	github.com/sacloud/api-client-go v0.2.8 // indirect
--	github.com/sacloud/go-http v0.1.6 // indirect
--	github.com/sacloud/iaas-api-go v1.11.1 // indirect
--	github.com/sacloud/packages-go v0.0.9 // indirect
--	github.com/scaleway/scaleway-sdk-go v1.0.0-beta.22 // indirect
--	github.com/sirupsen/logrus v1.9.3 // indirect
--	github.com/smartystreets/go-aws-auth v0.0.0-20180515143844-0c1422d1fdb9 // indirect
--	github.com/softlayer/softlayer-go v1.1.3 // indirect
--	github.com/softlayer/xmlrpc v0.0.0-20200409220501-5f089df7cb7e // indirect
--	github.com/spf13/cast v1.3.1 // indirect
--	github.com/stretchr/objx v0.5.1 // indirect
--	github.com/stretchr/testify v1.8.4 // indirect
--	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.490 // indirect
--	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod v1.0.490 // indirect
--	github.com/transip/gotransip/v6 v6.23.0 // indirect
--	github.com/ultradns/ultradns-go-sdk v1.6.1-20231103022937-8589b6a // indirect
--	github.com/vinyldns/go-vinyldns v0.9.16 // indirect
--	github.com/vmihailenco/msgpack v4.0.4+incompatible // indirect
--	github.com/vmihailenco/msgpack/v5 v5.4.1 // indirect
--	github.com/vmihailenco/tagparser/v2 v2.0.0 // indirect
--	github.com/vultr/govultr/v2 v2.17.2 // indirect
--	github.com/yandex-cloud/go-genproto v0.0.0-20220805142335-27b56ddae16f // indirect
--	github.com/yandex-cloud/go-sdk v0.0.0-20220805164847-cf028e604997 // indirect
--	github.com/zclconf/go-cty v1.14.2 // indirect
--	go.opencensus.io v0.24.0 // indirect
--	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 // indirect
--	go.opentelemetry.io/otel v1.22.0 // indirect
--	go.opentelemetry.io/otel/metric v1.22.0 // indirect
--	go.opentelemetry.io/otel/trace v1.22.0 // indirect
--	go.uber.org/ratelimit v0.2.0 // indirect
--	golang.org/x/crypto v0.21.0 // indirect
--	golang.org/x/mod v0.15.0 // indirect
--	golang.org/x/net v0.23.0 // indirect
--	golang.org/x/oauth2 v0.17.0 // indirect
--	golang.org/x/sys v0.18.0 // indirect
--	golang.org/x/text v0.14.0 // indirect
--	golang.org/x/time v0.5.0 // indirect
--	golang.org/x/tools v0.17.0 // indirect
--	google.golang.org/api v0.162.0 // indirect
--	google.golang.org/appengine v1.6.8 // indirect
--	google.golang.org/genproto v0.0.0-20240227224415-6ceb2ff114de // indirect
--	google.golang.org/genproto/googleapis/api v0.0.0-20240227224415-6ceb2ff114de // indirect
--	google.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de // indirect
--	gopkg.in/ini.v1 v1.67.0 // indirect
--	gopkg.in/ns1/ns1-go.v2 v2.7.13 // indirect
--	gopkg.in/yaml.v2 v2.4.0 // indirect
--	gopkg.in/yaml.v3 v3.0.1 // indirect
--)
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./.goreleaser.yml ./vancluever/v2.21.0/.goreleaser.yml
---- ./.goreleaser.yml	1970-01-01 07:30:00.000000000 +0730
-+++ ./vancluever/v2.21.0/.goreleaser.yml	2024-04-26 18:07:52.560299129 +0800
-@@ -0,0 +1,60 @@
-+# Visit https://goreleaser.com for documentation on how to customize this
-+# behavior.
-+before:
-+  hooks:
-+    # this is just an example and not a requirement for provider building/publishing
-+    - go mod tidy
-+builds:
-+  - env:
-+      # goreleaser does not work with CGO, it could also complicate
-+      # usage by users in CI/CD systems like Terraform Cloud where
-+      # they are unable to install libraries.
-+      - CGO_ENABLED=0
-+    mod_timestamp: "{{ .CommitTimestamp }}"
-+    flags:
-+      - -trimpath
-+    ldflags:
-+      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
-+    goos:
-+      - freebsd
-+      - windows
-+      - linux
-+      - darwin
-+    goarch:
-+      - amd64
-+      - "386"
-+      - arm
-+      - arm64
-+    ignore:
-+      - goos: darwin
-+        goarch: "386"
-+    binary: "{{ .ProjectName }}_v{{ .Version }}"
-+archives:
-+  - format: zip
-+    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
-+checksum:
-+  extra_files:
-+    - glob: "terraform-registry-manifest.json"
-+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-+  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
-+  algorithm: sha256
-+signs:
-+  - artifacts: checksum
-+    args:
-+      # if you are using this is a GitHub action or some other automated pipeline, you
-+      # need to pass the batch flag to indicate its not interactive.
-+      - "--batch"
-+      - "--local-user"
-+      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
-+      - "--output"
-+      - "${signature}"
-+      - "--detach-sign"
-+      - "${artifact}"
-+release:
-+  extra_files:
-+    - glob: "terraform-registry-manifest.json"
-+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-+  # If you want to manually examine the release before its live, uncomment this line:
-+  # draft: true
-+changelog:
-+  skip: true
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./go.sum ./vancluever/v2.21.0/go.sum
---- ./go.sum	2024-04-26 18:07:21.601804364 +0800
-+++ ./vancluever/v2.21.0/go.sum	2024-04-26 18:07:52.560299129 +0800
-@@ -453,9 +453,8 @@
- github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
- github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
- github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
-+github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
- github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
--github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
--github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
- github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
- github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
- github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
-@@ -588,9 +587,8 @@
- github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
- github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
- github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=
-+github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=
- github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
--github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
--github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
- github.com/oracle/oci-go-sdk v24.3.0+incompatible h1:x4mcfb4agelf1O4/1/auGlZ1lr97jXRSSN5MxTgG/zU=
- github.com/oracle/oci-go-sdk v24.3.0+incompatible/go.mod h1:VQb79nF8Z2cwLkLS35ukwStZIg5F66tcBccjip/j888=
- github.com/ovh/go-ovh v1.4.3 h1:Gs3V823zwTFpzgGLZNI6ILS4rmxZgJwJCz54Er9LwD0=
-@@ -639,9 +637,8 @@
- github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
- github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
- github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
--github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
--github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=
--github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=
-+github.com/rogpeppe/go-internal v1.8.1 h1:geMPLpDpQOgVyCg5z5GoRwLHepNdb71NXb67XFkP+Eg=
-+github.com/rogpeppe/go-internal v1.8.1/go.mod h1:JeRgkft04UBgHMgCIwADu4Pn6Mtm5d4nPKWu0nJ5d+o=
- github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
- github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
- github.com/sacloud/api-client-go v0.2.8 h1:tIY6PZNBX900K66TqEPa4d6UIbedUczfCBnPJkzi8kw=
-@@ -791,8 +788,8 @@
- golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
- golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=
- golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=
--golang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=
--golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=
-+golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=
-+golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
- golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
- golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
- golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
-@@ -849,8 +846,8 @@
- golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
- golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
- golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=
--golang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=
--golang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=
-+golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=
-+golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
- golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
- golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
- golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
-@@ -922,16 +919,16 @@
- golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
- golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
- golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
--golang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=
--golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
-+golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=
-+golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
- golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
- golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
- golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
- golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
- golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
- golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=
--golang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=
--golang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=
-+golang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=
-+golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
- golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
- golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
- golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./main.go ./vancluever/v2.21.0/main.go
---- ./main.go	2024-04-26 18:07:21.601804364 +0800
-+++ ./vancluever/v2.21.0/main.go	2024-04-26 18:07:52.560299129 +0800
-@@ -3,9 +3,9 @@
- import (
- 	"os"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme"
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/plugin"
--	"github.com/vancluever/terraform-provider-acme/v2/acme"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- func main() {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./Makefile ./vancluever/v2.21.0/Makefile
---- ./Makefile	2024-04-26 18:06:22.114687786 +0800
-+++ ./vancluever/v2.21.0/Makefile	1970-01-01 07:30:00.000000000 +0730
-@@ -1,17 +0,0 @@
--# The url of Terraform provider.
--NEW_VERSION ?= v2.21.0
--
--.PHONY: create-patch
--create-patch:
--	diff -ruN --exclude=acme/errorlist.go --exclude=.git/ --exclude=.git  --exclude=.git. . ./vancluever/v2.21.0 > ./patch/subModule1.patch || exit 0
--
--.PHONY: patch-file
--patching-acme:
--	git submodule update --init --recursive
--	-patch -p0  < ./patch/subModule.patch
--	-patch -p0 ./vancluever/v2.21.0/acme/errorlist.go < ./patch/acme.errorlist.go.patch
--
--.PHONY: move-sub-dir-to-main
--move-sub-file:
--	git submodule update --init --recursive
--	rsync -av --progress ./vancluever/v2.21.0/* . --exclude .git --exclude .gitignore --exclude README.md --exclude GNUmakefile --exclude .github/
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/acme.errorlist.go.patch ./vancluever/v2.21.0/patch/acme.errorlist.go.patch
---- ./patch/acme.errorlist.go.patch	2024-04-26 17:21:52.898088602 +0800
-+++ ./vancluever/v2.21.0/patch/acme.errorlist.go.patch	1970-01-01 07:30:00.000000000 +0730
-@@ -1,32 +0,0 @@
--0a1,31
--> package acme
--> 
--> import "strings"
--> 
--> const (
--> 	ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newAccount"
--> 	ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS     = "429 ::HEAD :: https://acme.zerossl.com/v2/DV90/newNonce"
--> 	ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS = "429 ::GET :: https://acme.zerossl.com/v2/DV90"
--> 	ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS         = "429 ::POST :: https://acme.zerossl.com/v2/DV90/authz"
--> 	ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newOrder"
--> 	ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS       = "429 ::POST :: https://acme.zerossl.com/v2/DV90/account"
--> 	ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/revokeCert"
--> 	ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/chall"
--> 	LETSENCRYPT_ERR_RATE_LIMITED                = "429 :: POST :: https://acme-staging-v02.api.letsencrypt.org/acme/new-acct"
--> 	ERR_TIME_LIMIT_EXCEEDED                     = "time limit exceeded"
--> 	ERR_SERVER_NO_RESPONSE                      = "net/http: timeout awaiting response headers"
--> )
--> 
--> func isAbleToRetry(errCode string) bool {
--> 	return strings.Contains(errCode, ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS) ||
--> 		strings.Contains(errCode, LETSENCRYPT_ERR_RATE_LIMITED) ||
--> 		strings.Contains(errCode, ERR_TIME_LIMIT_EXCEEDED) ||
--> 		strings.Contains(errCode, ERR_SERVER_NO_RESPONSE)
--> }
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/.github.workflows.release.yml.patch ./vancluever/v2.21.0/patch/.github.workflows.release.yml.patch
---- ./patch/.github.workflows.release.yml.patch	2024-04-26 17:21:52.898088602 +0800
-+++ ./vancluever/v2.21.0/patch/.github.workflows.release.yml.patch	1970-01-01 07:30:00.000000000 +0730
-@@ -1,16 +0,0 @@
--16c16,20
--<       - 'v*'
-----
-->       - "v*"
--> # Releases need permissions to read and write the repository contents.
--> # GitHub considers creating releases and uploading assets as writing contents.
--> permissions:
-->   contents: write
--24c28
--<           go-version: '^1.17.5'
-----
-->           go-version: "^1.17.5"
--67c71
--<           go-version: '^1.17.5'
-----
-->           go-version: "^1.17.5"
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/README.md.patch ./vancluever/v2.21.0/patch/README.md.patch
---- ./patch/README.md.patch	2024-04-26 17:21:52.898088602 +0800
-+++ ./vancluever/v2.21.0/patch/README.md.patch	1970-01-01 07:30:00.000000000 +0730
-@@ -1,27 +0,0 @@
--6c6
--< CA, such as [Let's Encrypt][lets-encrypt].
-----
--> CA, such as Let's Encrypt, ZeroSSL and GCP.
--9d8
--< [lets-encrypt]: https://letsencrypt.org
--21,22c20,21
--< Documentation for this provider can be found at
--< https://registry.terraform.io/providers/vancluever/acme/latest/docs.
-----
--> This is a forked, reworked repository of Terraform ACME provider by vancluever to provide backoff retry functionalities.
--> Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/vancluever/acme/latest/docs)
--24c23
--< ## License
-----
--> ## Retryable Errors
--26,33c25
--< ```
--< Copyright 2018-2023 Chris Marchesi
--< Copyright 2016-2018 PayByPhone Technologies, Inc.
--< 
--< This Source Code Form is subject to the terms of the Mozilla Public
--< License, v. 2.0. If a copy of the MPL was not distributed with this
--< file, You can obtain one at http://mozilla.org/MPL/2.0/.
--<  ```
-----
--> Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./patch/subModule.patch ./vancluever/v2.21.0/patch/subModule.patch
--- ./patch/subModule.patch	2024-04-26 17:22:03.997003800 +0800
+++ ./vancluever/v2.21.0/patch/subModule.patch	1970-01-01 07:30:00.000000000 +0730
@@ -1,3126 +0,0 @@
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/acme_structure.go ./vancluever/v2.21.0/acme/acme_structure.go
---- ./vancluever/v1/acme/acme_structure.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/acme_structure.go	2024-04-26 13:06:24.410582548 +0800
-@@ -12,6 +12,7 @@
- 	"fmt"
- 	"time"
- 
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/certcrypto"
- 	"github.com/go-acme/lego/v4/certificate"
- 	"github.com/go-acme/lego/v4/lego"
-@@ -20,6 +21,10 @@
- 	"software.sslmate.com/src/go-pkcs12"
- )
- 
-+const (
-+	DefaultMaxElapsedTime = 120 * time.Minute
-+)
-+
- // acmeUser implements acme.User.
- type acmeUser struct {
- 
-@@ -84,17 +89,32 @@
- 		return nil, nil, fmt.Errorf("error getting user data: %s", err.Error())
- 	}
- 
--	client, err := lego.NewClient(expandACMEClient_config(d, meta, user))
--	if err != nil {
--		return nil, nil, err
--	}
-+	var client *lego.Client
- 
--	// Populate user's registration resource if needed
--	if loadReg {
--		user.Registration, err = client.Registration.ResolveAccountByKey()
-+	newClient := func() error {
-+		client, err = lego.NewClient(expandACMEClient_config(d, meta, user))
- 		if err != nil {
--			return nil, nil, err
-+			return err
- 		}
-+
-+		// Populate user's registration resource if needed
-+		if loadReg {
-+			user.Registration, err = client.Registration.ResolveAccountByKey()
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(newClient, reconnectBackoff)
-+	if err != nil {
-+		return nil, nil, err
- 	}
- 
- 	return client, user, nil
-@@ -241,8 +261,11 @@
- 	cert = pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: cb[0].Raw})
- 	certNotAfter = cb[0].NotAfter.Format(time.RFC3339)
- 	issuer = make([]byte, 0)
--	for _, ic := range cb[1:] {
-+	for i, ic := range cb[1:] {
- 		issuer = append(issuer, pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: ic.Raw})...)
-+		if i < len(cb)-2 {
-+			issuer = append(issuer, '\n')
-+		}
- 	}
- 
- 	return
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/certificate_challenges.go ./vancluever/v2.21.0/acme/certificate_challenges.go
---- ./vancluever/v1/acme/certificate_challenges.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/certificate_challenges.go	2024-04-26 13:06:21.686535359 +0800
-@@ -5,6 +5,8 @@
- 	"strconv"
- 	"time"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
- 	"github.com/go-acme/lego/v4/challenge/http01"
-@@ -15,7 +17,6 @@
- 	"github.com/go-acme/lego/v4/providers/http/webroot"
- 	"github.com/hashicorp/go-multierror"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- // setCertificateChallengeProviders sets all of the challenge providers in the
-@@ -48,7 +49,20 @@
- 			}
- 		}
- 
--		if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
-+		setDns01Provider := func() error {
-+			if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setDns01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -61,7 +75,20 @@
- 			httpServerProvider.SetProxyHeader(proxyHeader.(string))
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err := backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -75,7 +102,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -89,7 +129,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -103,7 +156,20 @@
- 			return dnsCloser, err
- 		}
- 
--		if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
-+		setHttp01Provider := func() error {
-+			if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-@@ -113,7 +179,20 @@
- 		tlsProvider := tlsalpn01.NewProviderServer(
- 			"", strconv.Itoa(provider.([]interface{})[0].(map[string]interface{})["port"].(int)))
- 
--		if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
-+		setTlsAlpn01Provider := func() error {
-+			if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err := backoff.Retry(setTlsAlpn01Provider, reconnectBackoff)
-+		if err != nil {
- 			return dnsCloser, err
- 		}
- 	}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/dnsplugin/client.go ./vancluever/v2.21.0/acme/dnsplugin/client.go
---- ./vancluever/v1/acme/dnsplugin/client.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/client.go	2024-04-26 10:52:36.619416438 +0800
-@@ -8,9 +8,9 @@
- 	"os/exec"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/hashicorp/go-plugin"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- )
- 
- // NewClient creates a new DNS provider instance by dispatching to itself via
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/dnsplugin/plugin.go ./vancluever/v2.21.0/acme/dnsplugin/plugin.go
---- ./vancluever/v1/acme/dnsplugin/plugin.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin.go	2024-04-26 10:52:36.619416438 +0800
-@@ -8,10 +8,10 @@
- 	"os"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
- 	"github.com/hashicorp/go-plugin"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"google.golang.org/grpc"
- 	"google.golang.org/protobuf/types/known/durationpb"
- )
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/dnsplugin/plugin_test.go ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go
---- ./vancluever/v1/acme/dnsplugin/plugin_test.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go	2024-04-26 10:52:36.623416552 +0800
-@@ -6,9 +6,9 @@
- 	"testing"
- 	"time"
- 
-+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
- 	"github.com/go-acme/lego/v4/challenge"
- 	"github.com/go-acme/lego/v4/providers/dns/route53"
--	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
- )
- 
- var _ = challenge.ProviderTimeout((*DnsProviderClient)(nil))
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/provider_test.go ./vancluever/v2.21.0/acme/provider_test.go
---- ./vancluever/v1/acme/provider_test.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/provider_test.go	2024-04-26 10:52:35.759392040 +0800
-@@ -12,9 +12,9 @@
- 	"path/filepath"
- 	"testing"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- func testAccProviderAcme() *schema.Provider {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/resource_acme_certificate.go ./vancluever/v2.21.0/acme/resource_acme_certificate.go
---- ./vancluever/v1/acme/resource_acme_certificate.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/resource_acme_certificate.go	2024-04-26 14:23:55.066626221 +0800
-@@ -7,6 +7,7 @@
- 	"log"
- 	"time"
- 
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/acme"
- 	"github.com/go-acme/lego/v4/certificate"
- 	"github.com/go-acme/lego/v4/challenge/dns01"
-@@ -271,6 +272,12 @@
- 				ValidateFunc: validateRevocationReason,
- 			},
- 		},
-+		Timeouts: &schema.ResourceTimeout{
-+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+		},
- 	}
- }
- 
-@@ -306,11 +313,28 @@
- 		if err != nil {
- 			return err
- 		}
--		cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
--			CSR:            csr,
--			Bundle:         true,
--			PreferredChain: d.Get("preferred_chain").(string),
--		})
-+
-+		obtainCertCSR := func() error {
-+			cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
-+				CSR:            csr,
-+				Bundle:         true,
-+				PreferredChain: d.Get("preferred_chain").(string),
-+			})
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(obtainCertCSR, reconnectBackoff)
-+		if err != nil {
-+			return err
-+		}
- 	} else {
- 		cn := d.Get("common_name").(string)
- 		domains := []string{cn}
-@@ -322,12 +346,28 @@
- 			}
- 		}
- 
--		cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
--			Domains:        domains,
--			Bundle:         true,
--			MustStaple:     d.Get("must_staple").(bool),
--			PreferredChain: d.Get("preferred_chain").(string),
--		})
-+		obtainCert := func() error {
-+			cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
-+				Domains:        domains,
-+				Bundle:         true,
-+				MustStaple:     d.Get("must_staple").(bool),
-+				PreferredChain: d.Get("preferred_chain").(string),
-+			})
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(obtainCert, reconnectBackoff)
-+		if err != nil {
-+			return err
-+		}
- 	}
- 
- 	if err != nil {
-@@ -354,7 +394,21 @@
- 			return err
- 		}
- 
--		srcCR, err := client.Certificate.Get(d.Get("certificate_url").(string), true)
-+		var srcCR *certificate.Resource
-+		getCert := func() error {
-+			srcCR, err = client.Certificate.Get(d.Get("certificate_url").(string), true)
-+			if err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(getCert, reconnectBackoff)
- 		if err != nil {
- 			// There are probably some cases that we will want to just drop
- 			// the resource if there's been an issue, but seeing as this is
-@@ -454,7 +508,21 @@
- 		return err
- 	}
- 
--	newCert, err := client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
-+	var newCert *certificate.Resource
-+	renewCert := func() error {
-+		newCert, err = client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(renewCert, reconnectBackoff)
- 	if err != nil {
- 		return err
- 	}
-@@ -487,17 +555,43 @@
- 	}
- 
- 	if remaining >= 0 {
--		maybeReason, ok := d.GetOk("revoke_certificate_reason")
--		if ok {
--			reason := RevocationReason(maybeReason.(string))
--			reasonNum, err := GetRevocationReason(reason)
--			if err != nil {
--				return err
-+		revokeCert := func() error {
-+			maybeReason, ok := d.GetOk("revoke_certificate_reason")
-+			if ok {
-+				reason := RevocationReason(maybeReason.(string))
-+				reasonNum, err := GetRevocationReason(reason)
-+				if err != nil {
-+					return err
-+				}
-+				if err = client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum); err != nil {
-+					if isAbleToRetry(err.Error()) {
-+						return err
-+					} else {
-+						return backoff.Permanent(err)
-+					}
-+
-+				}
-+				return nil
- 			}
--			return client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum)
-+
-+			if err = client.Certificate.Revoke(cert.Certificate); err != nil {
-+				if isAbleToRetry(err.Error()) {
-+					return err
-+				} else {
-+					return backoff.Permanent(err)
-+				}
-+			}
-+
-+			return nil
-+		}
-+		reconnectBackoff := backoff.NewExponentialBackOff()
-+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+		err = backoff.Retry(revokeCert, reconnectBackoff)
-+		if err != nil {
-+			return err
- 		}
--		return client.Certificate.Revoke(cert.Certificate)
- 	}
-+
- 	return nil
- }
- 
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/acme/resource_acme_registration.go ./vancluever/v2.21.0/acme/resource_acme_registration.go
---- ./vancluever/v1/acme/resource_acme_registration.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/acme/resource_acme_registration.go	2024-04-26 14:37:20.702870873 +0800
-@@ -1,6 +1,7 @@
- package acme
- 
- import (
-+	"github.com/cenkalti/backoff/v4"
- 	"github.com/go-acme/lego/v4/acme"
- 	"github.com/go-acme/lego/v4/registration"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-@@ -57,6 +58,12 @@
- 				Computed: true,
- 			},
- 		},
-+		Timeouts: &schema.ResourceTimeout{
-+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-+		},
- 	}
- }
- 
-@@ -69,24 +76,34 @@
- 
- 	var reg *registration.Resource
- 	// If EAB was enabled, register using EAB.
--	if v, ok := d.GetOk("external_account_binding"); ok {
--		reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
--			TermsOfServiceAgreed: true,
--			Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
--			HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
--		})
--	} else {
--		// Normal registration.
--		reg, err = client.Registration.Register(registration.RegisterOptions{
--			TermsOfServiceAgreed: true,
--		})
--	}
--
--	if err != nil {
--		return err
-+	registerAccount := func() error {
-+		if v, ok := d.GetOk("external_account_binding"); ok {
-+			reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
-+				TermsOfServiceAgreed: true,
-+				Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
-+				HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
-+			})
-+		} else {
-+			// Normal registration.
-+			reg, err = client.Registration.Register(registration.RegisterOptions{
-+				TermsOfServiceAgreed: true,
-+			})
-+		}
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
- 	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(registerAccount, reconnectBackoff)
- 
- 	_, user, err := expandACMEClient(d, meta, true)
-+
- 	if err != nil {
- 		return err
- 	}
-@@ -117,7 +134,25 @@
- 		return err
- 	}
- 
--	return client.Registration.DeleteRegistration()
-+	deleteRegistration := func() error {
-+		err := client.Registration.DeleteRegistration()
-+		if err != nil {
-+			if isAbleToRetry(err.Error()) {
-+				return err
-+			} else {
-+				return backoff.Permanent(err)
-+			}
-+		}
-+		return nil
-+	}
-+	reconnectBackoff := backoff.NewExponentialBackOff()
-+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-+	err = backoff.Retry(deleteRegistration, reconnectBackoff)
-+	if err != nil {
-+		return err
-+	}
-+
-+	return nil
- }
- 
- func regGone(err error) bool {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/generate-dns-providers/bindata.go ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go
---- ./vancluever/v1/build-support/generate-dns-providers/bindata.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/bindata.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,299 +0,0 @@
--// Code generated by go-bindata. DO NOT EDIT.
--// sources:
--// templates/dns-provider-doc-template.tmpl (2.14kB)
--// templates/dns-provider-go-template.tmpl (836B)
--
--package main
--
--import (
--	"bytes"
--	"compress/gzip"
--	"crypto/sha256"
--	"fmt"
--	"io"
--	"io/ioutil"
--	"os"
--	"path/filepath"
--	"strings"
--	"time"
--)
--
--func bindataRead(data []byte, name string) ([]byte, error) {
--	gz, err := gzip.NewReader(bytes.NewBuffer(data))
--	if err != nil {
--		return nil, fmt.Errorf("read %q: %w", name, err)
--	}
--
--	var buf bytes.Buffer
--	_, err = io.Copy(&buf, gz)
--	clErr := gz.Close()
--
--	if err != nil {
--		return nil, fmt.Errorf("read %q: %w", name, err)
--	}
--	if clErr != nil {
--		return nil, err
--	}
--
--	return buf.Bytes(), nil
--}
--
--type asset struct {
--	bytes  []byte
--	info   os.FileInfo
--	digest [sha256.Size]byte
--}
--
--type bindataFileInfo struct {
--	name    string
--	size    int64
--	mode    os.FileMode
--	modTime time.Time
--}
--
--func (fi bindataFileInfo) Name() string {
--	return fi.name
--}
--func (fi bindataFileInfo) Size() int64 {
--	return fi.size
--}
--func (fi bindataFileInfo) Mode() os.FileMode {
--	return fi.mode
--}
--func (fi bindataFileInfo) ModTime() time.Time {
--	return fi.modTime
--}
--func (fi bindataFileInfo) IsDir() bool {
--	return false
--}
--func (fi bindataFileInfo) Sys() interface{} {
--	return nil
--}
--
--var _templatesDnsProviderDocTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5d\x6b\xdb\x48\x14\x7d\x9f\x5f\x71\x70\x02\xdb\x1a\x4b\x7e\x37\x74\xc1\x78\x53\x08\x74\x4b\x68\xba\xfb\x62\x4c\x34\x96\xae\xa4\x21\xa3\x19\x31\x33\x72\x6a\x84\xfe\xfb\x72\xe5\x58\x8a\xbc\x8b\x1b\x16\xfa\x64\x4b\x77\xee\xc7\x39\xf7\x9c\x51\x14\x45\xa2\x96\x05\x3d\x05\x15\x34\xad\x30\x6b\xdb\x78\x63\x33\xea\xba\x99\xf0\xcd\x3e\x95\x81\x0a\xeb\x8e\x2b\xcc\xfe\xf8\xfa\x88\x07\x67\x0f\x2a\x23\xe7\x67\x82\x13\x45\xf4\x3b\xbe\x97\x84\xdc\x6a\x6d\x5f\x94\x29\x90\xd9\xb4\xa9\xc8\x04\x19\x94\x35\x50\x1e\xb2\x09\x36\x2a\xc8\x90\x93\x81\x32\xe4\xce\x56\x08\x25\x61\xbd\xf9\xf3\x4e\xd4\xaf\xe5\x7e\xf3\x58\x3f\xdc\x43\xab\xbd\x93\xee\x88\xad\xa6\xc2\xee\x3e\x94\x21\xd4\x7e\xb5\x5c\x16\x36\x92\x69\x45\x71\xa1\x42\xd9\xec\x63\x65\x97\x1c\x5f\x7e\x8c\x81\x47\x5b\x91\xf0\x94\x72\x37\x8f\x4a\x1e\xe1\x28\x27\x87\x60\xc1\x67\x90\x29\x47\x69\xd0\x47\x44\x50\x06\x95\xf5\x01\xa9\xf4\xe4\x17\x3c\x83\x27\x9c\x53\x85\xac\x6b\x7d\xe4\x34\x9e\xed\x3b\x39\x27\x73\xeb\x2a\x9c\x07\x84\xf4\x78\x21\xad\x63\x21\x6e\xd0\xb6\xf1\x57\x59\x51\xd7\x81\x29\xd9\x94\x52\x6b\x32\x05\x0d\xe4\x08\xc1\x9c\x24\x03\x91\x49\x7f\x2e\x1d\xce\x0d\x45\x53\x69\xb0\x27\x34\x9e\x32\x6e\x5d\x93\xeb\x9b\x4e\x4e\x7b\xe4\xd6\x09\x9e\x6a\x9b\x30\x0b\x4f\x29\xb9\xa0\x72\xc5\x8b\x49\x76\x5b\x47\xde\x36\x2e\xa5\x9e\xa1\xe8\x4d\x6c\x87\x73\x08\x2f\x2a\x94\xa2\x6d\x55\x8e\xf8\xaf\x6f\x5f\xba\x6e\x3b\x00\xd8\x7d\x68\xdb\xd3\xbb\x8f\x6d\x4b\xda\x53\xd7\x0d\xb1\xb6\x8d\x40\x26\xeb\xba\x58\x88\x2b\x6d\x56\x88\xe3\xe5\x39\xec\x97\x6f\x42\x71\x95\x09\xf1\xd9\x3a\xa4\xb6\xaa\x35\x05\x82\x32\x8c\xef\x24\x0d\x6b\x50\xda\x17\x86\xdd\x78\x42\x28\x95\x1f\x79\xe1\x81\xfb\x45\x4c\x10\x33\x60\x71\xee\xb4\x80\x27\xc2\xb6\x24\x47\x57\x48\x88\x32\xe3\xa3\x91\xca\xdd\x55\x28\x97\x87\xaf\x22\xbb\x69\xbc\x32\xc5\x45\x8a\x10\x37\x37\xb8\xfb\x21\x19\xae\x10\x49\x92\x94\xa9\x1e\x26\xc6\xec\x72\x7d\x33\xcc\x26\x4f\xad\x00\xe2\x38\x16\x02\xc8\x8c\x7f\x1a\x05\xc3\x01\x8c\xf4\x7c\x9a\x98\x14\xe8\x44\xc7\xcd\x84\xe0\x95\xf1\x96\x37\xd6\xe4\xaa\x68\x5c\xcf\x74\xfc\xe0\xc8\x93\x09\x5d\xc7\xd3\xad\x5d\xd1\xfb\x13\xdf\xd8\x27\x64\x52\x3a\xa9\x75\x74\xb0\x7c\x3d\xe1\xcf\xf2\x24\x15\x4a\x72\xa8\xa5\x67\x9d\x4a\x0f\x32\x07\xe5\xac\xe9\xcb\x1c\xa4\x53\x72\xaf\xd9\x51\xd6\x89\xc1\x6e\xa1\x74\xb6\x29\x5e\x97\x98\xf6\xe3\x24\xd8\x6b\x9b\x3e\xb3\x0f\x43\x49\x62\x9b\x4c\x30\x5e\x93\xf2\x94\xe5\x48\xba\x62\x37\x4c\x39\x96\xfb\x7f\xe6\x88\xc1\x0a\xad\xac\x23\x64\x14\xa4\xd2\xbe\x57\x96\xf8\x85\xca\xea\x01\x5c\x17\xd7\x84\x1a\x21\xee\x0d\x64\x96\x29\xde\xe6\xe2\x62\x3f\x52\x7b\xcb\x4b\xf2\xc1\x3a\xca\x98\x0d\x09\x6d\x53\xa9\x91\x2b\x4d\x8b\xd1\x4a\xb5\x0c\xa5\xf0\x4d\x5d\x6b\x45\x19\xf6\x47\xf4\xff\x8f\xbc\x71\x0e\x0f\x7c\x8e\xde\x7b\xfa\x7c\xff\xe5\x2e\x81\x6f\xf2\x5c\xfd\x88\xf1\x38\xb2\xf2\x2f\x7c\xdc\x8b\x61\x45\x74\x12\xff\x8e\x2f\xad\x13\xab\x6f\x3c\xcf\x1c\xfd\x3c\xf5\x3d\xb6\x3b\xab\xae\xcf\xf6\x51\x6e\x5d\x74\x76\x47\x34\xf0\x23\xda\xd6\x49\xb6\xcf\xed\xf3\x02\xb7\x07\xac\x3e\x5d\x3a\x63\xe3\x28\x23\x13\x94\xd4\xbe\xeb\xc4\x9c\xaf\xec\xdb\x67\xbe\xaf\x23\xb4\xed\xed\x81\xaf\xbe\xe1\x16\xfc\x79\xb5\xf5\xeb\x8a\xa4\x7e\x4f\x31\xf6\xe9\x9d\x39\xfc\x2d\xdd\x5a\x2b\xfe\x24\x75\xdd\x85\x11\x07\x6b\x41\x3a\xc2\x7c\x3e\x7c\x95\x22\x5f\x53\xca\x9c\xcc\xe7\x90\xa7\xe4\x9e\xef\x7e\x8f\x7b\x7b\x20\x91\xbe\x1d\x0c\x07\xa9\x1b\xf2\x2b\xf1\x5f\x10\x2e\x47\x98\xcc\xdd\x17\xef\x4b\x27\x27\x08\xc9\x14\xc3\xf9\x77\x7c\x33\x25\xe1\x9f\x00\x00\x00\xff\xff\x70\x43\x0a\xc4\x5c\x08\x00\x00")
--
--func templatesDnsProviderDocTemplateTmplBytes() ([]byte, error) {
--	return bindataRead(
--		_templatesDnsProviderDocTemplateTmpl,
--		"templates/dns-provider-doc-template.tmpl",
--	)
--}
--
--func templatesDnsProviderDocTemplateTmpl() (*asset, error) {
--	bytes, err := templatesDnsProviderDocTemplateTmplBytes()
--	if err != nil {
--		return nil, err
--	}
--
--	info := bindataFileInfo{name: "templates/dns-provider-doc-template.tmpl", size: 2140, mode: os.FileMode(0644), modTime: time.Unix(1617333386, 0)}
--	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x5b, 0xcd, 0xe4, 0x4f, 0x37, 0x50, 0x30, 0xa6, 0x59, 0xd6, 0xf7, 0xdc, 0xe, 0x7e, 0x58, 0x5d, 0x3a, 0x51, 0x2, 0xf0, 0x33, 0x20, 0xee, 0x77, 0x45, 0xa7, 0xff, 0x31, 0xb8, 0x4c, 0xbd}}
--	return a, nil
--}
--
--var _templatesDnsProviderGoTemplateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\xfa\x14\xd3\x10\x68\x02\x59\xf9\xbe\x90\x43\xd8\x64\x7b\x6a\x08\x2c\xe4\x52\x7a\x98\xb5\xc6\x8e\xb0\x32\x12\x92\xec\x12\x8c\xbe\x7b\x91\x13\xbb\xe9\x9f\x94\x3d\xd9\x33\xd2\xbc\xf7\x7b\xf6\x14\x05\x6c\xda\x68\x9f\x6a\x62\xf2\x18\x49\x41\xa5\x0d\x49\xd8\x5a\x60\x1b\x81\x94\x8e\x52\x38\x2c\x1b\xac\x09\x14\x07\x67\xda\x5a\xb3\x10\xfa\xec\xac\x8f\xb0\x10\xb3\xbe\x9f\xcb\x43\x53\x1f\x30\x9e\x52\x2a\xca\x13\x1a\x43\x5c\xd3\x4c\xf4\xfd\x13\x78\xe4\x9a\x40\x1e\xbc\xed\xb4\x22\x1f\x52\xfa\x73\xc0\x8d\x47\x85\xe2\x50\xf4\xbd\xfc\x62\x0f\x4d\x9d\xd2\x75\x9e\x58\xa5\x24\x96\x42\x14\x45\x76\x1f\x75\x5e\xb1\x8c\xd6\x5f\x5e\x5b\x2e\x41\x07\x40\xa8\x5a\x2e\xa3\xb6\x0c\xf1\x84\x11\x4a\x34\x26\x77\x47\xed\xcf\x21\xcf\x97\x96\x43\xf4\x6d\x9e\x04\x64\x05\x9e\x62\xeb\x39\x40\x3c\xd1\x74\x13\x34\x47\xf2\x15\x96\x24\x45\xbc\x38\x7a\x64\x9a\xfd\x16\x4b\x58\x4c\x71\xa7\x88\x2b\x20\xef\xad\x7f\x84\x7c\xc3\xbd\x15\x55\x46\x31\x06\x6c\x35\x50\x74\x68\xb4\x82\xed\xfe\x6d\xe2\x19\xc0\x43\xeb\xf2\xc7\x26\x05\xef\x17\xd8\xbc\x7c\xdd\x4d\xc7\x52\x74\xe8\xff\xe5\xb2\x86\x33\xba\x6f\x21\x7a\xcd\xf5\xf7\x07\x19\xfa\xff\xfc\x21\xf9\x62\x15\xa5\x34\x7b\xfe\x40\xd2\x9b\x90\xae\x40\xee\xb8\x3b\xa2\xdf\x18\x8d\x81\xb2\xd2\x19\xdd\x8e\x3b\xed\x2d\x9f\x89\xe3\x11\xbd\xc6\x77\x43\x47\x34\x2d\x85\xc5\x1d\xe1\xf5\x71\x0f\x34\x6f\x56\x30\xef\xe0\x79\xfd\xb7\x68\x5e\xa0\x66\x60\xcb\x6f\x5d\x4a\xb3\xd5\xdd\xae\xa4\xe5\x5d\xe1\x06\xc6\xac\xf2\x6b\xb1\xe4\x9e\x7e\x6c\xf7\x6f\x63\x8a\xc5\x52\xe8\x6a\xb8\xf5\x69\x0d\xac\x0d\xf4\xe2\xba\x18\xb9\x18\xc6\x45\x12\x63\xcb\xad\x72\x57\xa4\xdf\x0c\xc5\xcf\x00\x00\x00\xff\xff\xfb\x91\x9c\xf9\x44\x03\x00\x00")
--
--func templatesDnsProviderGoTemplateTmplBytes() ([]byte, error) {
--	return bindataRead(
--		_templatesDnsProviderGoTemplateTmpl,
--		"templates/dns-provider-go-template.tmpl",
--	)
--}
--
--func templatesDnsProviderGoTemplateTmpl() (*asset, error) {
--	bytes, err := templatesDnsProviderGoTemplateTmplBytes()
--	if err != nil {
--		return nil, err
--	}
--
--	info := bindataFileInfo{name: "templates/dns-provider-go-template.tmpl", size: 836, mode: os.FileMode(0644), modTime: time.Unix(1675544429, 0)}
--	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf, 0xaa, 0x46, 0x47, 0x53, 0x35, 0x17, 0x78, 0x2a, 0xea, 0x14, 0x20, 0xac, 0xc3, 0xe2, 0x4c, 0x3e, 0xad, 0x57, 0xe1, 0xac, 0xfa, 0x26, 0xa7, 0xa5, 0x5e, 0x5b, 0x28, 0x7a, 0x67, 0x14, 0xb6}}
--	return a, nil
--}
--
--// Asset loads and returns the asset for the given name.
--// It returns an error if the asset could not be found or
--// could not be loaded.
--func Asset(name string) ([]byte, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
--		}
--		return a.bytes, nil
--	}
--	return nil, fmt.Errorf("Asset %s not found", name)
--}
--
--// AssetString returns the asset contents as a string (instead of a []byte).
--func AssetString(name string) (string, error) {
--	data, err := Asset(name)
--	return string(data), err
--}
--
--// MustAsset is like Asset but panics when Asset would return an error.
--// It simplifies safe initialization of global variables.
--func MustAsset(name string) []byte {
--	a, err := Asset(name)
--	if err != nil {
--		panic("asset: Asset(" + name + "): " + err.Error())
--	}
--
--	return a
--}
--
--// MustAssetString is like AssetString but panics when Asset would return an
--// error. It simplifies safe initialization of global variables.
--func MustAssetString(name string) string {
--	return string(MustAsset(name))
--}
--
--// AssetInfo loads and returns the asset info for the given name.
--// It returns an error if the asset could not be found or
--// could not be loaded.
--func AssetInfo(name string) (os.FileInfo, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
--		}
--		return a.info, nil
--	}
--	return nil, fmt.Errorf("AssetInfo %s not found", name)
--}
--
--// AssetDigest returns the digest of the file with the given name. It returns an
--// error if the asset could not be found or the digest could not be loaded.
--func AssetDigest(name string) ([sha256.Size]byte, error) {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	if f, ok := _bindata[canonicalName]; ok {
--		a, err := f()
--		if err != nil {
--			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
--		}
--		return a.digest, nil
--	}
--	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
--}
--
--// Digests returns a map of all known files and their checksums.
--func Digests() (map[string][sha256.Size]byte, error) {
--	mp := make(map[string][sha256.Size]byte, len(_bindata))
--	for name := range _bindata {
--		a, err := _bindata[name]()
--		if err != nil {
--			return nil, err
--		}
--		mp[name] = a.digest
--	}
--	return mp, nil
--}
--
--// AssetNames returns the names of the assets.
--func AssetNames() []string {
--	names := make([]string, 0, len(_bindata))
--	for name := range _bindata {
--		names = append(names, name)
--	}
--	return names
--}
--
--// _bindata is a table, holding each asset generator, mapped to its name.
--var _bindata = map[string]func() (*asset, error){
--	"templates/dns-provider-doc-template.tmpl": templatesDnsProviderDocTemplateTmpl,
--	"templates/dns-provider-go-template.tmpl":  templatesDnsProviderGoTemplateTmpl,
--}
--
--// AssetDebug is true if the assets were built with the debug flag enabled.
--const AssetDebug = false
--
--// AssetDir returns the file names below a certain
--// directory embedded in the file by go-bindata.
--// For example if you run go-bindata on data/... and data contains the
--// following hierarchy:
--//     data/
--//       foo.txt
--//       img/
--//         a.png
--//         b.png
--// then AssetDir("data") would return []string{"foo.txt", "img"},
--// AssetDir("data/img") would return []string{"a.png", "b.png"},
--// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
--// AssetDir("") will return []string{"data"}.
--func AssetDir(name string) ([]string, error) {
--	node := _bintree
--	if len(name) != 0 {
--		canonicalName := strings.Replace(name, "\\", "/", -1)
--		pathList := strings.Split(canonicalName, "/")
--		for _, p := range pathList {
--			node = node.Children[p]
--			if node == nil {
--				return nil, fmt.Errorf("Asset %s not found", name)
--			}
--		}
--	}
--	if node.Func != nil {
--		return nil, fmt.Errorf("Asset %s not found", name)
--	}
--	rv := make([]string, 0, len(node.Children))
--	for childName := range node.Children {
--		rv = append(rv, childName)
--	}
--	return rv, nil
--}
--
--type bintree struct {
--	Func     func() (*asset, error)
--	Children map[string]*bintree
--}
--
--var _bintree = &bintree{nil, map[string]*bintree{
--	"templates": {nil, map[string]*bintree{
--		"dns-provider-doc-template.tmpl": {templatesDnsProviderDocTemplateTmpl, map[string]*bintree{}},
--		"dns-provider-go-template.tmpl": {templatesDnsProviderGoTemplateTmpl, map[string]*bintree{}},
--	}},
--}}
--
--// RestoreAsset restores an asset under the given directory.
--func RestoreAsset(dir, name string) error {
--	data, err := Asset(name)
--	if err != nil {
--		return err
--	}
--	info, err := AssetInfo(name)
--	if err != nil {
--		return err
--	}
--	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
--	if err != nil {
--		return err
--	}
--	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
--	if err != nil {
--		return err
--	}
--	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
--}
--
--// RestoreAssets restores an asset under the given directory recursively.
--func RestoreAssets(dir, name string) error {
--	children, err := AssetDir(name)
--	// File
--	if err != nil {
--		return RestoreAsset(dir, name)
--	}
--	// Dir
--	for _, child := range children {
--		err = RestoreAssets(dir, filepath.Join(name, child))
--		if err != nil {
--			return err
--		}
--	}
--	return nil
--}
--
--func _filePath(dir, name string) string {
--	canonicalName := strings.Replace(name, "\\", "/", -1)
--	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/generate-dns-providers/main.go ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go
---- ./vancluever/v1/build-support/generate-dns-providers/main.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/main.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,284 +0,0 @@
--//go:generate go-bindata ./templates
--package main
--
--import (
--	"bytes"
--	"encoding/json"
--	"log"
--	"os"
--	"os/exec"
--	"path/filepath"
--	"strings"
--	"text/template"
--
--	"github.com/BurntSushi/toml"
--)
--
--// envVarAliases are Terraform-specific environment variables for
--// specific providers.
--var envVarAliases = map[string]map[string]string{
--	"azure": {
--		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
--		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
--		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
--		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
--		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
--	},
--	"azuredns": {
--		"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
--		"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
--		"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
--		"ARM_TENANT_ID":       "AZURE_TENANT_ID",
--		"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
--	},
--}
--
--// providerURLs is a list of providers to override provider pages
--// for. Usually this is just used to provide blank links for
--// anything that would normally just link back to the provider page
--// in lego.
--var providerURLs = map[string]string{
--	"exec":    "",
--	"httpreq": "",
--}
--
--// dnsProviderGoTemplate is the template for
--// dnsProviderGoTemplateText.
--var dnsProviderGoTemplate = template.Must(
--	template.New("dns-provider-go-template").Parse(string(MustAsset("templates/dns-provider-go-template.tmpl"))),
--)
--
--// dnsProviderDocTemplate is the template for DNS provider
--// documentation.
--var dnsProviderDocTemplate = template.Must(
--	template.New("dns-provider-doc-template").Parse(string(MustAsset("templates/dns-provider-doc-template.tmpl"))),
--)
--
--// legoPkgPath is the root lego package path to use.
--const legoPkgPath = "github.com/go-acme/lego/v4"
--
--// Type from "go help mod edit"
--type pkgInfoGoMod struct {
--	Module  pkgInfoModule
--	Go      string
--	Require []pkgInfoRequire
--	Exclude []pkgInfoModule
--	Replace []pkgInfoReplace
--}
--
--// Type from "go help mod edit"
--type pkgInfoModule struct {
--	Path    string
--	Version string
--}
--
--// Type from "go help mod edit"
--type pkgInfoRequire struct {
--	Path     string
--	Version  string
--	Indirect bool
--}
--
--// Type from "go help mod edit"
--type pkgInfoReplace struct {
--	Old pkgInfoModule
--	New pkgInfoModule
--}
--
--type dnsProviderInfo struct {
--	Name          string
--	URL           string
--	Code          string
--	GoPkg         string
--	Additional    string
--	Configuration dnsProviderConfig
--	EnvVarAliases map[string]string
--}
--
--type dnsProviderConfig struct {
--	Credentials map[string]string
--	Additional  map[string]string
--}
--
--func (c dnsProviderConfig) Present() bool {
--	return len(c.Credentials) > 0 || len(c.Additional) > 0
--}
--
--// execCommand is a exec.Cmd builder that just sets the error stream
--// to stderr.
--func execCommand(cmd string, args ...string) *exec.Cmd {
--	c := exec.Command(cmd, args...)
--	c.Stderr = os.Stderr
--	return c
--}
--
--// loadProviders loads all of the provider information from the
--// provider TOML files.
--func loadProviders() []dnsProviderInfo {
--	out, err := execCommand("go", "mod", "edit", "-json").Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	var info pkgInfoGoMod
--	if err := json.Unmarshal(out, &info); err != nil {
--		log.Fatal(err)
--	}
--
--	var version string
--	for _, req := range info.Require {
--		if req.Path == legoPkgPath {
--			version = req.Version
--			break
--		}
--	}
--
--	if version == "" {
--		log.Fatalf("package %q not found in go.mod, cannot get version", legoPkgPath)
--	}
--
--	out, err = execCommand("go", "env", "GOPATH").Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	pkgDir := filepath.Join(
--		strings.TrimSpace(string(out)), "pkg", "mod", strings.ReplaceAll(legoPkgPath, "/", string(os.PathSeparator))+"@"+version)
--
--	// Check to see if this is actually a directory, in case it's not
--	// in the cache.
--	fi, err := os.Stat(pkgDir)
--	if err != nil {
--		if os.IsNotExist(err) {
--			err := execCommand("go", "mod", "download", legoPkgPath+"@"+version).Run()
--			if err != nil {
--				log.Fatal(err)
--			}
--
--			// Get fileinfo again and fail 100% if still error
--			fi, err = os.Stat(pkgDir)
--			if err != nil {
--				log.Fatal(err)
--			}
--		} else {
--			log.Fatal(err)
--		}
--	}
--
--	if !fi.Mode().IsDir() {
--		log.Fatalf("not a directory: %q", pkgDir)
--	}
--
--	// Start loading in the TOML files
--	var result []dnsProviderInfo
--	rootDir := filepath.Join(pkgDir, "providers", "dns")
--	if err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {
--		if err != nil {
--			return err
--		}
--
--		if filepath.Ext(path) != ".toml" {
--			return nil
--		}
--
--		var p dnsProviderInfo
--		_, err = toml.DecodeFile(path, &p)
--		if err != nil {
--			return err
--		}
--
--		// We work off of Go packages to find the metadata, but some
--		// packages have different codes (ie: acme-dns for acmedns in Go)
--		// so we need to save the provider as the package name.
--		p.GoPkg, err = filepath.Rel(rootDir, filepath.Dir(path))
--		if err != nil {
--			return err
--		}
--
--		// Environment variable aliases if we have them (ie: azure)
--		if aliases, ok := envVarAliases[p.Code]; ok {
--			p.EnvVarAliases = aliases
--		}
--
--		// Check for a provider URL override
--		if url, ok := providerURLs[p.Code]; ok {
--			p.URL = url
--		}
--
--		// A couple of docs have hugo template artifacts that could use
--		// stripping, just do this for "notice" for now which seems to be
--		// the only one that's in use.
--		p.Additional = strings.ReplaceAll(
--			p.Additional, "{{% notice note %}}\n", "-> **NOTE**: ")
--		p.Additional = strings.ReplaceAll(
--			p.Additional, "{{% /notice %}}\n", "")
--
--		result = append(result, p)
--		return nil
--	}); err != nil {
--		log.Fatal(err)
--	}
--
--	return result
--}
--
--// generateGo generates the factory template file.
--func generateGo(providers []dnsProviderInfo) {
--	b := new(bytes.Buffer)
--	if err := dnsProviderGoTemplate.Execute(b, struct {
--		PkgPath   string
--		Providers []dnsProviderInfo
--	}{
--		PkgPath:   legoPkgPath,
--		Providers: providers,
--	}); err != nil {
--		log.Fatal(err)
--	}
--
--	cmd := execCommand("gofmt")
--	cmd.Stdin = b
--	out, err := cmd.Output()
--	if err != nil {
--		log.Fatal(err)
--	}
--
--	if err := os.WriteFile(os.Args[2], out, 0666); err != nil {
--		log.Fatal(err)
--	}
--}
--
--// generateProviderDocs generates each of the provider documentation
--// pages.
--func generateProviderDocs(providers []dnsProviderInfo) {
--	for _, provider := range providers {
--		b := new(bytes.Buffer)
--		if err := dnsProviderDocTemplate.Execute(b, provider); err != nil {
--			log.Fatal(err)
--		}
--
--		path := filepath.Join(os.Args[2], "dns-providers-"+provider.Code+".md")
--		if err := os.WriteFile(path, b.Bytes(), 0666); err != nil {
--			log.Fatal(err)
--		}
--
--		log.Println("wrote", provider.Code, "documentation to:", path)
--	}
--}
--
--func main() {
--	if len(os.Args) < 3 {
--		log.Fatal("usage: generate-dns-providers [go | doc ] PATH")
--	}
--
--	providers := loadProviders()
--	switch os.Args[1] {
--	case "go":
--		generateGo(providers)
--
--	case "doc":
--		generateProviderDocs(providers)
--
--	default:
--		log.Fatal("usage: generate-dns-providers [go | doc] PATH")
--	}
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl
---- ./vancluever/v1/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-doc-template.tmpl	1970-01-01 07:30:00.000000000 +0730
-@@ -1,67 +0,0 @@
-----
--page_title: "{{.Code}}"
--subcategory: "DNS Providers"
-----
--
---> The following documentation is auto-generated from the ACME
--provider's API library [lego](https://go-acme.github.io/lego/).  Some
--sections may refer to lego directly - in most cases, these sections
--apply to the Terraform provider as well.
--
--# {{.Name}} DNS Challenge Provider
--
--The `{{.Code}}` DNS challenge provider can be used to perform DNS challenges for
--the [`acme_certificate`][resource-acme-certificate] resource with
--{{if .URL}}[{{.Name}}]({{.URL}}){{else}}{{.Name}}{{- end}}.
--
--[resource-acme-certificate]: ../resources/certificate.md
--
--For complete information on how to use this provider with the `acme_certifiate`
--resource, see [here][resource-acme-certificate-dns-challenges].
--
--[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
--
--## Example
--
--```hcl
--resource "acme_certificate" "certificate" {
--  ...
--
--  dns_challenge {
--    provider = "{{.Code}}"
--  }
--}
--```
--
--{{- if .Configuration.Present}}
--## Argument Reference
--
--The following arguments can be either passed as environment variables, or
--directly through the `config` block in the
--[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
--[`acme_certificate`][resource-acme-certificate] resource. For more details, see
--[here][resource-acme-certificate-dns-challenges].
--
--[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
--
--In addition, arguments can also be stored in a local file, with the path
--supplied by supplying the argument with the `_FILE` suffix. See
--[here][acme-certificate-file-arg-example] for more information.
--
--[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
--{{range $k, $v := .Configuration.Credentials}}
--* `{{$k}}` - {{$v}}.
--{{- end}}
--{{range $k, $v := .Configuration.Additional}}
--* `{{$k}}` - {{$v}}.
--{{- end}}
--{{if .EnvVarAliases}}
--The following variables are **Terraform-specific** aliases for the above
--configuration values:
--
--{{range $k, $v := .EnvVarAliases}}
--* `{{$k}}` - alias for `{{$v}}`.
--{{- end}}
--{{end}}
--{{- end}}
--{{.Additional}}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl
---- ./vancluever/v1/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/generate-dns-providers/templates/dns-provider-go-template.tmpl	1970-01-01 07:30:00.000000000 +0730
-@@ -1,35 +0,0 @@
--// Auto-generated file. Do not edit.
--package dnsplugin
--
--import (
--"{{$.PkgPath}}/challenge"
--{{- range .Providers}}
--"{{$.PkgPath}}/providers/dns/{{.GoPkg}}"
--{{- end}}
--)
--
--// dnsProviderFactoryFunc is a function that calls a provider's
--// constructor and returns the provider interface.
--type dnsProviderFactoryFunc func() (challenge.Provider, error)
--
--// dnsProviderFactory is a factory for all of the valid DNS providers
--// supported by ACME provider.
--var dnsProviderFactory = map[string]dnsProviderFactoryFunc {
--{{- range .Providers}}
--"{{.Code}}": func() (challenge.Provider, error) {
--{{- if .EnvVarAliases}}
--mapEnvironmentVariableValues(map[string]string{
--{{- range $k, $v := .EnvVarAliases}}
--"{{$k}}": "{{$v}}",
--{{- end}}
--})
--{{- end}}
--p, err := {{.GoPkg}}.NewDNSProvider()
--if err != nil {
--return nil, err
--}
--
--return p, nil
--},
--{{- end}}
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/go-version-for-workflow/main.go ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go
---- ./vancluever/v1/build-support/go-version-for-workflow/main.go	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/go-version-for-workflow/main.go	1970-01-01 07:30:00.000000000 +0730
-@@ -1,16 +0,0 @@
--package main
--
--import (
--	"fmt"
--	"runtime"
--	"strings"
--)
--
--func main() {
--	versionStr := strings.TrimPrefix(runtime.Version(), "go")
--	if len(strings.Split(versionStr, ".")) == 2 {
--		versionStr += ".0"
--	}
--
--	fmt.Println(versionStr)
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/pebblecfg/basic.json ./vancluever/v2.21.0/build-support/pebblecfg/basic.json
---- ./vancluever/v1/build-support/pebblecfg/basic.json	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/pebblecfg/basic.json	1970-01-01 07:30:00.000000000 +0730
-@@ -1,12 +0,0 @@
--{
--  "pebble": {
--    "listenAddress": "0.0.0.0:14000",
--    "managementListenAddress": "0.0.0.0:15000",
--    "certificate": "test/certs/localhost/cert.pem",
--    "privateKey": "test/certs/localhost/key.pem",
--    "httpPort": 5002,
--    "tlsPort": 5001,
--    "ocspResponderURL": "",
--    "externalAccountBindingRequired": false
--  }
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/pebblecfg/eab.json ./vancluever/v2.21.0/build-support/pebblecfg/eab.json
---- ./vancluever/v1/build-support/pebblecfg/eab.json	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/pebblecfg/eab.json	1970-01-01 07:30:00.000000000 +0730
-@@ -1,16 +0,0 @@
--{
--  "pebble": {
--    "listenAddress": "0.0.0.0:14001",
--    "managementListenAddress": "0.0.0.0:15001",
--    "certificate": "test/certs/localhost/cert.pem",
--    "privateKey": "test/certs/localhost/key.pem",
--    "httpPort": 6002,
--    "tlsPort": 6001,
--    "ocspResponderURL": "",
--    "externalAccountBindingRequired": true,
--    "externalAccountMACKeys": {
--      "kid-1": "zWNDZM6eQGHWpSRTPal5eIUYFTu7EajVIoguysqZ9wG44nMEtx3MUAsUDkMTQ12W",
--      "kid-2": "b10lLJs8l1GPIzsLP0s6pMt8O0XVGnfTaCeROxQM0BIt2XrJMDHJZBM5NuQmQJQH"
--    }
--  }
--}
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/provider-local-testing/dev.tfrc ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc
---- ./vancluever/v1/build-support/provider-local-testing/dev.tfrc	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/provider-local-testing/dev.tfrc	1970-01-01 07:30:00.000000000 +0730
-@@ -1,7 +0,0 @@
--provider_installation {
--  dev_overrides {
--    "vancluever/acme" = "/tmp/terraform-provider-acme"
--  }
--
--  direct {}
--}
-\ No newline at end of file
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/provider-local-testing/README.md ./vancluever/v2.21.0/build-support/provider-local-testing/README.md
---- ./vancluever/v1/build-support/provider-local-testing/README.md	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/provider-local-testing/README.md	1970-01-01 07:30:00.000000000 +0730
-@@ -1,21 +0,0 @@
--# Support Files for Local Testing
--
--This directory contains support files for local provider testing.
--
--Basically, if you are building the provider pre-release and want to test it
--locally, this is the directory for you!
--
--## Building the provider
--
--Run `make build-pre-release` to install the binary in
--`/tmp/terraform-provider-acme`.
--
--## Provider override configuration file
--
--You can then run `export TF_CLI_CONFIG_FILE=$(pwd)/dev.tfrc` (while in this
--directory) to use the `dev.tfrc` contained here.
--
--## Cleaning up
--
--You can run `make clean-pre-release` to delete the
--`/tmp/terraform-provider-acme` directory, or just remove it on your own.
-\ No newline at end of file
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/memcached-start.sh ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh
---- ./vancluever/v1/build-support/scripts/memcached-start.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/memcached-start.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,15 +0,0 @@
--#!/usr/bin/env bash
--
--case "$(uname)" in
--  "Darwin")
--    brew list memcached > /dev/null 2>&1 || brew install memcached
--    brew services run memcached
--    ;;
--
--  *)
--    # Assuming Ubuntu as that's what our CI runs on. YMMV here, might
--    # need to expand this into a separate function for distribution
--    # detection if need be.
--    sudo apt-get update && sudo apt-get -y install memcached && sudo /etc/init.d/memcached start
--    ;;
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/memcached-stop.sh ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh
---- ./vancluever/v1/build-support/scripts/memcached-stop.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/memcached-stop.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,10 +0,0 @@
--#!/usr/bin/env bash
--
--case "$(uname)" in
--  "Darwin")
--    brew services stop memcached || exit 0
--    ;;
--
--  *)
--    echo "stopping unsupported on this system, please stop manually."
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/pebble-challtest-dns.sh ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh
---- ./vancluever/v1/build-support/scripts/pebble-challtest-dns.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-challtest-dns.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,21 +0,0 @@
--#!/usr/bin/env bash
--
--OP="$1"
--REC="$2"
--DATA="$3"
--
--set -e
--
--case "${OP}" in
--  present)
--    curl -q -X POST -d "{\"host\":\"${REC}\", \"value\": \"${DATA}\"}" \
--      http://localhost:8055/set-txt
--    ;;
--  cleanup)
--    curl -q -X POST -d "{\"host\":\"${REC}\"}" \
--      http://localhost:8055/clear-txt
--    ;;
--  *)
--    echo "error: invalid command ${OP}">&2
--    exit 1
--esac
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/pebble-start.sh ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh
---- ./vancluever/v1/build-support/scripts/pebble-start.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-start.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,82 +0,0 @@
--#!/usr/bin/env bash
--
--set -e
--
--GOPATH="$(go env GOPATH)"
--PEBBLE_VERSION="2.3.1"
--# config files are relative to script dir
--PEBBLE_CFGFILE="../pebblecfg/basic.json"
--PEBBLE_PIDFILE="/tmp/pebble.pid"
--PEBBLE_LOGFILE="/tmp/pebble.log"
--# config files are relative to script dir
--PEBBLE_EAB_CFGFILE="../pebblecfg/eab.json"
--PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
--PEBBLE_EAB_LOGFILE="/tmp/pebble-eab.log"
--PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
--PEBBLE_CHALLTESTSRV_LOGFILE="/tmp/pebble-challtestsrv.log"
--PEBBLE_CHALLTESTSRV_DNS_SERVER="0.0.0.0:5553"
--PEBBLE_SRC="https://github.com/letsencrypt/pebble.git"
--PEBBLE_DIR="src/github.com/letsencrypt/pebble"
--PEBBLE_CA_CERT="test/certs/pebble.minica.pem"
--
--# Calculate path names
--BASIC_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_CFGFILE})"
--EAB_CFG="$(realpath "$(dirname "$0")"/${PEBBLE_EAB_CFGFILE})"
--
--# Enable alternate roots
--export PEBBLE_ALTERNATE_ROOTS="1"
--
--if [ "$1" == "--install" ]; then
--  INSTALL="yes"
--fi
--
--if [ ! -d "${GOPATH}/${PEBBLE_DIR}" ] || [ "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-parse HEAD)" != "$(cd "${GOPATH}/${PEBBLE_DIR}" && git rev-list -n 1 "tags/v${PEBBLE_VERSION}")" ]; then
--  echo "pebble source code missing or incorrect version, forcing install."
--  INSTALL="yes"
--fi
--
--if [ "${INSTALL}" == "yes" ]; then
--  cd "${GOPATH}"
--  rm -rf "${PEBBLE_DIR}"
--  git clone "${PEBBLE_SRC}" "${PEBBLE_DIR}"
--  cd "${PEBBLE_DIR}"
--  git checkout "v${PEBBLE_VERSION}"
--  go install ./...
--else
--  cd "${GOPATH}/${PEBBLE_DIR}"
--  if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
--    echo "rebuilding ${GOPATH}/bin/pebble and ${GOPATH}/bin/pebble-challtestsrv from cache."
--    go install ./...
--  fi
--fi
--
--if [ ! -x "${GOPATH}/bin/pebble" ] || [ ! -x "${GOPATH}/bin/pebble-challtestsrv" ]; then
--  echo "${GOPATH}/bin/pebble or ${GOPATH}/bin/pebble-challtestsrv missing; error happened in installation.">&2
--  exit 1
--fi
--
--pebble-challtestsrv -dns01 "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -http01 "" -tlsalpn01 "" > "${PEBBLE_CHALLTESTSRV_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_CHALLTESTSRV_PIDFILE}"
--# Basic Pebble instance
--pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${BASIC_CFG}" > "${PEBBLE_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_PIDFILE}"
--# EAB pebble instance
--pebble -dnsserver "${PEBBLE_CHALLTESTSRV_DNS_SERVER}" -config "${EAB_CFG}" > "${PEBBLE_EAB_LOGFILE}" 2>&1 &
--echo -n $! > "${PEBBLE_EAB_PIDFILE}"
--cat << EOS
--
--pebble instances (and pebble-challtestsrv) started.
--
--pebble PID:              ${PEBBLE_PIDFILE} (PID $(cat ${PEBBLE_PIDFILE}))
--pebble Log:              ${PEBBLE_LOGFILE}
--pebble PID (EAB):        ${PEBBLE_EAB_PIDFILE} (PID $(cat ${PEBBLE_EAB_PIDFILE}))
--pebble Log (EAB):        ${PEBBLE_EAB_LOGFILE}
--pebble-challtestsrv PID: ${PEBBLE_CHALLTESTSRV_PIDFILE} (PID $(cat ${PEBBLE_CHALLTESTSRV_PIDFILE}))
--pebble-challtestsrv Log: ${PEBBLE_CHALLTESTSRV_LOGFILE}
--Configured DNS server:   ${PEBBLE_CHALLTESTSRV_DNS_SERVER}
--Repository directory:    ${GOPATH}/${PEBBLE_DIR}
--Config file:             ${BASIC_CFG}
--Config file (EAB):       ${EAB_CFG}
--Root CA certificate:     ${GOPATH}/${PEBBLE_DIR}/${PEBBLE_CA_CERT}
--
--EOS
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/pebble-stop.sh ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh
---- ./vancluever/v1/build-support/scripts/pebble-stop.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/pebble-stop.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,76 +0,0 @@
--#!/usr/bin/env bash
--
--PEBBLE_PIDFILE="/tmp/pebble.pid"
--PEBBLE_EAB_PIDFILE="/tmp/pebble-eab.pid"
--PEBBLE_CHALLTESTSRV_PIDFILE="/tmp/pebble-challtestsrv.pid"
--
--PEBBLE_ERROR="false"
--PEBBLE_EAB_ERROR="false"
--PEBBLE_CHALLTESTSRV_ERROR="false"
--
--PEBBLE_PID=""
--if [ -f "${PEBBLE_PIDFILE}" ]; then
--  PEBBLE_PID="$(cat "${PEBBLE_PIDFILE}")"
--fi
--
--PEBBLE_EAB_PID=""
--if [ -f "${PEBBLE_EAB_PIDFILE}" ]; then
--  PEBBLE_EAB_PID="$(cat "${PEBBLE_EAB_PIDFILE}")"
--fi
--
--PEBBLE_CHALLTESTSRV_PID=""
--if [ -f "${PEBBLE_CHALLTESTSRV_PIDFILE}" ]; then
--  PEBBLE_CHALLTESTSRV_PID="$(cat "${PEBBLE_CHALLTESTSRV_PIDFILE}")"
--fi
--
--if [ -z "${PEBBLE_PID}" ] && [ -z "${PEBBLE_EAB_PID}" ] && [ -z "${PEBBLE_CHALLTESTSRV_PID}" ]; then
--  echo "no pebble instances nor pebble-challtestsrv are running; do not need to stop.">&2
--  exit 0
--fi
--
--# pebble
--if [ -n "${PEBBLE_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_PID}" -o comm=)" != "pebble" ]; then
--    echo "error: stale PID file ${PEBBLE_PIDFILE}; PID ${PEBBLE_PID} not found or is not \"pebble\".">&2
--    PEBBLE_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_PID}" && \
--      echo "pebble (PID ${PEBBLE_PID}) stopped." && \
--      rm "${PEBBLE_PIDFILE}"
--  fi
--fi
--
--# pebble (EAB)
--
--if [ -n "${PEBBLE_EAB_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_EAB_PID}" -o comm=)" != "pebble" ]; then
--    echo "error: stale PID file ${PEBBLE_EAB_PIDFILE}; PID ${PEBBLE_EAB_PID} not found or is not \"pebble\".">&2
--    PEBBLE_EAB_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_EAB_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_EAB_PID}" && \
--      echo "pebble (PID ${PEBBLE_EAB_PID}) stopped." && \
--      rm "${PEBBLE_EAB_PIDFILE}"
--  fi
--fi
--
--# pebble-challtestsrv
--if [ -n "${PEBBLE_CHALLTESTSRV_PID}" ]; then
--  if [ "$(ps -p "${PEBBLE_CHALLTESTSRV_PID}" -o comm=)" != "pebble-challtestsrv" ]; then
--    echo "error: stale PID file ${PEBBLE_CHALLTESTSRV_PIDFILE}; PID ${PEBBLE_CHALLTESTSRV_PID} not found or not \"pebble-challtestsrv\".">&2
--    PEBBLE_CHALLTESTSRV_ERROR="true"
--  fi
--
--  if [ "${PEBBLE_CHALLTESTSRV_ERROR}"  != "true" ]; then
--    kill "${PEBBLE_CHALLTESTSRV_PID}" && \
--      echo "pebble-challtestsrv (PID ${PEBBLE_CHALLTESTSRV_PID}) stopped." && \
--      rm "${PEBBLE_CHALLTESTSRV_PIDFILE}"
--  fi
--fi
--
--if [ "${PEBBLE_ERROR}" == "true" ] || [ "${PEBBLE_EAB_ERROR}" == "true" ] || [ "${PEBBLE_CHALLTESTSRV_ERROR}" == "true" ]; then
--  exit 1
--fi
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/build-support/scripts/release.sh ./vancluever/v2.21.0/build-support/scripts/release.sh
---- ./vancluever/v1/build-support/scripts/release.sh	2024-04-26 15:52:22.076837287 +0800
-+++ ./vancluever/v2.21.0/build-support/scripts/release.sh	1970-01-01 07:30:00.000000000 +0730
-@@ -1,98 +0,0 @@
--#!/usr/bin/env bash
--
--# message prints text with a color, redirected to stderr in the event of
--# warning or error messages.
--message() {
--  declare -A __colors=(
--    ["error"]="31"   # red
--    ["warning"]="33" # yellow
--    ["begin"]="32"   # green
--    ["ok"]="32"      # green
--    ["info"]="1"     # bold
--    ["reset"]="0"    # here just to note reset code
--  )
--  local __type="$1"
--  local __message="$2"
--  if [ -z "${__colors[$__type]}" ]; then
--    __type="info"
--  fi
--  if [[ "${__type}" == "error" ]]; then
--    echo -e "\e[${__colors[$__type]}m${__message}\e[0m" 1>&2
--  else
--    echo -e "\e[${__colors[$__type]}m${__message}\e[0m"
--  fi
--}
--
--if [[ "$(head -n 1 CHANGELOG.md | cut -d ' ' -f 3-)" != "(Unreleased)" ]]; then
--  message error "The changelog must have \"Unreleased\" in brackets next to its version number in order to be used by this tool."
--  exit 1
--fi
--
--release=$(head -n 1 CHANGELOG.md | awk '{print $2}')
--IFS="." read -r -a semver <<< "${release}"
--major="${semver[0]}"
--minor="${semver[1]}"
--IFS="-+" read -r -a patchpremeta <<< "${semver[2]}"
--patch="${patchpremeta[0]}"
--extra="${patchpremeta[1]}"
--
--for x in "${major}" "${minor}" "${patch}"; do 
--  if ! [ "${x}" -eq "${x}" ]; then
--    message error "${release} is not a proper semantic-versioned release."
--    message error "Please update the first line in CHANGELOG.md to a numeric MAJOR.MINOR.PATCH version."
--    exit 1
--  fi
--done
--
--if [[ "${extra}" == "pre" ]]; then
--  message error "Pre-releases tagged as \"pre\" are not supported. Release aborted."
--  message error "Please update the first line in CHANGELOG.md to a version without the -pre tag,"
--  message error "or use a different pre-release tag (i.e. beta)."
--  exit 1
--fi
--
--
--if [[ -t 0 ]]; then
--  message warning "You are releasing: ${release}"
--  message warning "Type \"yes\" to continue, anything else to abort."
--  prompt="$(message info "Continue?")"
--  read -r -p "${prompt} " confirm
--  if [[ "${confirm}" != "yes" ]]; then
--    message error "Release aborted."
--    exit 1
--  fi
--fi
--
--set -e
--
--# Timestamp and update version in changelog
--message begin "==> Timetsamping current release in CHANGELOG.md <=="
--current_date="$(date "+%B %e, %Y" | sed -E -e 's/  / /')"
--echo -e "## ${release} (${current_date})\n$(tail -n +2 CHANGELOG.md)" > CHANGELOG.md
--
--message begin "==> Committing CHANGELOG.md <=="
--git add CHANGELOG.md
--git commit -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
--
--message begin "==> Tagging Release v${release} <=="
--git tag "v${release}" -m "$(echo -e "Release v${release}\n\nSee CHANGELOG.md for more details.")"
--
--if [[ "${extra}" != "" ]]; then
--  # We just drop the pre-release tags from the release information and don't increment.
--  message warning "NOTE: extra pre-release and metadata tags have been dropped from new version."
--  message warning "Manual modification may be necessary post-release."
--fi
--  
--new_prerelease="${semver[0]}.${semver[1]}.$((semver[2]+1))-pre"
--
--message begin "==> Bumping CHANGELOG.md to Release v${new_prerelease} <=="
--echo -e "## ${new_prerelease} (Unreleased)\n\nBumped version for dev.\n\n$(cat CHANGELOG.md)" > CHANGELOG.md
--
--git add CHANGELOG.md
--git commit -m "Bump CHANGELOG.md to v${new_prerelease}"
--
--message begin "==> Pushing Commits and Tags <=="
--git push origin "$(git ls-remote --symref origin HEAD | head -n1 | awk '{print $2}')"
--git push origin --tags
--
--message ok "\nRelease v${release} successful."
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/CHANGELOG.md ./vancluever/v2.21.0/CHANGELOG.md
---- ./vancluever/v1/CHANGELOG.md	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/CHANGELOG.md	1970-01-01 07:30:00.000000000 +0730
-@@ -1,800 +0,0 @@
--## 2.21.1-pre (Unreleased)
--
--Bumped version for dev.
--
--## 2.21.0 (March 11, 2024)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.16.1 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.16.1/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.20.2 (February 13, 2024)
--
--This is a re-release to address the expired Terraform registry key due with
--release issues with key ID 1D9DFB214E18E085. The new key ID is
--974239543C576C78. No other changes are being made.
--
--
--## 2.20.1 (February 13, 2024)
--
--This is a release to address the expired Terraform registry key (key ID
--F282F2CFA56C3D69). The new key ID is 1D9DFB214E18E085. No other changes are
--being made.
--
--## 2.20.0 (January 29, 2024)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.15.0 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.15.0/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.19.1 (January 23, 2024)
--
--BUG FIXES:
--
--* `resource/acme_registration`: Fixed a situation where certain errors during
--  creation of the resource may result in "inconsistent result after apply" in
--  Terraform instead of the actual error.
--  [#375](https://github.com/vancluever/terraform-provider-acme/pull/375)
--
--## 2.19.0 (December 7, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the ability to specify a revocation
--  reason.
--  [#364](https://github.com/vancluever/terraform-provider-acme/issues/364) 
--
--## 2.18.0 (September 21, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `cert_timeout` option to control the
--  timeout of HTTP requests used to obtain the certificate after challenges are
--  complete.
--  [#349](https://github.com/vancluever/terraform-provider-acme/issues/349) 
--
--## 2.17.2 (September 20, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.14.2 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.2/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.17.1 (September 11, 2023)
--
--FEATURES:
--
--* `resource/acme_certificate`: `azuredns` DNS provider now has the same
--  environment variable aliasing as the old `azure` provider.
--  [#342](https://github.com/vancluever/terraform-provider-acme/issues/342) 
--
--## 2.17.0 (August 22, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.14.0 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.14.0/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--FEATURES:
--
--* `resource/acme_certificate`: New HTTP challenge type `http_s3_challenge`,
--  which will allow publishing HTTP challenge records to an S3 bucket.
--  [#330](https://github.com/vancluever/terraform-provider-acme/pull/330)
--
--## 2.16.1 (August 11, 2023)
--
--This change is being made to correct build issues. No other changes are being
--made.
--
--## 2.16.0 (August 11, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.13.3 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.13.3/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--## 2.15.1 (June 19, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.12.2 See the
--lego [CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.2/CHANGELOG.md)
--for more details on additions and changes to DNS providers, and other minor
--changes to the library.
--
--This lego update contains a critical fix to the `dnsmadeeasy` DNS provider,
--ensuring that it does not delete all records in a zone during cleanup.
--[go-acme/lego#1939](https://github.com/go-acme/lego/pull/1939)
--
--## 2.15.0 (June 14, 2023)
--
--This update is a full release of [2.15.0-beta1](#2150-beta1-june-13-2023),
--including the lego update and the bug fix for the `recursive_nameservers`
--setting. See that release for more details.
--
--## 2.15.0-beta1 (June 13, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.12.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.12.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: DNS plugins should now respect the setting of
--  `recursive_nameservers` again.
--  [#316](https://github.com/vancluever/terraform-provider-acme/pull/316)
--
--## 2.14.0 (May 5, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.11.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.11.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.13.1 (February 23, 2023)
--
--This is a security fix to address
--[CVE-2022-41723](https://github.com/advisories/GHSA-vvpx-j8f3-3w6h). No other
--changes have been made.
--
--## 2.13.0 (February 18, 2023)
--
--This update is a full release of [2.13.0-beta1](#2130-beta1-february-5-2023) and
--[2.13.0-beta2](#2130-beta2-february-11-2023), including the new DNS provider
--plugin system, and lego v4.10.0. See those releases for more details.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: New DNS providers and documentation for v4.10.0
--  should now be properly generated.
--
--## 2.13.0-beta2 (February 11, 2023)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.10.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.10.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The new DNS plugin system now implements
--  challenge provider timeouts properly.
--  [#277](https://github.com/vancluever/terraform-provider-acme/pull/277)
--
--## 2.13.0-beta1 (February 5, 2023)
--
--NEW DNS PLUGIN SYSTEM
--
--This update moves DNS providers for the `acme_certificate` resource into a
--[go-plugin](https://github.com/hashicorp/go-plugin) backed sub-plugin built into
--the provider. One provider is executed for each instance of a DNS provider
--supplied in `acme_certificate`, each with its own environment. This fixes a
--long-running issue where the environment variables set in the `config` parameter
--of one provider in one resource would overwrite the settings of another resource
--with different config settings for the same DNS provider. See
--[#235](https://github.com/vancluever/terraform-provider-acme/issues/235) and
--[#276](https://github.com/vancluever/terraform-provider-acme/pull/276) for more
--details.
--
--## 2.12.0 (Dec 21, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.9.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.11.1 (Oct 8, 2022)
--
--This update is a bugfix to correct the fact that the provider was not fully
--synced with the lego updates when 2.11.0 was released. No other changes were
--made.
--
--## 2.11.0 (Oct 8, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.9.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.9.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `certificate_not_after` attribute to
--  show the certificate expiry date in state.
--  [#264](https://github.com/vancluever/terraform-provider-acme/pull/264)
--
--## 2.10.0 (Jul 5, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.8.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.8.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.9.0 (May 30, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.7.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.7.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.8.0 (January 24, 2022)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.6.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.6.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.7.1 (December 10, 2021)
--
--This is a patch version bump to build with the latest version of Go to address
--CVE-2021-44716.
--
--Note that this update is being made proactively and not in response to any known
--security issue. The ACME provider would normally only use `net/http` in HTTP
--challenges.
--
--No other changes are being made.
--
--## 2.7.0 (November 15, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: New flag `revoke_certificate_on_destroy` to
--  control if certificates are revoked on destroy. Default is `true`, keeping
--  with existing behaviour.
--  [#192](https://github.com/vancluever/terraform-provider-acme/issues/192) 
--
--## 2.6.0 (October 6, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.5.3 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.5.3/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.5.3 (August 10, 2021)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected an issue where `preferred_chain` was
--  not working for certificates that used an external CSR.
--  [#199](https://github.com/vancluever/terraform-provider-acme/issues/199)
--
--## 2.5.2 (June 9, 2021)
--
--This is another re-issue of v2.5.0 due to a goreleaser config issue. No other
--changes have been made.
--
--## 2.5.1 (June 9, 2021)
--
--This is a re-issue of 2.5.0 without freebsd/arm support, which has been
--suspended due to build issues for the time being. No other changes have been
--made.
--
--## 2.5.0 (June 9, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.4.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.4.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.4.0 (April 4, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: The resource now supports HTTP-01 and
--  TLS-ALPN-01 challenges again. These are done through the `http_challenge`,
--  `http_webroot_challenge`, `http_memcached_challenge`, and `tls_challenge`
--  challenge types. It is still recommended that you use DNS challenges whenever
--  possible. See the documentation for more details.
--  [#169](https://github.com/vancluever/terraform-provider-acme/pull/169)
--
--## 2.3.0 (March 19, 2021)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `preferred_chain` option to allow for
--  the selection of alternate certificate chains offered by the CA.
--  [#161](https://github.com/vancluever/terraform-provider-acme/issues/161)
--
--## 2.2.0 (March 12, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.3.1 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.3.1/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.1.2 (February 22, 2021)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The resource no longer always expects two
--  certificates (ie: a single intermediate certificate). All intermediate
--  certificates are now concatenated in `issuer_pem`. The `certificate_p12`
--  should contain all issuer certificates as well.
--  [#154](https://github.com/vancluever/terraform-provider-acme/issues/154)
--
--## 2.1.1 (February 11, 2021)
--
--This is a simple version bump to fix documentation on the Terraform Registry. No
--changes are being made.
--
--## 2.1.0 (February 10, 2021)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.2.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/16660b2/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--## 2.0.0 (December 23, 2020)
--
--BREAKING CHANGES:
--
--* `resource/acme_certificate`: The resource ID is now a state-local UUID, not
--  the same as `certificate_url`. This is to prevent drift issues during renewal.
--  If you need the URL for the current version of the certificate, use the
--  `certificate_url` field.
--  [#103](https://github.com/vancluever/terraform-provider-acme/issues/103)
--
--FEATURES:
--
--* `resource/acme_certificate`: Added the `pre_check_delay` option to allow for
--  the insertion of delays in DNS challenges. This should help with DNS
--  propagation issues with certain providers.
--  [#111](https://github.com/vancluever/terraform-provider-acme/pull/111)
--* `resource/acme_certificate`: The domain defined in the `common_name` field can
--  now be specified in `subject_alternative_names`. This is a strictly semantic
--  change as the CN is already included in the SAN list of issued certificates.
--  [#90](https://github.com/vancluever/terraform-provider-acme/issues/90)
--
--## 1.6.3 (November 30, 2020)
--
--This is (yet another) simple version bump to attempt to fix documentation on the
--Terraform Registry. No changes are being made.
--
--## 1.6.2 (November 30, 2020)
--
--This is (another) simple version bump to attempt to fix documentation on the
--Terraform Registry. No changes are being made.
--
--## 1.6.1 (November 27, 2020)
--
--This is a simple version bump to attempt to fix documentation on the Terraform
--Registry. No changes are being made.
--
--## 1.6.0 (November 27, 2020)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v4.1.3 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v4.1.3/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library.
--
--GENERAL NOTIFICATIONS:
--
--* Testing of the provider has moved to use
--  [pebble](https://github.com/letsencrypt/pebble/) exclusively. Tests for some
--  features that are not explicitly supported by pebble or were otherwise tested
--  manually have been removed. See
--  [`907de66`](https://github.com/vancluever/terraform-provider-acme/commit/907de66625886fbd86b383cb158515ef458f3604)
--  for more details.
--* Support for Terraform 0.11 has been dropped. The provider is now only
--  available on the Terraform registry.
--
--FEATURES:
--
--* `resource/acme_registration`: Added support for external account binding. This
--  allows registrations to be linked to external accounts, commonly used by
--  commercial CAs.
--* `resource/acme_certificate`: Added the `disable_complete_propagation` option,
--  which allows one to disable the propagation pre-check before attempting to
--  complete the DNS challenge. Enabling this is only recommended for testing.
--
--## 1.5.0 (October 21, 2019)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v3.1.0 See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.1.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library. ([#92](https://github.com/terraform-providers/terraform-provider-acme/issues/92))
--
--## 1.4.0 (August 20, 2019)
--
--LEGO UPDATE:
--
--[lego](https://github.com/go-acme/lego) has been updated to v3.0.0 (from v2.5.0
--in provider version 1.2.0). See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/v3.0.0/CHANGELOG.md) for
--more details on additions and changes to DNS providers, and other minor changes
--to the library. ([#82](https://github.com/terraform-providers/terraform-provider-acme/issues/82))
--
--Starting with this release, all DNS providers and documentation for the DNS
--providers will be auto-generated, so the lego CHANGELOG will be the place to
--look for lego-specific changes in the future.
--
--BUG FIXES:
--
--* `resource/acme_certificate`: When renewing certificate, private keys and CSRs
--  will now only be set if they are present in the state. This may correct some
--  library-related issues during the renewal process. ([#84](https://github.com/terraform-providers/terraform-provider-acme/issues/84))
--* `resource/acme_registration`: Unknown or deactivated registrations will now be
--  removed from state on refresh. ([#85](https://github.com/terraform-providers/terraform-provider-acme/issues/85))
--
--## 1.3.5 (July 30, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Expired certificates flagged for renewal will now
--  properly renew on the next `terraform apply` on Terraform 0.12.0 and higher.
--  ([#77](https://github.com/terraform-providers/terraform-provider-acme/issues/77))
--
--## 1.3.4 (June 06, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: All computed attributes associated with a
--  certificate are now marked for re-generation when a certificate needs to be
--  renewed. While this was previously happening in reality, this was not being
--  reflected in the plan. ([#64](https://github.com/terraform-providers/terraform-provider-acme/issues/64))
--
--## 1.3.3 (May 29, 2019)
--
--This update is a Terraform 0.12 support build for the changes from 1.3.2.
--
--## 1.3.2 (May 28, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected an issue where `certificate_pem` would
--  be deleted from state on certificate renew failure. ([#60](https://github.com/terraform-providers/terraform-provider-acme/issues/60))
--* `resource/acme_certificate`: The resource will now attempt to recover the
--  `certificate_pem` field from the CA if it is missing in state. ([#59](https://github.com/terraform-providers/terraform-provider-acme/issues/59))
--
--## 1.3.1 (May 23, 2019)
--
--IMPROVEMENTS:
--
--* The provider now will log lego's log messages when `TF_LOG=debug` or higher is
--  set. ([#53](https://github.com/terraform-providers/terraform-provider-acme/issues/53))
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Corrected state migration issues that were
--  causing the resource to not function at all in Terraform 0.12. ([#57](https://github.com/terraform-providers/terraform-provider-acme/issues/57))
--* `resource/acme_certificate`: Corrected state migration issues that may have
--  triggered an update of settings due to incorrect migration of the
--  `recursive_nameservers` attribute on Terraform 0.11. ([#55](https://github.com/terraform-providers/terraform-provider-acme/issues/55))
--
--## 1.3.0 (May 17, 2019)
--
--BREAKING CHANGES: 
--
--* `resource/acme_certificate`: The `recursive_nameservers` option for checking
--  propagation of DNS challenge records has been promoted to a top-level option
--  and is no longer provided as part of an individual `dns_challenge` block.
--  ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
--
--FEATURES:
--
--* `resource/acme_certificate`: This resource now supports multiple DNS
--  challenges for working with multiple primary DNS providers. ([#49](https://github.com/terraform-providers/terraform-provider-acme/issues/49))
--
--## 1.2.1 (May 14, 2019)
--
--FEATURES:
--
--* The plugin has been updated to support Terraform 0.12 and higher. Backwards
--  compatibility has been maintained to Terraform 0.11.x and earlier versions
--  that support plugin protocol version 4. ([#45](https://github.com/terraform-providers/terraform-provider-acme/issues/45))
--
--## 1.2.0 (May 14, 2019)
--
--LEGO UPDATE AND NEW DNS PROVIDERS:
--
--[lego](https://github.com/go-acme/lego) has been updated to v2.5.0. See the lego
--[CHANGELOG.md](https://github.com/go-acme/lego/blob/master/CHANGELOG.md#v250---2019-04-17) for more details. ([#47](https://github.com/terraform-providers/terraform-provider-acme/issues/47))
--
--The update brings the following new DNS providers:
--
--* `cloudns`
--* `dode`
--* `oraclecloud`
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: The default `min_days_remaining` is now set to 30
--  days, up from 7. ([#48](https://github.com/terraform-providers/terraform-provider-acme/issues/48))
--
--## 1.1.2 (May 06, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Revocation on destroy now skips expired
--  certificates. ([#42](https://github.com/terraform-providers/terraform-provider-acme/issues/42))
--
--## 1.1.1 (March 12, 2019)
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Added the optional `certificate_p12_password`
--  field, used when creating the PFX bundle found in `certificate_p12`. ([#35](https://github.com/terraform-providers/terraform-provider-acme/issues/35))
--* `resource/acme_certificate`: `certificate_p12` base64 data is now padded and
--  should be usable by Azure services that take PKCS12 data. ([#34](https://github.com/terraform-providers/terraform-provider-acme/issues/34))
--
--## 1.1.0 (March 01, 2019)
--
--LEGO UPDATE AND NEW DNS PROVIDERS:
--
--[lego](https://github.com/go-acme/lego) has been updated to v2.2.0.
--
--As part of this update, a number of new DNS providers have been added for
--`acme_certificate`:
--
--* `acmedns`
--* `alidns`
--* `conoha`
--* `designate`
--* `dreamhost`
--* `hostingde`
--* `httpreq`
--* `iij`
--* `inwx`
--* `linodev4`
--* `mydnsjp`
--* `netcup`
--* `nifcloud`
--* `sakuracloud`
--* `selectel`
--* `stackpath`
--* `transip`
--* `vegadns`
--* `vscale`
--* `zoneee`
--
--Thanks very much to @yamamoto-febc ([#10](https://github.com/terraform-providers/terraform-provider-acme/issues/10)) and @bzub ([#17](https://github.com/terraform-providers/terraform-provider-acme/issues/17)), ([#18](https://github.com/terraform-providers/terraform-provider-acme/issues/18)) for the
--help with documentation, code updates, and module migration work!
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: Added the `recursive_nameservers` attribute to
--  the `dns_challenge` block. This allows someone to specify a static resolver
--  list for DNS propagation checks that will override the resolvers of the system
--  running Terraform. This can be useful when dealing with split horizon DNS
--  scenarios. ([#25](https://github.com/terraform-providers/terraform-provider-acme/issues/25))
--* `resource/acme_certificate`: Added the `certificate_p12` output, which makes
--  the certificate, intermediate CA, and private key available in a PFX PKCS12
--  archive. This can be useful when working with Microsoft products.  ([#26](https://github.com/terraform-providers/terraform-provider-acme/issues/26))
--
--BUG FIXES:
--
--* `resource/acme_certificate`: Modifications to the `dns_challenge`
--  configuration will now persist across no-op updates. Additionally,
--  modification of these values will no longer force a new resource. ([#28](https://github.com/terraform-providers/terraform-provider-acme/issues/28))
--
--## 1.0.1 (August 08, 2018)
--
--This is release bump for the sole purpose of releasing the provider upstream. As
--of this release, you will be able to fetch this project directly via Terraform!
--
--## 1.0.0 (Jun 17, 2018)
--
--BREAKING CHANGES:
--
--* The provider has now been updated for ACME v2 and will no longer work for ACME
--  v1. If you require v1, use version 0.6.0 of the provider.
--* Existing states for `acme_registration` and `acme_certificate` will be
--  preserved on update and there should be no need to re-create either
--  registrations or certificates, so long as the CA supports it. Let's Encrypt
--  supports these updates.
--* Several fields have been removed and the resource relationships have changed.
--  For full details, see the documentation.
--* `server_url` is now a provider-level configuration value. The documentation
--  has several full examples of this in action.
--* `resource/acme_certificate`: The `http_challenge_port` and
--  `tls_challenge_port` parameters have been removed. The resource now only
--  supports DNS challenges, so `dns_challenge` is now a required field.
--  [#40][gh-40]
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: With the update to ACME v2, this resource now
--  supports wildcard certificates.
--* `resource/acme_registration`: This resource will now completely remove a
--  registration from the ACME server when the resource is destroyed. [#39][gh-39]
--
--BUG FIXES:
--
--* `resource/acme_certificate`: The post-revocation OCSP validation has been
--  completely removed. This should make destruction of the resource much more
--  reliable. [#41][gh-41]
--
--[gh-41]: https://github.com/vancluever/terraform-provider-acme/pull/41
--[gh-40]: https://github.com/vancluever/terraform-provider-acme/pull/40
--[gh-39]: https://github.com/vancluever/terraform-provider-acme/pull/39
--
--## 0.6.0
--
--**NOTE:** This is the last major release before 1.0.0, which will include
--support for ACME v2 and will more than likely break support for ACME v1. If you
--require ACME v1 after 1.0.0, use this version of the provider.
--
--NEW DNS PROVIDERS:
--
--The `acme_certificate` resource has had a provider refresh, with the following
--new providers added:
--
--* `bluecat`
--* `cloudxns`
--* `duckdns`
--* `fastdns`
--* `gandiv5`
--* `glesys`
--* `lightsail`
--* `namedotcom`
--* `exec`
--
--These providers, and previous providers, have been synchronized with their state
--at lego version [v0.5.0][lego-dns-providers-v0.5.0].
--
--[lego-dns-providers-v0.5.0]: https://github.com/xenolf/lego/tree/v0.5.0/providers/dns
--
--IMPROVEMENTS:
--
--* `resource/acme_certificate`: This resource now supports supplying the `delete`
--  [resource timeout][resource-timeouts] timeout, which controls the certificate
--  revocation timeout (or more specifically, the OCSP wait timeout).
--  ([#32][gh-32])
--* `resource/acme_certificate`: Added alias mappings for the Azure DNS provider's
--  environment variables so that the same environment variables for the
--  [Terraform Azure Provider][tf-azurerm-provider] can be used with the ACME
--  plugin. ([#36][gh-36])
--* `resource/acme_certificate`: Already revoked certificates are ignored by the
--  destroy process, ensuring that they are destroyed without error in Terraform.
--  ([#33][gh-33])
--* `resource/acme_certificate`: The `config` field of `dns_challenge` has now
--  been marked as a sensitive field to prevent credentials from being leaked in
--  output. ([#31][gh-31])
--
--[resource-timeouts]: https://www.terraform.io/docs/configuration/resources.html#timeouts
--[tf-azurerm-provider]: https://www.terraform.io/docs/providers/azurerm/index.html
--[gh-36]: https://github.com/vancluever/terraform-provider-acme/pull/36
--[gh-33]: https://github.com/vancluever/terraform-provider-acme/pull/33
--[gh-32]: https://github.com/vancluever/terraform-provider-acme/pull/32
--[gh-31]: https://github.com/vancluever/terraform-provider-acme/pull/31
--
--## 0.5.0
--
--Most of the items in this release are the result of a refresh of lego, which
--brings the following new features, amongst others:
--
-- * DNSimple API now supports V2.
-- * You can now supply `AWS_HOSTED_ZONE_ID` to the route53 DNS challenge to
--   directly specify the zone ID for the DNS challenge, instead of getting the
--   provider to try and detect it.
-- * New DNS challenge providers: `azure`, `auroradns`, `dnspod`, `exoscale`,
--   `godaddy`, `linode`, `rackspace`, `ns1`, and `otc`.
--
--## v0.4.0
--
--### General Information
--
-- * Releases are no longer signed. SHA256SUMS are still published, however, and
--   signing may come back under a more general signing key. Keep this in mind if
--   you need earlier releases as well.
-- * Built against Terraform v0.10.0-beta2 with the [custom diff
--   patch](https://github.com/hashicorp/terraform/pull/14887). Although the
--   plugin API version has not yet changed, YMMV with using this on Terraform
--   versions below v0.10.0-beta2. See below for details on why we are using the
--   custom diff patch.
--
--### New Diff Behaviour for Certificate Renewals
--
--The correctness of the certificate renewal behaviour in this resource has been a
--long-running problem, due to the fact that certificates were renewed during the
--refresh cycle. This caused silent updates and empty diffs unless you had
--resources in the same stack that depended on the certificates. In addition to
--this, this has led to issues with implementing settings like
--`min_days_remaining` in a way that made its setting effective on the present run
--without `ForceNew`. These issues are articulated in #13 and #15.
--
--As of this version, these issues are no longer a problem. Using the
--aforementioned custom diff patch, the certificate's expiry is now checked during
--the diff phase of a `terraform plan`, articulated below:
--
--```
--The Terraform execution plan has been generated and is shown below.
--Resources are shown in alphabetical order for quick scanning. Green resources
--will be created (or destroyed and then created if an existing resource
--exists), yellow resources are being changed in-place, and red resources
--will be destroyed. Cyan entries are data sources to be read.
--
--Note: You didn't specify an "-out" parameter to save this plan, so when
--"apply" is called, Terraform can't guarantee this is what will execute.
--
--  ~ acme_certificate.certificate
--      certificate_pem: "-----BEGIN CERTIFICATE-----
--xxxxxxx
-------END CERTIFICATE-----
--" => "<computed>"
--```
--
--If the certificate requires renewal, `certificate_pem` is set to `<computed>`
--and correctly renewed during the next `terraform apply` run.
--
--This also means that setting `min_days_remaining` no longer forces a new
--resource and also works immediately - if you adjust it, its settings will work
--during your next plan.
--
--## v0.3.0
--
--Fully updated version, supporting v0.9.0. Make sure you use this version for the
--full v0.9.0 release, as v0.3.0-beta2 will not work (the plugin API version has
--been incremented again). People still on versions of TF before v0.9.0 should use
--a v0.2.x version.
--
--## v0.3.0-beta2
--
--This beta version tracks Terraform `v0.9.0`, which as of this writing (Feb 28th,
--2017) is currently in beta. All that has changed so far on this side is that we
--need to rebuild as the plugin API has again changed.
--
--## v0.2.1
--
--This is a bugfix to correct #6 and ensure that TF will abort if a DNS challenge
--is improperly configured (example: missing credentials). Previous to this
--release if the DNS challenge could not be properly set up, the plugin would have
--proceeded with an HTTP or TLS challenge.
--
--## v0.2.0
--
--Note that this release is built for Terraform v0.8.0 and higher - using with
--v0.7.x and lower may not work. Use the v0.1.0 release instead.
--
-- * Added the `must_staple` option - this option adds the [OCSP Stapling
--   Required][1] extension to created certificates, ensuring that a valid OCSP
--   Staple must be included in the TLS handshake for the connection to proceed.
--   This is disabled by default. This option has no effect when being used with
--   external CSRs.
--
--[1]: https://letsencrypt.org/docs/integration-guide/#implement-ocsp-stapling
--
--## v0.1.0
--
--Initial release.
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/docs/index.md ./vancluever/v2.21.0/docs/index.md
---- ./vancluever/v1/docs/index.md	2024-04-26 15:52:22.080837262 +0800
-+++ ./vancluever/v2.21.0/docs/index.md	2024-04-26 10:49:54.810561638 +0800
-@@ -53,7 +53,7 @@
- terraform {
-   required_providers {
-     acme = {
--      source  = "vancluever/acme"
-+      source  = "Kid-debug/acme"
-       version = "~> 2.0"
-     }
-   }
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/docs/resources/certificate.md ./vancluever/v2.21.0/docs/resources/certificate.md
---- ./vancluever/v1/docs/resources/certificate.md	2024-04-26 15:52:22.080837262 +0800
-+++ ./vancluever/v2.21.0/docs/resources/certificate.md	2024-04-26 10:49:54.814561765 +0800
-@@ -450,7 +450,7 @@
-   to grant escalated network privileges to either Terraform (`setcap
-   'cap_net_bind_service=+eip' "$(which terraform)"`), or the provider (`setcap
-   'cap_net_bind_service=+ep'
--  .terraform/providers/registry.terraform.io/vancluever/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
-+  .terraform/providers/registry.terraform.io/Kid-debug/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
-   Both have drawbacks: granting capabilites to Terraform itself will mean that
-   Terraform core and any provider launched by it will also have the capability,
-   while capabilities granted to the provider will be lost every time the
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.github/dependabot.yml ./vancluever/v2.21.0/.github/dependabot.yml
---- ./vancluever/v1/.github/dependabot.yml	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.github/dependabot.yml	1970-01-01 07:30:00.000000000 +0730
-@@ -1,11 +0,0 @@
--version: 2
--updates:
--  - package-ecosystem: "gomod"
--    directory: "/"
--    schedule:
--      interval: "daily"
--
--  - package-ecosystem: "github-actions"
--    directory: "/"
--    schedule:
--      interval: "daily"
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.github/ISSUE_TEMPLATE/config.yml ./vancluever/v2.21.0/.github/ISSUE_TEMPLATE/config.yml
---- ./vancluever/v1/.github/ISSUE_TEMPLATE/config.yml	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.github/ISSUE_TEMPLATE/config.yml	1970-01-01 07:30:00.000000000 +0730
-@@ -1,8 +0,0 @@
--blank_issues_enabled: false
--contact_links:
--  - name: Submitting a lego Issue
--    url: https://github.com/vancluever/terraform-provider-acme/blob/main/docs/lego.md
--    about: Details on how to submit an issue for DNS provider-related issues and other lego-related problems.
--  - name: Terraform Community Directory
--    url: https://www.terraform.io/community
--    about: Links for references on where to ask general Terraform questions or submit issues.
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.github/ISSUE_TEMPLATE/provider-bugs-feature-requests-questions.md ./vancluever/v2.21.0/.github/ISSUE_TEMPLATE/provider-bugs-feature-requests-questions.md
---- ./vancluever/v1/.github/ISSUE_TEMPLATE/provider-bugs-feature-requests-questions.md	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.github/ISSUE_TEMPLATE/provider-bugs-feature-requests-questions.md	1970-01-01 07:30:00.000000000 +0730
-@@ -1,31 +0,0 @@
-----
--name: Provider bugs/feature requests/questions
--about: Submit a provider-related issue (for DNS provider issues, see "Submitting a lego Issue").
--title: ''
--labels: ''
--assignees: ''
--
-----
--
--**Please delete this message before you submit your issue.**
--
--Thanks for your interest in using the Terraform ACME provider!
--
--Please read and consider the following before submitting your report.
--
--This provider integrates [lego](https://github.com/go-acme/lego) and ultimately uses its exported primitives in a Terraform context. A large number of the issues submitted to this repository are actually issues related to lego, particularly its DNS providers.
--
--Before you submit an issue:
--
--* Search the issue tracker here to see if your problem has been answered (even for lego-related issues; there is plenty of history and options that have been added to work around various issues that neither we nor lego can fix).
--* If your problem is not assuredly related to this provider itself (such as in the case with DNS provider issues), please attempt to reproduce the issue with [lego's CLI tool](https://go-acme.github.io/lego/installation/).
--* Note that new DNS provider feature requests need to go through lego.
--
--DNS provider-related issues that are not specifically related to how this provider interacts with lego will more than likely be closed with a referral back to lego. Please read our [instructions](https://github.com/vancluever/terraform-provider-acme/blob/main/docs/lego.md) on submitting a lego issue if you need to.
--
--Please also understand that there are other issues that we will not be able to really troubleshoot for you or reliably provide support on:
--
--* Transient network issues: Please check your network configuration, contact the CA you are working with, and/or contact your service provider(s).
--* General Terraform configuration issues: Please refer to the [Terraform community page](https://www.terraform.io/community) for links on where best to direct your request.
--
--Thanks!
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.github/workflows/test.yml ./vancluever/v2.21.0/.github/workflows/test.yml
---- ./vancluever/v1/.github/workflows/test.yml	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.github/workflows/test.yml	1970-01-01 07:30:00.000000000 +0730
-@@ -1,63 +0,0 @@
--name: test
--on:
--  push:
--    branches:
--      - '**'
--    tags-ignore:
--      - 'v*'
--  pull_request:
--    branches:
--      - '**'
--jobs:
--  skip_duplicate:
--    runs-on: ubuntu-latest
--    outputs:
--      should_skip: ${{ steps.skip_duplicate.outputs.should_skip }}
--    steps:
--      - id: skip_duplicate
--        uses: fkirc/skip-duplicate-actions@v5
--        with:
--          concurrent_skipping: 'same_content_newer'
--  go-tests:
--    needs: skip_duplicate
--    if: needs.skip_duplicate.outputs.should_skip != 'true'
--    runs-on: ubuntu-latest
--    steps:
--      - uses: actions/checkout@v4
--      - uses: actions/setup-go@v5
--        with:
--          go-version: '^1.17.5'
--          check-latest: true
--      - name: Cache (Go Modules)
--        uses: actions/cache@v4
--        env:
--          cache-name: go-mod-cache
--        with:
--          path: /home/runner/go/pkg/mod
--          key: ${{ env.cache-name}}-${{ hashFiles('go.sum') }}
--          restore-keys: |
--            ${{ env.cache-name}}-
--      - name: Cache (Go Build)
--        uses: actions/cache@v4
--        env:
--          cache-name: go-build-cache
--          cache-dir: /home/runner/.cache/go-build
--        with:
--          path: ${{ env.cache-dir }}
--          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
--          restore-keys: |
--            ${{ env.cache-name}}-
--      - name: Cache (Pebble)
--        uses: actions/cache@v4
--        env:
--          cache-name: pebble-cache
--          cache-dir: /home/runner/go/src/github.com/letsencrypt/pebble
--        with:
--          path: ${{ env.cache-dir }}
--          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
--          restore-keys: |
--            ${{ env.cache-name}}-
--      - name: Verify Modules
--        run: go mod verify
--      - name: Run Tests
--        run: make tools pebble-start memcached-start test
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.gitignore ./vancluever/v2.21.0/.gitignore
---- ./vancluever/v1/.gitignore	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.gitignore	2024-04-26 14:43:18.000534197 +0800
-@@ -23,6 +23,7 @@
- *.iml
- *.test
- *.iml
-+/test/
- 
- website/vendor
- 
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/go.mod ./vancluever/v2.21.0/go.mod
---- ./vancluever/v1/go.mod	2024-04-26 15:52:22.080837262 +0800
-+++ ./vancluever/v2.21.0/go.mod	2024-04-26 15:00:45.350860655 +0800
-@@ -1,11 +1,10 @@
--module github.com/vancluever/terraform-provider-acme/v2
-+module github.com/Kid-debug/terraform-provider-acme/v2
- 
--go 1.21
--
--toolchain go1.21.0
-+go 1.21.0
- 
- require (
- 	github.com/BurntSushi/toml v1.3.2
-+	github.com/cenkalti/backoff/v4 v4.2.1
- 	github.com/davecgh/go-spew v1.1.1
- 	github.com/go-acme/lego/v4 v4.16.1
- 	github.com/google/go-cmp v0.6.0
-@@ -19,195 +18,3 @@
- 	google.golang.org/protobuf v1.33.0
- 	software.sslmate.com/src/go-pkcs12 v0.4.0
- )
--
--require (
--	cloud.google.com/go/compute v1.24.0 // indirect
--	cloud.google.com/go/compute/metadata v0.2.3 // indirect
--	github.com/AdamSLevy/jsonrpc2/v14 v14.1.0 // indirect
--	github.com/Azure/azure-sdk-for-go v68.0.0+incompatible // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/azcore v1.6.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.3.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/internal v1.3.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns v1.1.0 // indirect
--	github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns v1.1.0 // indirect
--	github.com/Azure/go-autorest v14.2.0+incompatible // indirect
--	github.com/Azure/go-autorest/autorest v0.11.29 // indirect
--	github.com/Azure/go-autorest/autorest/adal v0.9.22 // indirect
--	github.com/Azure/go-autorest/autorest/azure/auth v0.5.12 // indirect
--	github.com/Azure/go-autorest/autorest/azure/cli v0.4.5 // indirect
--	github.com/Azure/go-autorest/autorest/date v0.3.0 // indirect
--	github.com/Azure/go-autorest/autorest/to v0.4.0 // indirect
--	github.com/Azure/go-autorest/logger v0.2.1 // indirect
--	github.com/Azure/go-autorest/tracing v0.6.0 // indirect
--	github.com/AzureAD/microsoft-authentication-library-for-go v1.0.0 // indirect
--	github.com/OpenDNS/vegadns2client v0.0.0-20180418235048-a3fa4a771d87 // indirect
--	github.com/ProtonMail/go-crypto v1.1.0-alpha.0 // indirect
--	github.com/agext/levenshtein v1.2.2 // indirect
--	github.com/akamai/AkamaiOPEN-edgegrid-golang v1.2.2 // indirect
--	github.com/aliyun/alibaba-cloud-sdk-go v1.61.1755 // indirect
--	github.com/andres-erbsen/clock v0.0.0-20160526145045-9e14626cd129 // indirect
--	github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect
--	github.com/aws/aws-sdk-go-v2 v1.24.1 // indirect
--	github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 // indirect
--	github.com/aws/aws-sdk-go-v2/config v1.26.6 // indirect
--	github.com/aws/aws-sdk-go-v2/credentials v1.16.16 // indirect
--	github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect
--	github.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 // indirect
--	github.com/aws/aws-sdk-go-v2/service/lightsail v1.34.0 // indirect
--	github.com/aws/aws-sdk-go-v2/service/route53 v1.37.0 // indirect
--	github.com/aws/aws-sdk-go-v2/service/s3 v1.48.1 // indirect
--	github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect
--	github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect
--	github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect
--	github.com/aws/smithy-go v1.19.0 // indirect
--	github.com/boombuler/barcode v1.0.1 // indirect
--	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
--	github.com/civo/civogo v0.3.11 // indirect
--	github.com/cloudflare/circl v1.3.7 // indirect
--	github.com/cloudflare/cloudflare-go v0.86.0 // indirect
--	github.com/cpu/goacmedns v0.1.1 // indirect
--	github.com/deepmap/oapi-codegen v1.9.1 // indirect
--	github.com/dimchansky/utfbom v1.1.1 // indirect
--	github.com/dnsimple/dnsimple-go v1.2.0 // indirect
--	github.com/exoscale/egoscale v0.102.3 // indirect
--	github.com/fatih/color v1.16.0 // indirect
--	github.com/fatih/structs v1.1.0 // indirect
--	github.com/felixge/httpsnoop v1.0.4 // indirect
--	github.com/fsnotify/fsnotify v1.7.0 // indirect
--	github.com/ghodss/yaml v1.0.0 // indirect
--	github.com/go-errors/errors v1.0.1 // indirect
--	github.com/go-jose/go-jose/v4 v4.0.1 // indirect
--	github.com/go-logr/logr v1.4.1 // indirect
--	github.com/go-logr/stdr v1.2.2 // indirect
--	github.com/go-resty/resty/v2 v2.11.0 // indirect
--	github.com/go-viper/mapstructure/v2 v2.0.0-alpha.1 // indirect
--	github.com/goccy/go-json v0.10.2 // indirect
--	github.com/gofrs/uuid v4.4.0+incompatible // indirect
--	github.com/golang-jwt/jwt/v4 v4.5.0 // indirect
--	github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect
--	github.com/golang/protobuf v1.5.4 // indirect
--	github.com/google/go-querystring v1.1.0 // indirect
--	github.com/google/s2a-go v0.1.7 // indirect
--	github.com/google/uuid v1.6.0 // indirect
--	github.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect
--	github.com/googleapis/gax-go/v2 v2.12.0 // indirect
--	github.com/gophercloud/gophercloud v1.0.0 // indirect
--	github.com/gophercloud/utils v0.0.0-20210216074907-f6de111f2eae // indirect
--	github.com/hashicorp/errwrap v1.0.0 // indirect
--	github.com/hashicorp/go-checkpoint v0.5.0 // indirect
--	github.com/hashicorp/go-cleanhttp v0.5.2 // indirect
--	github.com/hashicorp/go-cty v1.4.1-0.20200414143053-d3edf31b6320 // indirect
--	github.com/hashicorp/go-hclog v1.5.0 // indirect
--	github.com/hashicorp/go-retryablehttp v0.7.5 // indirect
--	github.com/hashicorp/go-version v1.6.0 // indirect
--	github.com/hashicorp/hc-install v0.6.3 // indirect
--	github.com/hashicorp/hcl/v2 v2.19.1 // indirect
--	github.com/hashicorp/logutils v1.0.0 // indirect
--	github.com/hashicorp/terraform-exec v0.20.0 // indirect
--	github.com/hashicorp/terraform-json v0.21.0 // indirect
--	github.com/hashicorp/terraform-plugin-go v0.22.0 // indirect
--	github.com/hashicorp/terraform-plugin-log v0.9.0 // indirect
--	github.com/hashicorp/terraform-registry-address v0.2.3 // indirect
--	github.com/hashicorp/terraform-svchost v0.1.1 // indirect
--	github.com/hashicorp/yamux v0.1.1 // indirect
--	github.com/iij/doapi v0.0.0-20190504054126-0bbf12d6d7df // indirect
--	github.com/infobloxopen/infoblox-go-client v1.1.1 // indirect
--	github.com/jmespath/go-jmespath v0.4.0 // indirect
--	github.com/json-iterator/go v1.1.12 // indirect
--	github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213 // indirect
--	github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b // indirect
--	github.com/kr/pretty v0.3.1 // indirect
--	github.com/kylelemons/godebug v1.1.0 // indirect
--	github.com/labbsr0x/bindman-dns-webhook v1.0.2 // indirect
--	github.com/labbsr0x/goh v1.0.1 // indirect
--	github.com/linode/linodego v1.28.0 // indirect
--	github.com/liquidweb/liquidweb-cli v0.6.9 // indirect
--	github.com/liquidweb/liquidweb-go v1.6.4 // indirect
--	github.com/mattn/go-colorable v0.1.13 // indirect
--	github.com/mattn/go-isatty v0.0.20 // indirect
--	github.com/miekg/dns v1.1.58 // indirect
--	github.com/mimuret/golang-iij-dpf v0.9.1 // indirect
--	github.com/mitchellh/go-homedir v1.1.0 // indirect
--	github.com/mitchellh/go-testing-interface v1.14.1 // indirect
--	github.com/mitchellh/go-wordwrap v1.0.0 // indirect
--	github.com/mitchellh/mapstructure v1.5.0 // indirect
--	github.com/mitchellh/reflectwalk v1.0.2 // indirect
--	github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect
--	github.com/modern-go/reflect2 v1.0.2 // indirect
--	github.com/namedotcom/go v0.0.0-20180403034216-08470befbe04 // indirect
--	github.com/nrdcg/auroradns v1.1.0 // indirect
--	github.com/nrdcg/bunny-go v0.0.0-20230728143221-c9dda82568d9 // indirect
--	github.com/nrdcg/desec v0.7.0 // indirect
--	github.com/nrdcg/dnspod-go v0.4.0 // indirect
--	github.com/nrdcg/freemyip v0.2.0 // indirect
--	github.com/nrdcg/goinwx v0.10.0 // indirect
--	github.com/nrdcg/mailinabox v0.2.0 // indirect
--	github.com/nrdcg/namesilo v0.2.1 // indirect
--	github.com/nrdcg/nodion v0.1.0 // indirect
--	github.com/nrdcg/porkbun v0.3.0 // indirect
--	github.com/nzdjb/go-metaname v1.0.0 // indirect
--	github.com/oklog/run v1.1.0 // indirect
--	github.com/onsi/gomega v1.27.10 // indirect
--	github.com/oracle/oci-go-sdk v24.3.0+incompatible // indirect
--	github.com/ovh/go-ovh v1.4.3 // indirect
--	github.com/patrickmn/go-cache v2.1.0+incompatible // indirect
--	github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 // indirect
--	github.com/pkg/errors v0.9.1 // indirect
--	github.com/pmezard/go-difflib v1.0.0 // indirect
--	github.com/pquerna/otp v1.4.0 // indirect
--	github.com/rogpeppe/go-internal v1.11.0 // indirect
--	github.com/sacloud/api-client-go v0.2.8 // indirect
--	github.com/sacloud/go-http v0.1.6 // indirect
--	github.com/sacloud/iaas-api-go v1.11.1 // indirect
--	github.com/sacloud/packages-go v0.0.9 // indirect
--	github.com/scaleway/scaleway-sdk-go v1.0.0-beta.22 // indirect
--	github.com/sirupsen/logrus v1.9.3 // indirect
--	github.com/smartystreets/go-aws-auth v0.0.0-20180515143844-0c1422d1fdb9 // indirect
--	github.com/softlayer/softlayer-go v1.1.3 // indirect
--	github.com/softlayer/xmlrpc v0.0.0-20200409220501-5f089df7cb7e // indirect
--	github.com/spf13/cast v1.3.1 // indirect
--	github.com/stretchr/objx v0.5.1 // indirect
--	github.com/stretchr/testify v1.8.4 // indirect
--	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.490 // indirect
--	github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod v1.0.490 // indirect
--	github.com/transip/gotransip/v6 v6.23.0 // indirect
--	github.com/ultradns/ultradns-go-sdk v1.6.1-20231103022937-8589b6a // indirect
--	github.com/vinyldns/go-vinyldns v0.9.16 // indirect
--	github.com/vmihailenco/msgpack v4.0.4+incompatible // indirect
--	github.com/vmihailenco/msgpack/v5 v5.4.1 // indirect
--	github.com/vmihailenco/tagparser/v2 v2.0.0 // indirect
--	github.com/vultr/govultr/v2 v2.17.2 // indirect
--	github.com/yandex-cloud/go-genproto v0.0.0-20220805142335-27b56ddae16f // indirect
--	github.com/yandex-cloud/go-sdk v0.0.0-20220805164847-cf028e604997 // indirect
--	github.com/zclconf/go-cty v1.14.2 // indirect
--	go.opencensus.io v0.24.0 // indirect
--	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 // indirect
--	go.opentelemetry.io/otel v1.22.0 // indirect
--	go.opentelemetry.io/otel/metric v1.22.0 // indirect
--	go.opentelemetry.io/otel/trace v1.22.0 // indirect
--	go.uber.org/ratelimit v0.2.0 // indirect
--	golang.org/x/crypto v0.21.0 // indirect
--	golang.org/x/mod v0.15.0 // indirect
--	golang.org/x/net v0.23.0 // indirect
--	golang.org/x/oauth2 v0.17.0 // indirect
--	golang.org/x/sys v0.18.0 // indirect
--	golang.org/x/text v0.14.0 // indirect
--	golang.org/x/time v0.5.0 // indirect
--	golang.org/x/tools v0.17.0 // indirect
--	google.golang.org/api v0.162.0 // indirect
--	google.golang.org/appengine v1.6.8 // indirect
--	google.golang.org/genproto v0.0.0-20240227224415-6ceb2ff114de // indirect
--	google.golang.org/genproto/googleapis/api v0.0.0-20240227224415-6ceb2ff114de // indirect
--	google.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de // indirect
--	gopkg.in/ini.v1 v1.67.0 // indirect
--	gopkg.in/ns1/ns1-go.v2 v2.7.13 // indirect
--	gopkg.in/yaml.v2 v2.4.0 // indirect
--	gopkg.in/yaml.v3 v3.0.1 // indirect
--)
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/.goreleaser.yml ./vancluever/v2.21.0/.goreleaser.yml
---- ./vancluever/v1/.goreleaser.yml	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/.goreleaser.yml	2024-04-26 15:47:41.643254842 +0800
-@@ -5,42 +5,43 @@
-     # this is just an example and not a requirement for provider building/publishing
-     - go mod tidy
- builds:
--- env:
--    # goreleaser does not work with CGO, it could also complicate
--    # usage by users in CI/CD systems like Terraform Cloud where
--    # they are unable to install libraries.
--    - CGO_ENABLED=0
--  mod_timestamp: '{{ .CommitTimestamp }}'
--  flags:
--    - -trimpath
--  ldflags:
--    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
--  goos:
--    - freebsd
--    - windows
--    - linux
--    - darwin
--  goarch:
--    - amd64
--    - '386'
--    - arm
--    - arm64
--  ignore:
--    - goos: darwin
--      goarch: '386'
--    - goos: freebsd
--      goarch: 'arm'
--  binary: '{{ .ProjectName }}_v{{ .Version }}'
-+  - env:
-+      # goreleaser does not work with CGO, it could also complicate
-+      # usage by users in CI/CD systems like Terraform Cloud where
-+      # they are unable to install libraries.
-+      - CGO_ENABLED=0
-+    mod_timestamp: "{{ .CommitTimestamp }}"
-+    flags:
-+      - -trimpath
-+    ldflags:
-+      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
-+    goos:
-+      - freebsd
-+      - windows
-+      - linux
-+      - darwin
-+    goarch:
-+      - amd64
-+      - "386"
-+      - arm
-+      - arm64
-+    ignore:
-+      - goos: darwin
-+        goarch: "386"
-+    binary: "{{ .ProjectName }}_v{{ .Version }}"
- archives:
--- format: zip
--  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
-+  - format: zip
-+    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
- checksum:
--  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
-+  extra_files:
-+    - glob: "terraform-registry-manifest.json"
-+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-+  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
-   algorithm: sha256
- signs:
-   - artifacts: checksum
-     args:
--      # if you are using this is a GitHub action or some other automated pipeline, you 
-+      # if you are using this is a GitHub action or some other automated pipeline, you
-       # need to pass the batch flag to indicate its not interactive.
-       - "--batch"
-       - "--local-user"
-@@ -50,6 +51,9 @@
-       - "--detach-sign"
-       - "${artifact}"
- release:
-+  extra_files:
-+    - glob: "terraform-registry-manifest.json"
-+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-   # If you want to manually examine the release before its live, uncomment this line:
-   # draft: true
- changelog:
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/go.sum ./vancluever/v2.21.0/go.sum
---- ./vancluever/v1/go.sum	2024-04-26 15:52:22.084837238 +0800
-+++ ./vancluever/v2.21.0/go.sum	2024-04-26 14:40:31.112841949 +0800
-@@ -453,9 +453,8 @@
- github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
- github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
- github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
-+github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
- github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
--github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
--github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
- github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
- github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
- github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
-@@ -588,9 +587,8 @@
- github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
- github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
- github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=
-+github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=
- github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
--github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
--github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
- github.com/oracle/oci-go-sdk v24.3.0+incompatible h1:x4mcfb4agelf1O4/1/auGlZ1lr97jXRSSN5MxTgG/zU=
- github.com/oracle/oci-go-sdk v24.3.0+incompatible/go.mod h1:VQb79nF8Z2cwLkLS35ukwStZIg5F66tcBccjip/j888=
- github.com/ovh/go-ovh v1.4.3 h1:Gs3V823zwTFpzgGLZNI6ILS4rmxZgJwJCz54Er9LwD0=
-@@ -639,9 +637,8 @@
- github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
- github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
- github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
--github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
--github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=
--github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=
-+github.com/rogpeppe/go-internal v1.8.1 h1:geMPLpDpQOgVyCg5z5GoRwLHepNdb71NXb67XFkP+Eg=
-+github.com/rogpeppe/go-internal v1.8.1/go.mod h1:JeRgkft04UBgHMgCIwADu4Pn6Mtm5d4nPKWu0nJ5d+o=
- github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
- github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
- github.com/sacloud/api-client-go v0.2.8 h1:tIY6PZNBX900K66TqEPa4d6UIbedUczfCBnPJkzi8kw=
-@@ -791,8 +788,8 @@
- golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
- golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=
- golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=
--golang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=
--golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=
-+golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=
-+golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
- golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
- golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
- golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
-@@ -849,8 +846,8 @@
- golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
- golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
- golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=
--golang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=
--golang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=
-+golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=
-+golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
- golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
- golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
- golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
-@@ -922,16 +919,16 @@
- golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
- golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
- golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
--golang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=
--golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
-+golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=
-+golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
- golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
- golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
- golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
- golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
- golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
- golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=
--golang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=
--golang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=
-+golang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=
-+golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
- golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
- golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
- golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/main.go ./vancluever/v2.21.0/main.go
---- ./vancluever/v1/main.go	2024-04-26 15:52:22.084837238 +0800
-+++ ./vancluever/v2.21.0/main.go	2024-04-26 10:52:35.743391586 +0800
-@@ -3,9 +3,9 @@
- import (
- 	"os"
- 
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme"
-+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
- 	"github.com/hashicorp/terraform-plugin-sdk/v2/plugin"
--	"github.com/vancluever/terraform-provider-acme/v2/acme"
--	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
- )
- 
- func main() {
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/proto/dnsplugin/v1/dnsplugin.proto ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto
---- ./vancluever/v1/proto/dnsplugin/v1/dnsplugin.proto	2024-04-26 15:52:22.084837238 +0800
-+++ ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto	2024-04-26 10:45:24.540863543 +0800
-@@ -4,10 +4,10 @@
- 
- import "google/protobuf/duration.proto";
- 
--option go_package = "github.com/vancluever/terraform-provider-acme/proto/dnsplugin/v1";
-+option go_package = "github.com/Kid-debug/terraform-provider-acme/proto/dnsplugin/v1";
- 
- // DNSProviderService is a protobuf wrapper for the acme DNS challenge API. This
--// is designed to be used to wrap an instance of DNS providers in 
-+// is designed to be used to wrap an instance of DNS providers in
- service DNSProviderService {
-   // Configure needs to be called to initialize the provider and set the
-   // configuration.
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/README.md ./vancluever/v2.21.0/README.md
---- ./vancluever/v1/README.md	2024-04-26 15:52:22.072837312 +0800
-+++ ./vancluever/v2.21.0/README.md	2024-04-26 11:50:13.275685902 +0800
-@@ -3,10 +3,9 @@
- 
- This is the repository for the Terraform ACME Provider, which one can use with
- Terraform to manage and generate certificates generated by an [ACME][about-acme]
--CA, such as [Let's Encrypt][lets-encrypt].
-+CA, such as Let's Encrypt, ZeroSSL and GCP.
- 
- [about-acme]: https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html
--[lets-encrypt]: https://letsencrypt.org
- 
- For general information about Terraform, visit the [official
- website][terraform-io] and the [GitHub project page][terraform-gh].
-@@ -18,16 +17,9 @@
- 
- ## Documentation
- 
--Documentation for this provider can be found at
--https://registry.terraform.io/providers/vancluever/acme/latest/docs.
-+This is a forked, reworked repository of Terraform ACME provider by Kid-debug to provide backoff retry functionalities.
-+Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/Kid-debug/acme/latest/docs)
- 
--## License
-+## Retryable Errors
- 
--```
--Copyright 2018-2023 Chris Marchesi
--Copyright 2016-2018 PayByPhone Technologies, Inc.
--
--This Source Code Form is subject to the terms of the Mozilla Public
--License, v. 2.0. If a copy of the MPL was not distributed with this
--file, You can obtain one at http://mozilla.org/MPL/2.0/.
-- ```
-+Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
-diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v1/terraform-registry-manifest.json ./vancluever/v2.21.0/terraform-registry-manifest.json
---- ./vancluever/v1/terraform-registry-manifest.json	1970-01-01 07:30:00.000000000 +0730
-+++ ./vancluever/v2.21.0/terraform-registry-manifest.json	2024-04-26 15:50:36.845576130 +0800
-@@ -0,0 +1,8 @@
-+{
-+	"version": 1,
-+	"metadata": {
-+		"protocol_versions": [
-+			"5.0"
-+		]
-+	}
-+}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./proto/dnsplugin/v1/dnsplugin.proto ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto
--- ./proto/dnsplugin/v1/dnsplugin.proto	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto	2024-04-26 18:07:52.560299129 +0800
@@ -4,10 +4,10 @@
 
 import "google/protobuf/duration.proto";
 
-option go_package = "github.com/vancluever/terraform-provider-acme/proto/dnsplugin/v1";
+option go_package = "github.com/Kid-debug/terraform-provider-acme/proto/dnsplugin/v1";
 
 // DNSProviderService is a protobuf wrapper for the acme DNS challenge API. This
-// is designed to be used to wrap an instance of DNS providers in 
+// is designed to be used to wrap an instance of DNS providers in
 service DNSProviderService {
   // Configure needs to be called to initialize the provider and set the
   // configuration.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./README.md ./vancluever/v2.21.0/README.md
--- ./README.md	2024-04-26 17:21:52.898088602 +0800
+++ ./vancluever/v2.21.0/README.md	2024-04-26 18:07:52.560299129 +0800
@@ -1 +1,25 @@
-# terraform-provider-acme
\ No newline at end of file
+Terraform ACME Provider
+========================
+
+This is the repository for the Terraform ACME Provider, which one can use with
+Terraform to manage and generate certificates generated by an [ACME][about-acme]
+CA, such as Let's Encrypt, ZeroSSL and GCP.
+
+[about-acme]: https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html
+
+For general information about Terraform, visit the [official
+website][terraform-io] and the [GitHub project page][terraform-gh].
+
+[terraform-io]: https://www.terraform.io/
+[terraform-gh]: https://github.com/hashicorp/terraform
+
+:warning: **NOTE:** The ACME provider found here supports ACME v2 only.
+
+## Documentation
+
+This is a forked, reworked repository of Terraform ACME provider by Kid-debug to provide backoff retry functionalities.
+Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/Kid-debug/acme/latest/docs)
+
+## Retryable Errors
+
+Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./terraform-registry-manifest.json ./vancluever/v2.21.0/terraform-registry-manifest.json
--- ./terraform-registry-manifest.json	1970-01-01 07:30:00.000000000 +0730
+++ ./vancluever/v2.21.0/terraform-registry-manifest.json	2024-04-26 18:07:52.560299129 +0800
@@ -0,0 +1,8 @@
+{
+	"version": 1,
+	"metadata": {
+		"protocol_versions": [
+			"5.0"
+		]
+	}
+}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_migrations_011.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_011.go
--- ./vancluever/v2.21.0/acme/acme_migrations_011.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_011.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,172 +0,0 @@
-package acme
-
-import (
-	"log"
-	"strings"
-
-	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
-)
-
-// resourceACMERegistrationMigrateState is the outer migration function for
-// acme_registration, dispatching to specific incremental version upgraders as
-// need be.
-func resourceACMERegistrationMigrateState(version int, os *terraform.InstanceState, meta interface{}) (*terraform.InstanceState, error) {
-	// Guard against a nil state.
-	if os == nil {
-		return nil, nil
-	}
-
-	// Guard against empty state, can't do anything with it
-	if os.Empty() {
-		return os, nil
-	}
-
-	var migrateFunc func(*terraform.InstanceState, interface{}) error
-	switch version {
-	case 0:
-		log.Printf("[DEBUG] Migrating acme_registration state: old v%d state: %#v", version, os)
-		migrateFunc = migrateACMERegistrationStateV1
-	default:
-		// Migration is complete
-		log.Printf("[DEBUG] Migrating acme_registration state: completed v%d state: %#v", version, os)
-		return os, nil
-	}
-	if err := migrateFunc(os, meta); err != nil {
-		return nil, err
-	}
-	version++
-	log.Printf("[DEBUG] Migrating acme_registration state: new v%d state: %#v", version, os)
-	return resourceACMERegistrationMigrateState(version, os, meta)
-}
-
-// migrateACMERegistrationStateV1 handles migration of acme_registration from
-// schema version 0 to version 1.
-func migrateACMERegistrationStateV1(is *terraform.InstanceState, meta interface{}) error {
-	delete(is.Attributes, "server_url")
-	delete(is.Attributes, "registration_body")
-	delete(is.Attributes, "registration_new_authz_url")
-	delete(is.Attributes, "registration_tos_url")
-
-	return nil
-}
-
-// resourceACMECertificateMigrateState is the outer migration function for
-// acme_certificate, dispatching to specific incremental version upgraders as
-// need be.
-func resourceACMECertificateMigrateState(version int, os *terraform.InstanceState, meta interface{}) (*terraform.InstanceState, error) {
-	// Guard against a nil state.
-	if os == nil {
-		return nil, nil
-	}
-
-	// Guard against empty state, can't do anything with it
-	if os.Empty() {
-		return os, nil
-	}
-
-	var migrateFunc func(*terraform.InstanceState, interface{}) error
-	switch version {
-	case 3:
-		log.Printf("[DEBUG] Migrating acme_certificate state: old v%d state: %#v", version, os)
-		migrateFunc = migrateACMECertificateStateV4
-	case 2:
-		log.Printf("[DEBUG] Migrating acme_certificate state: old v%d state: %#v", version, os)
-		migrateFunc = migrateACMECertificateStateV3
-	case 1:
-		log.Printf("[DEBUG] Migrating acme_certificate state: old v%d state: %#v", version, os)
-		migrateFunc = migrateACMECertificateStateV2
-	case 0:
-		log.Printf("[DEBUG] Migrating acme_certificate state: old v%d state: %#v", version, os)
-		migrateFunc = migrateACMECertificateStateV1
-	default:
-		// Migration is complete
-		log.Printf("[DEBUG] Migrating acme_certificate state: completed v%d state: %#v", version, os)
-		return os, nil
-	}
-	if err := migrateFunc(os, meta); err != nil {
-		return nil, err
-	}
-	version++
-	log.Printf("[DEBUG] Migrating acme_certificate state: new v%d state: %#v", version, os)
-	return resourceACMECertificateMigrateState(version, os, meta)
-}
-
-// migrateACMECertificateStateV4 handles migration of
-// acme_certificate from schema version 3 to version 4.
-func migrateACMECertificateStateV4(is *terraform.InstanceState, meta interface{}) error {
-	// There has ever only been one "dns_challenge" key allowed in
-	// state, so we should be safe to just iterate over every key and
-	// look for the set hash, and re-write that back to zero.
-	for k, v := range is.Attributes {
-		path := strings.Split(k, ".")
-		if len(path) < 3 {
-			// Top- or second-level key; not what we are looking for.
-			continue
-		}
-
-		if path[0] != "dns_challenge" {
-			continue
-		}
-
-		if path[2] != "recursive_nameservers" {
-			continue
-		}
-
-		// Re-write recursive_nameservers to the root scope.
-		delete(is.Attributes, k)
-		is.Attributes[strings.Join(path[2:], ".")] = v
-	}
-
-	return nil
-}
-
-// migrateACMECertificateStateV1 handles migration of
-// acme_certificate from schema version 2 to version 3.
-func migrateACMECertificateStateV3(is *terraform.InstanceState, meta interface{}) error {
-	// There has ever only been one "dns_challenge" key allowed in
-	// state, so we should be safe to just iterate over every key and
-	// look for the set hash, and re-write that back to zero.
-	for k, v := range is.Attributes {
-		path := strings.Split(k, ".")
-		if len(path) < 2 {
-			// Top-level key, not what we are looking for.
-			continue
-		}
-
-		if path[0] != "dns_challenge" {
-			continue
-		}
-
-		if path[1] == "#" {
-			// skip the count key
-			continue
-		}
-
-		// Every other possible attribute is going to be the hash. We can
-		// safely re-write to zero here.
-		path[1] = "0"
-		delete(is.Attributes, k)
-		is.Attributes[strings.Join(path, ".")] = v
-	}
-
-	return nil
-}
-
-// migrateACMECertificateStateV1 handles migration of acme_certificate from
-// schema version 1 to version 2.
-func migrateACMECertificateStateV2(is *terraform.InstanceState, meta interface{}) error {
-	delete(is.Attributes, "account_ref")
-
-	return nil
-}
-
-// migrateACMECertificateStateV1 handles migration of acme_certificate from
-// schema version 0 to version 1.
-func migrateACMECertificateStateV1(is *terraform.InstanceState, meta interface{}) error {
-	delete(is.Attributes, "server_url")
-	delete(is.Attributes, "http_challenge_port")
-	delete(is.Attributes, "tls_challenge_port")
-	delete(is.Attributes, "registration_url")
-
-	return nil
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_migrations_011_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_011_test.go
--- ./vancluever/v2.21.0/acme/acme_migrations_011_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_011_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,256 +0,0 @@
-package acme
-
-import (
-	"reflect"
-	"testing"
-
-	"github.com/davecgh/go-spew/spew"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
-)
-
-func testACMERegistrationStateDataV0() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "regurl",
-		Attributes: map[string]string{
-			"server_url":                 "https://acme-staging.api.letsencrypt.org/directory",
-			"account_key_pem":            "key",
-			"email_address":              "nobody@example.com",
-			"registration_body":          "regbody",
-			"registration_url":           "https://acme-staging.api.letsencrypt.org/acme/reg/123456789",
-			"registration_new_authz_url": "https://acme-staging.api.letsencrypt.org/acme/new-authz",
-			"registration_tos_url":       "https://letsencrypt.org/documents/LE-SA-v1.0.1-July-27-2015.pdf",
-		},
-	}
-}
-
-func testACMERegistrationStateDataV1() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "regurl",
-		Attributes: map[string]string{
-			"account_key_pem":  "key",
-			"email_address":    "nobody@example.com",
-			"registration_url": "https://acme-staging.api.letsencrypt.org/acme/reg/123456789",
-		},
-	}
-}
-
-func testACMECertificateStateDataV0() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "certurl",
-		Attributes: map[string]string{
-			"server_url":                  "https://acme-staging.api.letsencrypt.org/directory",
-			"account_key_pem":             "key",
-			"common_name":                 "foobar",
-			"subject_alternative_names.#": "2",
-			"subject_alternative_names.0": "barbar",
-			"subject_alternative_names.1": "bazbar",
-			"key_type":                    "2048",
-			"certificate_request_pem":     "req",
-			"min_days_remaining":          "30",
-			"dns_challenge.#":             "1",
-			"dns_challenge.1234.provider": "route53",
-			// Workaround for E2E migration test. recursive_nameservers is
-			// not a part of schema at this version.
-			"dns_challenge.1234.recursive_nameservers.#": "1",
-			"dns_challenge.1234.recursive_nameservers.0": "my.name.server",
-			"http_challenge_port":                        "80",
-			"tls_challenge_port":                         "443",
-			"registration_url":                           "regurl",
-			"must_staple":                                "0",
-			"certificate_domain":                         "foobar",
-			"certificate_url":                            "certurl",
-			"account_ref":                                "regurl",
-			"private_key_pem":                            "certkey",
-			"certificate_pem":                            "certpem",
-		},
-	}
-}
-
-func testACMECertificateStateDataV1() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "certurl",
-		Attributes: map[string]string{
-			"account_key_pem":             "key",
-			"common_name":                 "foobar",
-			"subject_alternative_names.#": "2",
-			"subject_alternative_names.0": "barbar",
-			"subject_alternative_names.1": "bazbar",
-			"key_type":                    "2048",
-			"certificate_request_pem":     "req",
-			"min_days_remaining":          "30",
-			"dns_challenge.#":             "1",
-			"dns_challenge.1234.provider": "route53",
-			// Workaround for E2E migration test. recursive_nameservers is
-			// not a part of schema at this version.
-			"dns_challenge.1234.recursive_nameservers.#": "1",
-			"dns_challenge.1234.recursive_nameservers.0": "my.name.server",
-			"must_staple":        "0",
-			"certificate_domain": "foobar",
-			"account_ref":        "regurl",
-			"private_key_pem":    "certkey",
-			"certificate_pem":    "certpem",
-			"certificate_url":    "certurl",
-		},
-	}
-}
-
-func testACMECertificateStateDataV2() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "certurl",
-		Attributes: map[string]string{
-			"account_key_pem":             "key",
-			"common_name":                 "foobar",
-			"subject_alternative_names.#": "2",
-			"subject_alternative_names.0": "barbar",
-			"subject_alternative_names.1": "bazbar",
-			"key_type":                    "2048",
-			"certificate_request_pem":     "req",
-			"min_days_remaining":          "30",
-			"dns_challenge.#":             "1",
-			"dns_challenge.1234.provider": "route53",
-			// Workaround for E2E migration test. recursive_nameservers is
-			// not a part of schema at this version.
-			"dns_challenge.1234.recursive_nameservers.#": "1",
-			"dns_challenge.1234.recursive_nameservers.0": "my.name.server",
-			"must_staple":        "0",
-			"certificate_domain": "foobar",
-			"private_key_pem":    "certkey",
-			"certificate_pem":    "certpem",
-			"certificate_url":    "certurl",
-		},
-	}
-}
-
-func testACMECertificateStateDataV3() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "certurl",
-		Attributes: map[string]string{
-			"account_key_pem":                         "key",
-			"common_name":                             "foobar",
-			"subject_alternative_names.#":             "2",
-			"subject_alternative_names.0":             "barbar",
-			"subject_alternative_names.1":             "bazbar",
-			"key_type":                                "2048",
-			"certificate_request_pem":                 "req",
-			"min_days_remaining":                      "30",
-			"dns_challenge.#":                         "1",
-			"dns_challenge.0.provider":                "route53",
-			"dns_challenge.0.recursive_nameservers.#": "1",
-			"dns_challenge.0.recursive_nameservers.0": "my.name.server",
-			"must_staple":                             "0",
-			"certificate_domain":                      "foobar",
-			"private_key_pem":                         "certkey",
-			"certificate_pem":                         "certpem",
-			"certificate_url":                         "certurl",
-		},
-	}
-}
-
-func testACMECertificateStateDataV4() *terraform.InstanceState {
-	return &terraform.InstanceState{
-		ID: "certurl",
-		Attributes: map[string]string{
-			"account_key_pem":             "key",
-			"common_name":                 "foobar",
-			"subject_alternative_names.#": "2",
-			"subject_alternative_names.0": "barbar",
-			"subject_alternative_names.1": "bazbar",
-			"key_type":                    "2048",
-			"certificate_request_pem":     "req",
-			"min_days_remaining":          "30",
-			"dns_challenge.#":             "1",
-			"dns_challenge.0.provider":    "route53",
-			"recursive_nameservers.#":     "1",
-			"recursive_nameservers.0":     "my.name.server",
-			"must_staple":                 "0",
-			"certificate_domain":          "foobar",
-			"private_key_pem":             "certkey",
-			"certificate_pem":             "certpem",
-			"certificate_url":             "certurl",
-		},
-	}
-}
-
-func TestResourceACMERegistrationMigrateState(t *testing.T) {
-	expected := testACMERegistrationStateDataV1()
-	actual, err := resourceACMERegistrationMigrateState(0, testACMERegistrationStateDataV0(), nil)
-	if err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestMigrateACMERegistrationStateV1(t *testing.T) {
-	expected := testACMERegistrationStateDataV1()
-	actual := testACMERegistrationStateDataV0()
-	if err := migrateACMERegistrationStateV1(actual, nil); err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestResourceACMECertificateMigrateState(t *testing.T) {
-	expected := testACMECertificateStateDataV4()
-	actual, err := resourceACMECertificateMigrateState(0, testACMECertificateStateDataV0(), nil)
-	if err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestMigrateACMECertificateStateV4(t *testing.T) {
-	expected := testACMECertificateStateDataV4()
-	actual := testACMECertificateStateDataV3()
-	if err := migrateACMECertificateStateV4(actual, nil); err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestMigrateACMECertificateStateV3(t *testing.T) {
-	expected := testACMECertificateStateDataV3()
-	actual := testACMECertificateStateDataV2()
-	if err := migrateACMECertificateStateV3(actual, nil); err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestMigrateACMECertificateStateV2(t *testing.T) {
-	expected := testACMECertificateStateDataV2()
-	actual := testACMECertificateStateDataV1()
-	if err := migrateACMECertificateStateV2(actual, nil); err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestMigrateACMECertificateStateV1(t *testing.T) {
-	expected := testACMECertificateStateDataV1()
-	actual := testACMECertificateStateDataV0()
-	if err := migrateACMECertificateStateV1(actual, nil); err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_migrations.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations.go
--- ./vancluever/v2.21.0/acme/acme_migrations.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,87 +0,0 @@
-package acme
-
-import (
-	"context"
-	"fmt"
-
-	"github.com/hashicorp/go-uuid"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/mitchellh/copystructure"
-)
-
-// resourceACMECertificateStateUpgraderV4 returns the state upgrader
-// that handles migrations from version 4 to version 5 for
-// acme_certificate.
-func resourceACMECertificateStateUpgraderV4() schema.StateUpgrader {
-	return schema.StateUpgrader{
-		Version: 4,
-		Type:    resourceACMECertificateV4().CoreConfigSchema().ImpliedType(),
-		Upgrade: resourceACMECertificateStateUpgraderV4Func,
-	}
-}
-
-// resourceACMECertificateStateUpgraderV4Func provides Terraform 0.12
-// state upgrade functionality from schema version 4 to schema
-// version 5 for acme_certificate.
-func resourceACMECertificateStateUpgraderV4Func(
-	_ context.Context,
-	rawState map[string]interface{},
-	meta interface{},
-) (map[string]interface{}, error) {
-	resourceUUID, err := uuid.GenerateUUID()
-	if err != nil {
-		return nil, fmt.Errorf("error generating new UUID for resource: %s", err)
-	}
-
-	z, err := copystructure.Copy(rawState)
-	if err != nil {
-		return nil, err
-	}
-	result := z.(map[string]interface{})
-	result["id"] = resourceUUID
-	return result, nil
-}
-
-// resourceACMECertificateStateUpgraderV3 returns the state upgrader
-// that handles migrations from version 3 to version 4 for
-// acme_certificate.
-func resourceACMECertificateStateUpgraderV3() schema.StateUpgrader {
-	return schema.StateUpgrader{
-		Version: 3,
-		Type:    resourceACMECertificateV3().CoreConfigSchema().ImpliedType(),
-		Upgrade: resourceACMECertificateStateUpgraderV3Func,
-	}
-}
-
-// resourceACMECertificateStateUpgraderV3Func provides Terraform 0.12
-// state upgrade functionality from schema version 3 to schema
-// version 4 for acme_certificate.
-func resourceACMECertificateStateUpgraderV3Func(
-	_ context.Context,
-	rawState map[string]interface{},
-	meta interface{},
-) (map[string]interface{}, error) {
-	z, err := copystructure.Copy(rawState)
-	if err != nil {
-		return nil, err
-	}
-	result := z.(map[string]interface{})
-
-	a, ok := rawState["dns_challenge"]
-	if ok {
-		b, ok := a.([]interface{})
-		if ok && len(b) > 0 {
-			c, ok := b[0].(map[string]interface{})
-			if ok {
-				d, ok := c["recursive_nameservers"]
-				if ok {
-					// Should be safe here to access this key directly.
-					delete(result["dns_challenge"].([]interface{})[0].(map[string]interface{}), "recursive_nameservers")
-					result["recursive_nameservers"] = d
-				}
-			}
-		}
-	}
-
-	return result, nil
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_migrations_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_test.go
--- ./vancluever/v2.21.0/acme/acme_migrations_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_migrations_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,109 +0,0 @@
-package acme
-
-import (
-	"context"
-	"reflect"
-	"testing"
-
-	"github.com/davecgh/go-spew/spew"
-	"github.com/google/go-cmp/cmp"
-	"github.com/google/go-cmp/cmp/cmpopts"
-)
-
-func testACMECertificateStateData012V3() map[string]interface{} {
-	return map[string]interface{}{
-		"account_key_pem":           "key",
-		"common_name":               "foobar",
-		"subject_alternative_names": []interface{}{"barbar", "bazbar"},
-		"key_type":                  "2048",
-		"certificate_request_pem":   "req",
-		"min_days_remaining":        "30",
-		"dns_challenge": []interface{}{
-			map[string]interface{}{
-				"provider":              "route53",
-				"recursive_nameservers": []interface{}{"my.name.server"},
-			},
-		},
-		"must_staple":        "0",
-		"certificate_domain": "foobar",
-		"private_key_pem":    "certkey",
-		"certificate_pem":    "certpem",
-		"certificate_url":    "certurl",
-	}
-}
-
-func testACMECertificateStateData012V4() map[string]interface{} {
-	return map[string]interface{}{
-		"account_key_pem":           "key",
-		"common_name":               "foobar",
-		"subject_alternative_names": []interface{}{"barbar", "bazbar"},
-		"key_type":                  "2048",
-		"certificate_request_pem":   "req",
-		"min_days_remaining":        "30",
-		"dns_challenge": []interface{}{
-			map[string]interface{}{
-				"provider": "route53",
-			},
-		},
-		"recursive_nameservers": []interface{}{"my.name.server"},
-		"must_staple":           "0",
-		"certificate_domain":    "foobar",
-		"private_key_pem":       "certkey",
-		"certificate_pem":       "certpem",
-		"certificate_url":       "certurl",
-	}
-}
-
-func testACMECertificateStateData012V5() map[string]interface{} {
-	return map[string]interface{}{
-		"account_key_pem":           "key",
-		"common_name":               "foobar",
-		"subject_alternative_names": []interface{}{"barbar", "bazbar"},
-		"key_type":                  "2048",
-		"certificate_request_pem":   "req",
-		"min_days_remaining":        "30",
-		"dns_challenge": []interface{}{
-			map[string]interface{}{
-				"provider": "route53",
-			},
-		},
-		"recursive_nameservers": []interface{}{"my.name.server"},
-		"must_staple":           "0",
-		"certificate_domain":    "foobar",
-		"private_key_pem":       "certkey",
-		"certificate_pem":       "certpem",
-		"certificate_url":       "certurl",
-	}
-}
-
-func TestResourceACMECertificateStateUpgraderV3Func(t *testing.T) {
-	expected := testACMECertificateStateData012V4()
-	actual, err := resourceACMECertificateStateUpgraderV3Func(context.TODO(), testACMECertificateStateData012V3(), nil)
-	if err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	if !reflect.DeepEqual(expected, actual) {
-		t.Fatalf("\n\nexpected:\n\n%s\n\ngot:\n\n%s\n\n", spew.Sdump(expected), spew.Sdump(actual))
-	}
-}
-
-func TestResourceACMECertificateStateUpgraderV4Func(t *testing.T) {
-	expected := testACMECertificateStateData012V5()
-	actual, err := resourceACMECertificateStateUpgraderV4Func(context.TODO(), testACMECertificateStateData012V4(), nil)
-	if err != nil {
-		t.Fatalf("error migrating state: %s", err)
-	}
-
-	ignore := cmpopts.IgnoreMapEntries(func(k string, _ interface{}) bool {
-		return k == "id"
-	})
-
-	if diff := cmp.Diff(expected, actual, ignore); diff != "" {
-		t.Errorf("state migration v4 -> v5 mismatch (-want +got):\n%s", diff)
-	}
-
-	if id := actual["id"].(string); !uuidRegexp.MatchString(id) {
-		t.Errorf("expected UUID as ID, got %q", id)
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_structure.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_structure.go
--- ./vancluever/v2.21.0/acme/acme_structure.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_structure.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,422 +0,0 @@
-package acme
-
-//go:generate go run ../build-support/generate-dns-providers go dns_provider_factory.go
-
-import (
-	"crypto"
-	"crypto/rand"
-	"crypto/x509"
-	"encoding/base64"
-	"encoding/pem"
-	"errors"
-	"fmt"
-	"time"
-
-	"github.com/cenkalti/backoff/v4"
-	"github.com/go-acme/lego/v4/certcrypto"
-	"github.com/go-acme/lego/v4/certificate"
-	"github.com/go-acme/lego/v4/lego"
-	"github.com/go-acme/lego/v4/registration"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"software.sslmate.com/src/go-pkcs12"
-)
-
-const (
-	DefaultMaxElapsedTime = 120 * time.Minute
-)
-
-// acmeUser implements acme.User.
-type acmeUser struct {
-
-	// The email address for the account.
-	Email string
-
-	// The registration resource object.
-	Registration *registration.Resource
-
-	// The private key for the account.
-	key crypto.PrivateKey
-}
-
-func (u acmeUser) GetEmail() string {
-	return u.Email
-}
-func (u acmeUser) GetRegistration() *registration.Resource {
-	return u.Registration
-}
-func (u acmeUser) GetPrivateKey() crypto.PrivateKey {
-	return u.key
-}
-
-// expandACMEUser creates a new instance of an ACME user from set
-// email_address and private_key_pem fields, and a registration
-// if one exists.
-func expandACMEUser(d *schema.ResourceData) (*acmeUser, error) {
-	key, err := privateKeyFromPEM([]byte(d.Get("account_key_pem").(string)))
-	if err != nil {
-		return nil, err
-	}
-
-	user := &acmeUser{
-		key: key,
-	}
-
-	// only set these email if it's in the schema.
-	if v, ok := d.GetOk("email_address"); ok {
-		user.Email = v.(string)
-	}
-
-	return user, nil
-}
-
-// saveACMERegistration takes an *registration.Resource and sets the appropriate fields
-// for a registration resource.
-func saveACMERegistration(d *schema.ResourceData, reg *registration.Resource) error {
-	d.Set("registration_url", reg.URI)
-
-	return nil
-}
-
-// expandACMEClient creates a connection to an ACME server from resource data,
-// and also returns the user.
-//
-// If loadReg is supplied, the registration information is loaded in to the
-// user's registration, if it exists - if the account cannot be resolved by the
-// private key, then the appropriate error is returned.
-func expandACMEClient(d *schema.ResourceData, meta interface{}, loadReg bool) (*lego.Client, *acmeUser, error) {
-	user, err := expandACMEUser(d)
-	if err != nil {
-		return nil, nil, fmt.Errorf("error getting user data: %s", err.Error())
-	}
-
-	var client *lego.Client
-
-	newClient := func() error {
-		client, err = lego.NewClient(expandACMEClient_config(d, meta, user))
-		if err != nil {
-			return err
-		}
-
-		// Populate user's registration resource if needed
-		if loadReg {
-			user.Registration, err = client.Registration.ResolveAccountByKey()
-			if err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-		}
-		return nil
-	}
-	reconnectBackoff := backoff.NewExponentialBackOff()
-	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-	err = backoff.Retry(newClient, reconnectBackoff)
-	if err != nil {
-		return nil, nil, err
-	}
-
-	return client, user, nil
-}
-
-func expandACMEClient_config(d *schema.ResourceData, meta interface{}, user registration.User) *lego.Config {
-	config := lego.NewConfig(user)
-	config.CADirURL = meta.(*Config).ServerURL
-
-	// Note this function is used by both the registration and certificate
-	// resources, but key type is not necessary during registration, so
-	// it's okay if it's empty for that.
-	if v, ok := d.GetOk("key_type"); ok {
-		config.Certificate.KeyType = certcrypto.KeyType(v.(string))
-	}
-
-	// Same with timeout for certificates - defaults should be set by the
-	// certificate resource and missing for registrations
-	if v, ok := d.GetOk("cert_timeout"); ok {
-		config.Certificate.Timeout = time.Second * time.Duration(v.(int))
-	}
-
-	return config
-}
-
-// certificateResourceExpander is a simple interface to allow us to use the Get
-// function that is in ResourceData and ResourceDiff under the same function.
-type certificateResourceExpander interface {
-	Get(string) interface{}
-	GetOk(string) (interface{}, bool)
-	GetChange(string) (interface{}, interface{})
-}
-
-// expandCertificateResource takes saved state in the certificate resource
-// and returns an certificate.Resource.
-func expandCertificateResource(d certificateResourceExpander) *certificate.Resource {
-	cert := &certificate.Resource{
-		Domain:  d.Get("certificate_domain").(string),
-		CertURL: d.Get("certificate_url").(string),
-	}
-
-	// Only populate the PrivateKey or CSR fields if we have them
-	if pk, ok := d.GetOk("private_key_pem"); ok {
-		cert.PrivateKey = []byte(pk.(string))
-	}
-	if csr, ok := d.GetOk("certificate_request_pem"); ok {
-		cert.CSR = []byte(csr.(string))
-	}
-
-	// There are situations now where the new certificate may be blank, which
-	// signifies that the certificate needs to be renewed. In this case, we need
-	// the old value here, versus the new one.
-	oldCertPEM, newCertPEM := d.GetChange("certificate_pem")
-	issuerPEM := d.Get("issuer_pem")
-	if newCertPEM.(string) != "" {
-		cert.Certificate = []byte(newCertPEM.(string) + issuerPEM.(string))
-	} else {
-		cert.Certificate = []byte(oldCertPEM.(string) + issuerPEM.(string))
-	}
-	return cert
-}
-
-// saveCertificateResource takes an certificate.Resource and sets fields.
-func saveCertificateResource(d *schema.ResourceData, cert *certificate.Resource, password string) error {
-	d.Set("certificate_url", cert.CertURL)
-	d.Set("certificate_domain", cert.Domain)
-	d.Set("private_key_pem", string(cert.PrivateKey))
-	issued, issuedNotAfter, issuer, err := splitPEMBundle(cert.Certificate)
-	if err != nil {
-		return err
-	}
-
-	d.Set("certificate_pem", string(issued))
-	d.Set("issuer_pem", string(issuer))
-	d.Set("certificate_not_after", issuedNotAfter)
-
-	// Set PKCS12 data. This is only set if there is a private key
-	// present.
-	if len(cert.PrivateKey) > 0 {
-		pfxB64, err := bundleToPKCS12(cert.Certificate, cert.PrivateKey, password)
-		if err != nil {
-			return err
-		}
-
-		d.Set("certificate_p12", string(pfxB64))
-	} else {
-		d.Set("certificate_p12", "")
-	}
-
-	return nil
-}
-
-// certSecondsRemaining takes an certificate.Resource, parses the
-// certificate, and computes the seconds that it has remaining.
-func certSecondsRemaining(cert *certificate.Resource) (int64, error) {
-	x509Certs, err := parsePEMBundle(cert.Certificate)
-	if err != nil {
-		return 0, err
-	}
-	c := x509Certs[0]
-
-	if c.IsCA {
-		return 0, fmt.Errorf("first certificate is a CA certificate")
-	}
-
-	expiry := c.NotAfter.Unix()
-	now := time.Now().Unix()
-
-	return (expiry - now), nil
-}
-
-// certDaysRemaining takes an certificate.Resource, parses the
-// certificate, and computes the days that it has remaining.
-func certDaysRemaining(cert *certificate.Resource) (int64, error) {
-	remaining, err := certSecondsRemaining(cert)
-	if err != nil {
-		return 0, fmt.Errorf("unable to calculate time to certificate expiry: %s", err)
-	}
-
-	return remaining / 86400, nil
-}
-
-// splitPEMBundle gets a slice of x509 certificates from
-// parsePEMBundle.
-//
-// The first certificate split is returned as the issued certificate,
-// with the rest returned as the issuer (intermediate) chain.
-//
-// Technically, it will be possible for issuer to be empty, if there
-// are zero certificates in the intermediate chain. This is highly
-// unlikely, however.
-func splitPEMBundle(bundle []byte) (cert []byte, certNotAfter string, issuer []byte, err error) {
-	cb, err := parsePEMBundle(bundle)
-	if err != nil {
-		return
-	}
-
-	// lego always returns the issued cert first, if the CA is first there is a problem
-	if cb[0].IsCA {
-		err = fmt.Errorf("first certificate is a CA certificate")
-		return
-	}
-
-	cert = pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: cb[0].Raw})
-	certNotAfter = cb[0].NotAfter.Format(time.RFC3339)
-	issuer = make([]byte, 0)
-	for i, ic := range cb[1:] {
-		issuer = append(issuer, pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: ic.Raw})...)
-		if i < len(cb)-2 {
-			issuer = append(issuer, '\n')
-		}
-	}
-
-	return
-}
-
-// bundleToPKCS12 packs an issued certificate (and any supplied
-// intermediates) into a PFX file.  The private key is included in
-// the archive if it is a non-zero value.
-//
-// The returned archive is base64-encoded.
-func bundleToPKCS12(bundle, key []byte, password string) ([]byte, error) {
-	cb, err := parsePEMBundle(bundle)
-	if err != nil {
-		return nil, err
-	}
-
-	// lego always returns the issued cert first, if the CA is first there is a problem
-	if cb[0].IsCA {
-		return nil, fmt.Errorf("first certificate is a CA certificate")
-	}
-
-	pk, err := privateKeyFromPEM(key)
-	if err != nil {
-		return nil, err
-	}
-
-	pfxData, err := pkcs12.Encode(rand.Reader, pk, cb[0], cb[1:], password)
-	if err != nil {
-		return nil, err
-	}
-
-	buf := make([]byte, base64.StdEncoding.EncodedLen(len(pfxData)))
-	base64.StdEncoding.Encode(buf, pfxData)
-	return buf, nil
-}
-
-// parsePEMBundle parses a certificate bundle from top to bottom and returns
-// a slice of x509 certificates. This function will error if no certificates are found.
-//
-// TODO: This was taken from lego directly, consider exporting it there, or
-// consolidating with other TF crypto functions.
-func parsePEMBundle(bundle []byte) ([]*x509.Certificate, error) {
-	var certificates []*x509.Certificate
-	var certDERBlock *pem.Block
-
-	for {
-		certDERBlock, bundle = pem.Decode(bundle)
-		if certDERBlock == nil {
-			break
-		}
-
-		if certDERBlock.Type == "CERTIFICATE" {
-			cert, err := x509.ParseCertificate(certDERBlock.Bytes)
-			if err != nil {
-				return nil, err
-			}
-			certificates = append(certificates, cert)
-		}
-	}
-
-	if len(certificates) == 0 {
-		return nil, errors.New("no certificates were found while parsing the bundle")
-	}
-
-	return certificates, nil
-}
-
-// stringSlice converts an interface slice to a string slice.
-func stringSlice(src []interface{}) []string {
-	var dst []string
-	for _, v := range src {
-		dst = append(dst, v.(string))
-	}
-	return dst
-}
-
-// privateKeyFromPEM converts a PEM block into a crypto.PrivateKey.
-func privateKeyFromPEM(pemData []byte) (crypto.PrivateKey, error) {
-	var result *pem.Block
-	rest := pemData
-	for {
-		result, rest = pem.Decode(rest)
-		if result == nil {
-			return nil, fmt.Errorf("cannot decode supplied PEM data")
-		}
-		switch result.Type {
-		case "RSA PRIVATE KEY":
-			return x509.ParsePKCS1PrivateKey(result.Bytes)
-		case "EC PRIVATE KEY":
-			return x509.ParseECPrivateKey(result.Bytes)
-		}
-	}
-}
-
-// csrFromPEM converts a PEM block into an *x509.CertificateRequest.
-func csrFromPEM(pemData []byte) (*x509.CertificateRequest, error) {
-	var result *pem.Block
-	rest := pemData
-	for {
-		result, rest = pem.Decode(rest)
-		if result == nil {
-			return nil, fmt.Errorf("cannot decode supplied PEM data")
-		}
-		if result.Type == "CERTIFICATE REQUEST" {
-			return x509.ParseCertificateRequest(result.Bytes)
-		}
-	}
-}
-
-// validateKeyType validates a key_type resource parameter is correct.
-func validateKeyType(v interface{}, k string) (ws []string, errors []error) {
-	value := v.(string)
-	found := false
-	for _, w := range []string{"P256", "P384", "2048", "4096", "8192"} {
-		if value == w {
-			found = true
-		}
-	}
-	if !found {
-		errors = append(errors, fmt.Errorf(
-			"certificate key type must be one of P256, P384, 2048, 4096, or 8192"))
-	}
-	return
-}
-
-// validateDNSChallengeConfig ensures that the values supplied to the
-// dns_challenge resource parameter in the acme_certificate resource
-// are string values only.
-func validateDNSChallengeConfig(v interface{}, k string) (ws []string, errors []error) {
-	value := v.(map[string]interface{})
-	bad := false
-	for _, w := range value {
-		switch w.(type) {
-		case string:
-			continue
-		default:
-			bad = true
-		}
-	}
-	if bad {
-		errors = append(errors, fmt.Errorf(
-			"DNS challenge config map values must be strings only"))
-	}
-	return
-}
-
-func validateRevocationReason(v interface{}, k string) (ws []string, errors []error) {
-	value := RevocationReason(v.(string))
-	_, err := GetRevocationReason(value)
-	if err != nil {
-		errors = append(errors, err)
-	}
-	return
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/acme_structure_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_structure_test.go
--- ./vancluever/v2.21.0/acme/acme_structure_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/acme_structure_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,345 +0,0 @@
-package acme
-
-import (
-	"math"
-	"reflect"
-	"strings"
-	"testing"
-	"time"
-
-	"github.com/go-acme/lego/v4/certificate"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-)
-
-const testPrivateKeyText = `
------BEGIN RSA PRIVATE KEY-----
-MIIEpAIBAAKCAQEA8XXIc0dO5okTzukP2USWm5tbxY6FQzzvBbOpxIfVpdKpZcKV
-HfemqCZEIGu/3P3gI6rAYmDRYvLsbKSjKA5EzuUvVxrLzqPZyFI5mzF0gGEzEvYk
-Z+mCPLsS5VwaXCySiz6vIBpItw6KOHByt5v8iMtgppGmjWX5N2oeVZ5314xmXFV3
-OMlniyC1uLk6Y/bVtv/vK1mOATXP5vejpjBHdk/VYTTXRZp3zSZllKJbtbt2CxY4
-eA55oCc9cfF46rNPsAsiH5iGbBFIIDSqscukZ9BtBZUj+kO+63he0SedzppuosKi
-i9YtjgG1Mb81vgMFZ/SQeiR5FONWcH61jTSkiQIDAQABAoIBAQDJVYK8zLq3c5k2
-sBLtAUnrmhFdm0b3F7neMT7fhrvYtt1U4njgMf2eu7mWpwGmTXI1i007OqudLB2D
-QYxh+/PX6DYfFVLXjLwtUpKCGyyfV2z05JTaqFRWO064PKImNWxD+xKfXAtByDfs
-c6bT/pcFoT+H5G7R/DNfx3ZfwfD/oo2aUCQT8PrwzQ9cjJuLYzu5Dwma29Cxtajd
-Gsdrd09Qkm0PCM3c0FHG7fV3zq5SNw53tP0U0lNzSzpRiS6wmLAPDy3CcKGaj+9K
-5YIE3OoQKRFn7hQkHxgnZlBJJU2BOBAOMJA6s28iRNy3pQOzR0M2kqf+YTQk/i13
-if2/mvU5AoGBAPtT9XVbOu6U4Q9WyBSi5nI4AG7gHeJtPC2UWUeaCdj5FJlrEkeD
-QZTzqT9KUNu5PfwgsCzCeAzZavQKXDXq7yAtIBIC8bK2sIGhM+bz7Nbu9fPrtmV0
-uk5Enlpi2Y/pUFrRTn27FghZAEgWWUF2Drq0kThEZka3jXveBZ7KaHnfAoGBAPXy
-3TVsw0Y34ZljmbsHAyT90ZG7FnA3PDXXHOZxEIDo89m8OTGeBW4eqhLvKa3t+thM
-oUGyWTtrjKLELuGa8fiDpKq1b8NJqQYB4V0NJlfOYZ6G8Q+hrT+jXTC4+Lb7kmJq
-tyIODlyg4B0GQLbFBZXc4FkwWZXxDT+JwKynh36XAoGBAOWsGhm+3yH755fO5FUH
-cLRcPPkV0fmDfYThlpz6RZmENbDlyfSUHDB0Yuw1i6Lfq6dmb9jXdkG3xidx+EZF
-hXTQCAitrBZ3IOG1YOrjakIYaacYdrxMaZzw1A0hXFRJEGeN8r6vYzkJrFo0IijS
-LC+upy7WQujJAIB7qoMr0UHdAoGAEHTEikuRsUQR6zJ32cS5WCNHf2m2MaHwfGW9
-QEn2Ybm0fzAR35kEIf8ZQBUSg9m1e/18mKm3QLuMeGOKA3xbjlY4kVd8d+OY1JcR
-nilAFIXxkCrVPEeEEQr8NENcGNoyTDV5tWSdX2NAO5DsiY4bNpDFzhHnHJo5WbP8
-2VCIR1cCgYAtcMtavC0nIPxmMEkpd9k+0qWcYclt73wr71sQ+kGOU1/M4g8SZh2z
-QmXDkRpJf+/xpaeknf6bj6x2r7FXfVoG5vNdB+Cdn3uepkRHPLSStTIwpPVTsQVy
-aTVLTgFnTNMM8whCrfR4eBwHVJIejHiA3cl5Ocq/J6u4kgtFkfwKaQ==
------END RSA PRIVATE KEY-----
-`
-
-// testBadCertBundleText is just simply the LE test intermediate cert
-const testBadCertBundleText = `
------BEGIN CERTIFICATE-----
-MIIEqzCCApOgAwIBAgIRAIvhKg5ZRO08VGQx8JdhT+UwDQYJKoZIhvcNAQELBQAw
-GjEYMBYGA1UEAwwPRmFrZSBMRSBSb290IFgxMB4XDTE2MDUyMzIyMDc1OVoXDTM2
-MDUyMzIyMDc1OVowIjEgMB4GA1UEAwwXRmFrZSBMRSBJbnRlcm1lZGlhdGUgWDEw
-ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtWKySDn7rWZc5ggjz3ZB0
-8jO4xti3uzINfD5sQ7Lj7hzetUT+wQob+iXSZkhnvx+IvdbXF5/yt8aWPpUKnPym
-oLxsYiI5gQBLxNDzIec0OIaflWqAr29m7J8+NNtApEN8nZFnf3bhehZW7AxmS1m0
-ZnSsdHw0Fw+bgixPg2MQ9k9oefFeqa+7Kqdlz5bbrUYV2volxhDFtnI4Mh8BiWCN
-xDH1Hizq+GKCcHsinDZWurCqder/afJBnQs+SBSL6MVApHt+d35zjBD92fO2Je56
-dhMfzCgOKXeJ340WhW3TjD1zqLZXeaCyUNRnfOmWZV8nEhtHOFbUCU7r/KkjMZO9
-AgMBAAGjgeMwgeAwDgYDVR0PAQH/BAQDAgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAw
-HQYDVR0OBBYEFMDMA0a5WCDMXHJw8+EuyyCm9Wg6MHoGCCsGAQUFBwEBBG4wbDA0
-BggrBgEFBQcwAYYoaHR0cDovL29jc3Auc3RnLXJvb3QteDEubGV0c2VuY3J5cHQu
-b3JnLzA0BggrBgEFBQcwAoYoaHR0cDovL2NlcnQuc3RnLXJvb3QteDEubGV0c2Vu
-Y3J5cHQub3JnLzAfBgNVHSMEGDAWgBTBJnSkikSg5vogKNhcI5pFiBh54DANBgkq
-hkiG9w0BAQsFAAOCAgEABYSu4Il+fI0MYU42OTmEj+1HqQ5DvyAeyCA6sGuZdwjF
-UGeVOv3NnLyfofuUOjEbY5irFCDtnv+0ckukUZN9lz4Q2YjWGUpW4TTu3ieTsaC9
-AFvCSgNHJyWSVtWvB5XDxsqawl1KzHzzwr132bF2rtGtazSqVqK9E07sGHMCf+zp
-DQVDVVGtqZPHwX3KqUtefE621b8RI6VCl4oD30Olf8pjuzG4JKBFRFclzLRjo/h7
-IkkfjZ8wDa7faOjVXx6n+eUQ29cIMCzr8/rNWHS9pYGGQKJiY2xmVC9h12H99Xyf
-zWE9vb5zKP3MVG6neX1hSdo7PEAb9fqRhHkqVsqUvJlIRmvXvVKTwNCP3eCjRCCI
-PTAvjV+4ni786iXwwFYNz8l3PmPLCyQXWGohnJ8iBm+5nk7O2ynaPVW0U2W+pt2w
-SVuvdDM5zGv2f9ltNWUiYZHJ1mmO97jSY/6YfdOUH66iRtQtDkHBRdkNBsMbD+Em
-2TgBldtHNSJBfB3pm9FblgOcJ0FSWcUDWJ7vO0+NTXlgrRofRT6pVywzxVo6dND0
-WzYlTWeUVsO40xJqhgUQRER9YLOLxJ0O6C8i0xFxAMKOtSdodMB3RIwt7RFQ0uyt
-n5Z5MqkYhlMI3J1tPRTp1nEt9fyGspBOO05gi148Qasp+3N+svqKomoQglNoAxU=
------END CERTIFICATE-----
-`
-
-const testPaddingBundle = `
------BEGIN CERTIFICATE-----
-MIIDSjCCAjICCQDjsMLnU/0KpzANBgkqhkiG9w0BAQsFADBnMQswCQYDVQQGEwJV
-SzEQMA4GA1UECAwHRW5nbGFuZDEPMA0GA1UEBwwGTG9uZG9uMSEwHwYDVQQKDBhJ
-bnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0x
-OTAzMDQyMjE2MzFaFw0yNDAzMDIyMjE2MzFaMGcxCzAJBgNVBAYTAlVLMRAwDgYD
-VQQIDAdFbmdsYW5kMQ8wDQYDVQQHDAZMb25kb24xITAfBgNVBAoMGEludGVybmV0
-IFdpZGdpdHMgUHR5IEx0ZDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG
-9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0A0z2uLCRrw8DXKgG1UMBRlmRt3TXEoDSPSJ
-y5Awp3fJG8b5+MvU2QufUrtk3XAwG5q7dBFpV+bAQGds/1cmMNjRRXHby0mmk7v6
-b57rhAuaD4VLXa7/pJDEIGDaQ7NmFe4vgO8mup5HDw7C9VZI25ou70ajZZvpBzyd
-rd6pgfCq4fcCZRS56rdzcO4n48HhXHjSOaSyqHHGkLJpVc7qqc3OmJQoeUgn+1xc
-MkSBEiZA3XvISHegc/5s5wB/aMDfegJEe2ZA7Ae9gAmCczPFGRtZUVU9J9UC1jVS
-jIWsIyOsdHc18TxafEBjcBctpuNnvhOshbOYsd1HLbmZB/4GuwIDAQABMA0GCSqG
-SIb3DQEBCwUAA4IBAQB82OHtGfw2tDsDsqj2IvkHqGw8bvxwXZ5KVRdGVg90AD+f
-rFKS5qF3JxspcUjDHwFAyZo/mTXMOzRFQAytcuID4qijVRLRaM8dnFWvzwhFo0Kq
-UEdVfmq2ANmhqWI5j87BoPu2GGcZ+xlzW7axl2tFOj4g1xOW1Vd/CVuPBfMHZ5JD
-WyQVnPXi3plkGnIW/P5R1NHYqXIb0HW8xjzqRmbbQOW5eJ+Hy1Id4O0pnOVlNjDl
-Rb4po3kWJaGezLmNO+JyUOr5HnCjLSD/4WNHGAJbfOVES4hOz+oiTlWd7HflS+00
-iITbUq4IV5mAI5yceK+3rYWGYG47cu0BG9ngevUZ
------END CERTIFICATE-----
-
------BEGIN CERTIFICATE-----
-MIIDSjCCAjICCQDjsMLnU/0KpzANBgkqhkiG9w0BAQsFADBnMQswCQYDVQQGEwJV
-SzEQMA4GA1UECAwHRW5nbGFuZDEPMA0GA1UEBwwGTG9uZG9uMSEwHwYDVQQKDBhJ
-bnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0x
-OTAzMDQyMjE2MzFaFw0yNDAzMDIyMjE2MzFaMGcxCzAJBgNVBAYTAlVLMRAwDgYD
-VQQIDAdFbmdsYW5kMQ8wDQYDVQQHDAZMb25kb24xITAfBgNVBAoMGEludGVybmV0
-IFdpZGdpdHMgUHR5IEx0ZDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG
-9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0A0z2uLCRrw8DXKgG1UMBRlmRt3TXEoDSPSJ
-y5Awp3fJG8b5+MvU2QufUrtk3XAwG5q7dBFpV+bAQGds/1cmMNjRRXHby0mmk7v6
-b57rhAuaD4VLXa7/pJDEIGDaQ7NmFe4vgO8mup5HDw7C9VZI25ou70ajZZvpBzyd
-rd6pgfCq4fcCZRS56rdzcO4n48HhXHjSOaSyqHHGkLJpVc7qqc3OmJQoeUgn+1xc
-MkSBEiZA3XvISHegc/5s5wB/aMDfegJEe2ZA7Ae9gAmCczPFGRtZUVU9J9UC1jVS
-jIWsIyOsdHc18TxafEBjcBctpuNnvhOshbOYsd1HLbmZB/4GuwIDAQABMA0GCSqG
-SIb3DQEBCwUAA4IBAQB82OHtGfw2tDsDsqj2IvkHqGw8bvxwXZ5KVRdGVg90AD+f
-rFKS5qF3JxspcUjDHwFAyZo/mTXMOzRFQAytcuID4qijVRLRaM8dnFWvzwhFo0Kq
-UEdVfmq2ANmhqWI5j87BoPu2GGcZ+xlzW7axl2tFOj4g1xOW1Vd/CVuPBfMHZ5JD
-WyQVnPXi3plkGnIW/P5R1NHYqXIb0HW8xjzqRmbbQOW5eJ+Hy1Id4O0pnOVlNjDl
-Rb4po3kWJaGezLmNO+JyUOr5HnCjLSD/4WNHGAJbfOVES4hOz+oiTlWd7HflS+00
-iITbUq4IV5mAI5yceK+3rYWGYG47cu0BG9ngevUZ
------END CERTIFICATE-----`
-
-func registrationResourceData() *schema.ResourceData {
-	r := resourceACMERegistration()
-	d := r.TestResourceData()
-
-	d.SetId("regurl")
-	d.Set("account_key_pem", testPrivateKeyText)
-	d.Set("email_address", "nobody@example.com")
-
-	return d
-}
-
-func blankCertificateResource() *schema.ResourceData {
-	r := resourceACMECertificate()
-	d := r.TestResourceData()
-	d.Set("account_key_pem", testPrivateKeyText)
-	return d
-}
-
-// registrationResourceDataDefaultConfig returns the schema.ResourceData for a
-// registration based off of a default config.
-//
-// Note that the attributes in the result set may vary quite differently from
-// registrationResourceData since it actually does a diff based on the
-// attributes in the schema, versus working with a blank ResourceData.
-func registrationResourceDataDefaultConfig(t *testing.T) *schema.ResourceData {
-	return schema.TestResourceDataRaw(t, resourceACMERegistration().Schema, make(map[string]interface{}))
-}
-
-// certificateResourceDataDefaultConfig returns the schema.ResourceData for a
-// certificate based off of a default config.
-//
-// Note that the attributes in the result set may vary quite differently from
-// blankCertificateResource since it actually does a diff based on the
-// attributes in the schema, versus working with a blank ResourceData.
-func certificateResourceDataDefaultConfig(t *testing.T) *schema.ResourceData {
-	// NOTE: we set cert_timeout to a static value here to try and
-	// bring meaning to the TestExpandACMEClient_config_certTimeout_default test.
-	// Since lego automatically sets the default to 30 seconds, we need to be
-	// able to differentiate between a schema that does not have this value in
-	// the client (registrations) versus one that does (certificates) as we can't
-	// test on the zero value for registrations.
-	return schema.TestResourceDataRaw(t, resourceACMECertificate().Schema, map[string]interface{}{"cert_timeout": 90})
-}
-
-func TestACME_expandACMEUser(t *testing.T) {
-	d := registrationResourceData()
-	u, err := expandACMEUser(d)
-	if err != nil {
-		t.Fatalf("fatal: %s", err.Error())
-	}
-
-	if u.GetEmail() != "nobody@example.com" {
-		t.Fatalf("Expected email to be nobody@example.com, got %s", u.GetEmail())
-	}
-
-	key, err := privateKeyFromPEM([]byte(testPrivateKeyText))
-	if err != nil {
-		t.Fatalf("fatal: %s", err.Error())
-	}
-
-	if reflect.DeepEqual(key, u.GetPrivateKey()) == false {
-		t.Fatalf("Expected private key to be %#v, got %#v", key, u.GetPrivateKey())
-	}
-}
-
-func TestACME_expandACMEUser_badKey(t *testing.T) {
-	d := registrationResourceData()
-	d.Set("account_key_pem", "bad")
-	_, err := expandACMEUser(d)
-	if err == nil {
-		t.Fatalf("expected error due to bad key")
-	}
-}
-
-func TestACME_expandACMEClient_badKey(t *testing.T) {
-	d := registrationResourceData()
-	d.Set("account_key_pem", "bad")
-	_, _, err := expandACMEClient(d, &Config{ServerURL: "https://acme-staging.api-v02.letsencrypt.org/directory"}, true)
-	if err == nil {
-		t.Fatalf("expected error due to bad key")
-	}
-}
-
-func TestACME_certDaysRemaining_noCertData(t *testing.T) {
-	c := &certificate.Resource{}
-	_, err := certDaysRemaining(c)
-	if err == nil {
-		t.Fatalf("expected error due to bad cert data")
-	}
-}
-
-func TestACME_parsePEMBundle_noData(t *testing.T) {
-	b := []byte{}
-	_, err := parsePEMBundle(b)
-	if err == nil {
-		t.Fatalf("expected error due to no PEM data")
-	}
-}
-
-func TestACME_saveCertificateResource_badCert(t *testing.T) {
-	b := testBadCertBundleText
-	c := &certificate.Resource{
-		Certificate: []byte(b),
-	}
-	d := blankCertificateResource()
-	err := saveCertificateResource(d, c, "")
-	if err == nil {
-		t.Fatalf("expected error due to bad cert data")
-	}
-}
-
-func TestACME_certDaysRemaining_CACert(t *testing.T) {
-	b := testBadCertBundleText
-	c := &certificate.Resource{
-		Certificate: []byte(b),
-	}
-	_, err := certDaysRemaining(c)
-	if err == nil {
-		t.Fatalf("expected error due to cert being a CA")
-	}
-}
-
-func TestACME_splitPEMBundle_noData(t *testing.T) {
-	b := []byte{}
-	_, _, _, err := splitPEMBundle(b)
-	if err == nil {
-		t.Fatalf("expected error due to no PEM data")
-	}
-}
-
-func TestACME_splitPEMBundle_CAFirst(t *testing.T) {
-	b := testBadCertBundleText + testBadCertBundleText
-	_, _, _, err := splitPEMBundle([]byte(b))
-	if err == nil {
-		t.Fatalf("expected error due to CA cert being first")
-	}
-}
-
-func TestACME_bundleToPKCS12_base64IsPadded(t *testing.T) {
-	b := testPaddingBundle
-	key := testPrivateKeyText
-	pfxBase64, err := bundleToPKCS12([]byte(b), []byte(key), "")
-
-	if err != nil {
-		t.Fatalf("bad: %#v", err)
-	}
-
-	// testPaddingBundle requires padding to 4 bytes so will end in =
-	if math.Remainder(float64(len(pfxBase64)), 4) != 0 && !strings.HasSuffix(string(pfxBase64), "=") {
-		t.Fatalf("p12 base64 encoded certificate should be padded")
-	}
-}
-
-func TestACME_splitPEMBundle_singleCert(t *testing.T) {
-	b := testBadCertBundleText
-	_, _, _, err := splitPEMBundle([]byte(b))
-	if err == nil {
-		t.Fatalf("expected error due to only one cert being present")
-	}
-}
-
-func TestACME_validateKeyType(t *testing.T) {
-	s := "2048"
-
-	_, errs := validateKeyType(s, "key_type")
-	if len(errs) > 0 {
-		t.Fatalf("bad: %#v", errs)
-	}
-}
-
-func TestACME_validateKeyType_invalid(t *testing.T) {
-	s := "512"
-
-	_, errs := validateKeyType(s, "key_type")
-	if len(errs) < 1 {
-		t.Fatalf("should have given an error")
-	}
-}
-
-func TestACME_validateDNSChallengeConfig(t *testing.T) {
-	m := map[string]interface{}{
-		"AWS_FOO": "bar",
-	}
-
-	_, errs := validateDNSChallengeConfig(m, "config")
-	if len(errs) > 0 {
-		t.Fatalf("bad: %#v", errs)
-	}
-}
-
-func TestACME_validateDNSChallengeConfig_invalid(t *testing.T) {
-	s := map[string]interface{}{
-		"AWS_FOO": 1,
-	}
-
-	_, errs := validateDNSChallengeConfig(s, "config")
-	if len(errs) < 1 {
-		t.Fatalf("should have given an error")
-	}
-}
-
-func TestExpandACMEClient_config_certTimeout_default(t *testing.T) {
-	testCases := []struct {
-		desc     string
-		f        func(t *testing.T) *schema.ResourceData
-		expected time.Duration
-	}{
-		{
-			desc:     "registration",
-			f:        registrationResourceDataDefaultConfig,
-			expected: time.Second * 30,
-		},
-		{
-			desc:     "certificate",
-			f:        certificateResourceDataDefaultConfig,
-			expected: time.Second * 90,
-		},
-	}
-	for _, tc := range testCases {
-		t.Run(tc.desc, func(t *testing.T) {
-
-			c := expandACMEClient_config(tc.f(t), &Config{}, &acmeUser{})
-			if tc.expected != c.Certificate.Timeout {
-				t.Fatalf("expected timeout to be %s, got %s", tc.expected, c.Certificate.Timeout)
-			}
-		})
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/certificate_challenges.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/certificate_challenges.go
--- ./vancluever/v2.21.0/acme/certificate_challenges.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/certificate_challenges.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,317 +0,0 @@
-package acme
-
-import (
-	"fmt"
-	"strconv"
-	"time"
-
-	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
-	"github.com/cenkalti/backoff/v4"
-	"github.com/go-acme/lego/v4/challenge"
-	"github.com/go-acme/lego/v4/challenge/dns01"
-	"github.com/go-acme/lego/v4/challenge/http01"
-	"github.com/go-acme/lego/v4/challenge/tlsalpn01"
-	"github.com/go-acme/lego/v4/lego"
-	"github.com/go-acme/lego/v4/providers/http/memcached"
-	"github.com/go-acme/lego/v4/providers/http/s3"
-	"github.com/go-acme/lego/v4/providers/http/webroot"
-	"github.com/hashicorp/go-multierror"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-)
-
-// setCertificateChallengeProviders sets all of the challenge providers in the
-// client that are needed for obtaining the certificate.
-//
-// The returned func() is a closer for all of the configured DNS providers that
-// should be called when they are no longer needed (i.e. in a defer after one of
-// the CRUD functions are complete).
-func setCertificateChallengeProviders(client *lego.Client, d *schema.ResourceData) (func(), error) {
-	// DNS
-	dnsClosers := make([]func(), 0)
-	dnsCloser := func() {
-		for _, f := range dnsClosers {
-			f()
-		}
-	}
-
-	if providers, ok := d.GetOk("dns_challenge"); ok {
-		dnsProvider, err := NewDNSProviderWrapper()
-		if err != nil {
-			return dnsCloser, err
-		}
-
-		for _, providerRaw := range providers.([]interface{}) {
-			if p, closer, err := expandDNSChallenge(providerRaw.(map[string]interface{}), expandRecursiveNameservers(d)); err == nil {
-				dnsProvider.providers = append(dnsProvider.providers, p)
-				dnsClosers = append(dnsClosers, closer)
-			} else {
-				return dnsCloser, err
-			}
-		}
-
-		setDns01Provider := func() error {
-			if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(setDns01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	// HTTP (server)
-	if provider, ok := d.GetOk("http_challenge"); ok {
-		opts := provider.([]interface{})[0].(map[string]interface{})
-		httpServerProvider := http01.NewProviderServer("", strconv.Itoa(opts["port"].(int)))
-		if proxyHeader, ok := opts["proxy_header"]; ok {
-			httpServerProvider.SetProxyHeader(proxyHeader.(string))
-		}
-
-		setHttp01Provider := func() error {
-			if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err := backoff.Retry(setHttp01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	// HTTP (webroot)
-	if provider, ok := d.GetOk("http_webroot_challenge"); ok {
-		httpWebrootProvider, err := webroot.NewHTTPProvider(
-			provider.([]interface{})[0].(map[string]interface{})["directory"].(string))
-
-		if err != nil {
-			return dnsCloser, err
-		}
-
-		setHttp01Provider := func() error {
-			if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	// HTTP (memcached)
-	if provider, ok := d.GetOk("http_memcached_challenge"); ok {
-		httpMemcachedProvider, err := memcached.NewMemcachedProvider(
-			stringSlice(provider.([]interface{})[0].(map[string]interface{})["hosts"].(*schema.Set).List()))
-
-		if err != nil {
-			return dnsCloser, err
-		}
-
-		setHttp01Provider := func() error {
-			if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	// HTTP (s3)
-	if provider, ok := d.GetOk("http_s3_challenge"); ok {
-		httpS3Provider, err := s3.NewHTTPProvider(
-			provider.([]interface{})[0].(map[string]interface{})["s3_bucket"].(string))
-
-		if err != nil {
-			return dnsCloser, err
-		}
-
-		setHttp01Provider := func() error {
-			if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	// TLS
-	if provider, ok := d.GetOk("tls_challenge"); ok {
-		tlsProvider := tlsalpn01.NewProviderServer(
-			"", strconv.Itoa(provider.([]interface{})[0].(map[string]interface{})["port"].(int)))
-
-		setTlsAlpn01Provider := func() error {
-			if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err := backoff.Retry(setTlsAlpn01Provider, reconnectBackoff)
-		if err != nil {
-			return dnsCloser, err
-		}
-	}
-
-	return dnsCloser, nil
-}
-
-func expandDNSChallenge(m map[string]interface{}, nameServers []string) (challenge.ProviderTimeout, func(), error) {
-	var providerName string
-
-	if v, ok := m["provider"]; ok && v.(string) != "" {
-		providerName = v.(string)
-	} else {
-		return nil, nil, fmt.Errorf("DNS challenge provider not defined")
-	}
-
-	// Config only needs to be set if it's defined, otherwise existing env/SDK
-	// defaults are fine.
-	config := make(map[string]string)
-	if v, ok := m["config"]; ok {
-		for k, v := range v.(map[string]interface{}) {
-			config[k] = v.(string)
-		}
-	}
-
-	return dnsplugin.NewClient(providerName, config, nameServers)
-}
-
-func expandDNSChallengeOptions(d *schema.ResourceData) []dns01.ChallengeOption {
-	var opts []dns01.ChallengeOption
-	if nameservers := expandRecursiveNameservers(d); len(nameservers) > 0 {
-		opts = append(opts, dns01.AddRecursiveNameservers(nameservers))
-	}
-
-	if d.Get("disable_complete_propagation").(bool) {
-		opts = append(opts, dns01.DisableCompletePropagationRequirement())
-	}
-
-	if preCheckDelay := d.Get("pre_check_delay").(int); preCheckDelay > 0 {
-		opts = append(opts, dns01.WrapPreCheck(resourceACMECertificatePreCheckDelay(preCheckDelay)))
-	}
-
-	return opts
-}
-
-func expandRecursiveNameservers(d *schema.ResourceData) []string {
-	s := make([]string, 0)
-	if nameservers := d.Get("recursive_nameservers").([]interface{}); len(nameservers) > 0 {
-		for _, ns := range nameservers {
-			s = append(s, ns.(string))
-		}
-	}
-
-	return s
-}
-
-// DNSProviderWrapper is a multi-provider wrapper to support multiple
-// DNS challenges.
-type DNSProviderWrapper struct {
-	providers []challenge.ProviderTimeout
-}
-
-// NewDNSProviderWrapper returns an freshly initialized
-// DNSProviderWrapper.
-func NewDNSProviderWrapper() (*DNSProviderWrapper, error) {
-	return &DNSProviderWrapper{}, nil
-}
-
-// Present implements challenge.Provider for DNSProviderWrapper.
-func (d *DNSProviderWrapper) Present(domain, token, keyAuth string) error {
-	var err error
-	for _, p := range d.providers {
-		err = p.Present(domain, token, keyAuth)
-		if err != nil {
-			err = multierror.Append(err, fmt.Errorf("error encountered while presenting token for DNS challenge: %s", err.Error()))
-		}
-	}
-
-	return err
-}
-
-// CleanUp implements challenge.Provider for DNSProviderWrapper.
-func (d *DNSProviderWrapper) CleanUp(domain, token, keyAuth string) error {
-	var err error
-	for _, p := range d.providers {
-		err = p.CleanUp(domain, token, keyAuth)
-		if err != nil {
-			err = multierror.Append(err, fmt.Errorf("error encountered while cleaning token for DNS challenge: %s", err.Error()))
-		}
-	}
-
-	return err
-}
-
-// Timeout implements challenge.ProviderTimeout for
-// DNSProviderWrapper.
-//
-// The highest polling interval and timeout values defined across all
-// providers is used.
-func (d *DNSProviderWrapper) Timeout() (time.Duration, time.Duration) {
-	var timeout, interval time.Duration
-	for _, p := range d.providers {
-		t, i := p.Timeout()
-		if t > timeout {
-			timeout = t
-		}
-
-		if i > interval {
-			interval = i
-		}
-	}
-
-	if timeout < 1 {
-		timeout = dns01.DefaultPropagationTimeout
-	}
-
-	if interval < 1 {
-		interval = dns01.DefaultPollingInterval
-	}
-
-	return timeout, interval
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/dnsplugin/client.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/client.go
--- ./vancluever/v2.21.0/acme/dnsplugin/client.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/client.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,106 +0,0 @@
-package dnsplugin
-
-import (
-	"context"
-	"errors"
-	"fmt"
-	"os"
-	"os/exec"
-	"time"
-
-	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
-	"github.com/go-acme/lego/v4/challenge"
-	"github.com/hashicorp/go-plugin"
-)
-
-// NewClient creates a new DNS provider instance by dispatching to itself via
-// go-plugin. The client for the new provider is returned, along with a closer
-// function that should be called when done to shut down the plugin.
-//
-// The plugin is initialized with the settings passed in:
-//   - The environment is set with the config map.
-//   - If supplied, the global recursive nameservers are also set (via the
-//     dns01 package - some providers use these facilities).
-func NewClient(
-	providerName string,
-	config map[string]string,
-	recursiveNameservers []string,
-) (challenge.ProviderTimeout, func(), error) {
-	// Discover the path to the executable that we are running at.
-	execPath, err := os.Executable()
-	if err != nil {
-		return nil, nil, fmt.Errorf("error getting plugin path: %w", err)
-	}
-
-	cmd := exec.Command(execPath, "-dnsplugin")
-	client := plugin.NewClient(&plugin.ClientConfig{
-		HandshakeConfig:  Handshake,
-		AutoMTLS:         true,
-		Plugins:          map[string]plugin.Plugin{PluginName: &DnsPlugin{}},
-		Cmd:              cmd,
-		AllowedProtocols: []plugin.Protocol{plugin.ProtocolGRPC},
-	})
-
-	rpcClient, err := client.Client()
-	if err != nil {
-		return nil, nil, fmt.Errorf("error getting plugin client: %w", err)
-	}
-
-	raw, err := rpcClient.Dispense(PluginName)
-	if err != nil {
-		return nil, nil, fmt.Errorf("error dispensing plugin: %w", err)
-	}
-
-	// First call the plugin as its gRPC server interface so that we can
-	// configure it.
-	if dnsProviderClient, ok := raw.(*DnsProviderClient); ok {
-		if err := dnsProviderClient.Configure(providerName, config, recursiveNameservers); err != nil {
-			return nil, nil, fmt.Errorf("error configuring plugin: %w", err)
-		}
-	} else {
-		return nil, nil, errors.New("internal error: returned plugin not a DnsProviderClient")
-	}
-
-	provider, ok := raw.(challenge.ProviderTimeout)
-	if !ok {
-		return nil, nil, errors.New("internal error: returned plugin not a challenge provider")
-	}
-
-	return provider, func() { rpcClient.Close() }, nil
-}
-
-type DnsProviderClient struct {
-	client dnspluginproto.DNSProviderServiceClient
-}
-
-func (m *DnsProviderClient) Configure(providerName string, config map[string]string, recursiveNameservers []string) error {
-	_, err := m.client.Configure(context.Background(), &dnspluginproto.ConfigureRequest{
-		ProviderName:         providerName,
-		Config:               config,
-		RecursiveNameservers: recursiveNameservers,
-	})
-	return err
-}
-
-func (m *DnsProviderClient) Present(domain, token, keyAuth string) error {
-	_, err := m.client.Present(context.Background(), &dnspluginproto.PresentRequest{
-		Domain:  domain,
-		Token:   token,
-		KeyAuth: keyAuth,
-	})
-	return err
-}
-
-func (m *DnsProviderClient) CleanUp(domain, token, keyAuth string) error {
-	_, err := m.client.CleanUp(context.Background(), &dnspluginproto.CleanUpRequest{
-		Domain:  domain,
-		Token:   token,
-		KeyAuth: keyAuth,
-	})
-	return err
-}
-
-func (m *DnsProviderClient) Timeout() (time.Duration, time.Duration) {
-	resp, _ := m.client.Timeout(context.Background(), &dnspluginproto.TimeoutRequest{})
-	return resp.GetTimeout().AsDuration(), resp.GetInterval().AsDuration()
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/dnsplugin/dns_provider_factory.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/dns_provider_factory.go
--- ./vancluever/v2.21.0/acme/dnsplugin/dns_provider_factory.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/dns_provider_factory.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,1190 +0,0 @@
-// Auto-generated file. Do not edit.
-package dnsplugin
-
-import (
-	"github.com/go-acme/lego/v4/challenge"
-	"github.com/go-acme/lego/v4/providers/dns/acmedns"
-	"github.com/go-acme/lego/v4/providers/dns/alidns"
-	"github.com/go-acme/lego/v4/providers/dns/allinkl"
-	"github.com/go-acme/lego/v4/providers/dns/arvancloud"
-	"github.com/go-acme/lego/v4/providers/dns/auroradns"
-	"github.com/go-acme/lego/v4/providers/dns/autodns"
-	"github.com/go-acme/lego/v4/providers/dns/azure"
-	"github.com/go-acme/lego/v4/providers/dns/azuredns"
-	"github.com/go-acme/lego/v4/providers/dns/bindman"
-	"github.com/go-acme/lego/v4/providers/dns/bluecat"
-	"github.com/go-acme/lego/v4/providers/dns/brandit"
-	"github.com/go-acme/lego/v4/providers/dns/bunny"
-	"github.com/go-acme/lego/v4/providers/dns/checkdomain"
-	"github.com/go-acme/lego/v4/providers/dns/civo"
-	"github.com/go-acme/lego/v4/providers/dns/clouddns"
-	"github.com/go-acme/lego/v4/providers/dns/cloudflare"
-	"github.com/go-acme/lego/v4/providers/dns/cloudns"
-	"github.com/go-acme/lego/v4/providers/dns/cloudru"
-	"github.com/go-acme/lego/v4/providers/dns/cloudxns"
-	"github.com/go-acme/lego/v4/providers/dns/conoha"
-	"github.com/go-acme/lego/v4/providers/dns/constellix"
-	"github.com/go-acme/lego/v4/providers/dns/cpanel"
-	"github.com/go-acme/lego/v4/providers/dns/derak"
-	"github.com/go-acme/lego/v4/providers/dns/desec"
-	"github.com/go-acme/lego/v4/providers/dns/designate"
-	"github.com/go-acme/lego/v4/providers/dns/digitalocean"
-	"github.com/go-acme/lego/v4/providers/dns/dnshomede"
-	"github.com/go-acme/lego/v4/providers/dns/dnsimple"
-	"github.com/go-acme/lego/v4/providers/dns/dnsmadeeasy"
-	"github.com/go-acme/lego/v4/providers/dns/dnspod"
-	"github.com/go-acme/lego/v4/providers/dns/dode"
-	"github.com/go-acme/lego/v4/providers/dns/domeneshop"
-	"github.com/go-acme/lego/v4/providers/dns/dreamhost"
-	"github.com/go-acme/lego/v4/providers/dns/duckdns"
-	"github.com/go-acme/lego/v4/providers/dns/dyn"
-	"github.com/go-acme/lego/v4/providers/dns/dynu"
-	"github.com/go-acme/lego/v4/providers/dns/easydns"
-	"github.com/go-acme/lego/v4/providers/dns/edgedns"
-	"github.com/go-acme/lego/v4/providers/dns/efficientip"
-	"github.com/go-acme/lego/v4/providers/dns/epik"
-	"github.com/go-acme/lego/v4/providers/dns/exec"
-	"github.com/go-acme/lego/v4/providers/dns/exoscale"
-	"github.com/go-acme/lego/v4/providers/dns/freemyip"
-	"github.com/go-acme/lego/v4/providers/dns/gandi"
-	"github.com/go-acme/lego/v4/providers/dns/gandiv5"
-	"github.com/go-acme/lego/v4/providers/dns/gcloud"
-	"github.com/go-acme/lego/v4/providers/dns/gcore"
-	"github.com/go-acme/lego/v4/providers/dns/glesys"
-	"github.com/go-acme/lego/v4/providers/dns/godaddy"
-	"github.com/go-acme/lego/v4/providers/dns/googledomains"
-	"github.com/go-acme/lego/v4/providers/dns/hetzner"
-	"github.com/go-acme/lego/v4/providers/dns/hostingde"
-	"github.com/go-acme/lego/v4/providers/dns/hosttech"
-	"github.com/go-acme/lego/v4/providers/dns/httpnet"
-	"github.com/go-acme/lego/v4/providers/dns/httpreq"
-	"github.com/go-acme/lego/v4/providers/dns/hurricane"
-	"github.com/go-acme/lego/v4/providers/dns/hyperone"
-	"github.com/go-acme/lego/v4/providers/dns/ibmcloud"
-	"github.com/go-acme/lego/v4/providers/dns/iij"
-	"github.com/go-acme/lego/v4/providers/dns/iijdpf"
-	"github.com/go-acme/lego/v4/providers/dns/infoblox"
-	"github.com/go-acme/lego/v4/providers/dns/infomaniak"
-	"github.com/go-acme/lego/v4/providers/dns/internetbs"
-	"github.com/go-acme/lego/v4/providers/dns/inwx"
-	"github.com/go-acme/lego/v4/providers/dns/ionos"
-	"github.com/go-acme/lego/v4/providers/dns/ipv64"
-	"github.com/go-acme/lego/v4/providers/dns/iwantmyname"
-	"github.com/go-acme/lego/v4/providers/dns/joker"
-	"github.com/go-acme/lego/v4/providers/dns/liara"
-	"github.com/go-acme/lego/v4/providers/dns/lightsail"
-	"github.com/go-acme/lego/v4/providers/dns/linode"
-	"github.com/go-acme/lego/v4/providers/dns/liquidweb"
-	"github.com/go-acme/lego/v4/providers/dns/loopia"
-	"github.com/go-acme/lego/v4/providers/dns/luadns"
-	"github.com/go-acme/lego/v4/providers/dns/mailinabox"
-	"github.com/go-acme/lego/v4/providers/dns/metaname"
-	"github.com/go-acme/lego/v4/providers/dns/mydnsjp"
-	"github.com/go-acme/lego/v4/providers/dns/mythicbeasts"
-	"github.com/go-acme/lego/v4/providers/dns/namecheap"
-	"github.com/go-acme/lego/v4/providers/dns/namedotcom"
-	"github.com/go-acme/lego/v4/providers/dns/namesilo"
-	"github.com/go-acme/lego/v4/providers/dns/nearlyfreespeech"
-	"github.com/go-acme/lego/v4/providers/dns/netcup"
-	"github.com/go-acme/lego/v4/providers/dns/netlify"
-	"github.com/go-acme/lego/v4/providers/dns/nicmanager"
-	"github.com/go-acme/lego/v4/providers/dns/nifcloud"
-	"github.com/go-acme/lego/v4/providers/dns/njalla"
-	"github.com/go-acme/lego/v4/providers/dns/nodion"
-	"github.com/go-acme/lego/v4/providers/dns/ns1"
-	"github.com/go-acme/lego/v4/providers/dns/oraclecloud"
-	"github.com/go-acme/lego/v4/providers/dns/otc"
-	"github.com/go-acme/lego/v4/providers/dns/ovh"
-	"github.com/go-acme/lego/v4/providers/dns/pdns"
-	"github.com/go-acme/lego/v4/providers/dns/plesk"
-	"github.com/go-acme/lego/v4/providers/dns/porkbun"
-	"github.com/go-acme/lego/v4/providers/dns/rackspace"
-	"github.com/go-acme/lego/v4/providers/dns/rcodezero"
-	"github.com/go-acme/lego/v4/providers/dns/regru"
-	"github.com/go-acme/lego/v4/providers/dns/rfc2136"
-	"github.com/go-acme/lego/v4/providers/dns/rimuhosting"
-	"github.com/go-acme/lego/v4/providers/dns/route53"
-	"github.com/go-acme/lego/v4/providers/dns/safedns"
-	"github.com/go-acme/lego/v4/providers/dns/sakuracloud"
-	"github.com/go-acme/lego/v4/providers/dns/scaleway"
-	"github.com/go-acme/lego/v4/providers/dns/selectel"
-	"github.com/go-acme/lego/v4/providers/dns/servercow"
-	"github.com/go-acme/lego/v4/providers/dns/shellrent"
-	"github.com/go-acme/lego/v4/providers/dns/simply"
-	"github.com/go-acme/lego/v4/providers/dns/sonic"
-	"github.com/go-acme/lego/v4/providers/dns/stackpath"
-	"github.com/go-acme/lego/v4/providers/dns/tencentcloud"
-	"github.com/go-acme/lego/v4/providers/dns/transip"
-	"github.com/go-acme/lego/v4/providers/dns/ultradns"
-	"github.com/go-acme/lego/v4/providers/dns/variomedia"
-	"github.com/go-acme/lego/v4/providers/dns/vegadns"
-	"github.com/go-acme/lego/v4/providers/dns/vercel"
-	"github.com/go-acme/lego/v4/providers/dns/versio"
-	"github.com/go-acme/lego/v4/providers/dns/vinyldns"
-	"github.com/go-acme/lego/v4/providers/dns/vkcloud"
-	"github.com/go-acme/lego/v4/providers/dns/vscale"
-	"github.com/go-acme/lego/v4/providers/dns/vultr"
-	"github.com/go-acme/lego/v4/providers/dns/webnames"
-	"github.com/go-acme/lego/v4/providers/dns/websupport"
-	"github.com/go-acme/lego/v4/providers/dns/wedos"
-	"github.com/go-acme/lego/v4/providers/dns/yandex"
-	"github.com/go-acme/lego/v4/providers/dns/yandex360"
-	"github.com/go-acme/lego/v4/providers/dns/yandexcloud"
-	"github.com/go-acme/lego/v4/providers/dns/zoneee"
-	"github.com/go-acme/lego/v4/providers/dns/zonomi"
-)
-
-// dnsProviderFactoryFunc is a function that calls a provider's
-// constructor and returns the provider interface.
-type dnsProviderFactoryFunc func() (challenge.Provider, error)
-
-// dnsProviderFactory is a factory for all of the valid DNS providers
-// supported by ACME provider.
-var dnsProviderFactory = map[string]dnsProviderFactoryFunc{
-	"acme-dns": func() (challenge.Provider, error) {
-		p, err := acmedns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"alidns": func() (challenge.Provider, error) {
-		p, err := alidns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"allinkl": func() (challenge.Provider, error) {
-		p, err := allinkl.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"arvancloud": func() (challenge.Provider, error) {
-		p, err := arvancloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"auroradns": func() (challenge.Provider, error) {
-		p, err := auroradns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"autodns": func() (challenge.Provider, error) {
-		p, err := autodns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"azure": func() (challenge.Provider, error) {
-		mapEnvironmentVariableValues(map[string]string{
-			"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
-			"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
-			"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
-			"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
-			"ARM_TENANT_ID":       "AZURE_TENANT_ID",
-		})
-		p, err := azure.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"azuredns": func() (challenge.Provider, error) {
-		mapEnvironmentVariableValues(map[string]string{
-			"ARM_CLIENT_ID":       "AZURE_CLIENT_ID",
-			"ARM_CLIENT_SECRET":   "AZURE_CLIENT_SECRET",
-			"ARM_RESOURCE_GROUP":  "AZURE_RESOURCE_GROUP",
-			"ARM_SUBSCRIPTION_ID": "AZURE_SUBSCRIPTION_ID",
-			"ARM_TENANT_ID":       "AZURE_TENANT_ID",
-		})
-		p, err := azuredns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"bindman": func() (challenge.Provider, error) {
-		p, err := bindman.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"bluecat": func() (challenge.Provider, error) {
-		p, err := bluecat.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"brandit": func() (challenge.Provider, error) {
-		p, err := brandit.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"bunny": func() (challenge.Provider, error) {
-		p, err := bunny.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"checkdomain": func() (challenge.Provider, error) {
-		p, err := checkdomain.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"civo": func() (challenge.Provider, error) {
-		p, err := civo.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"clouddns": func() (challenge.Provider, error) {
-		p, err := clouddns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"cloudflare": func() (challenge.Provider, error) {
-		p, err := cloudflare.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"cloudns": func() (challenge.Provider, error) {
-		p, err := cloudns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"cloudru": func() (challenge.Provider, error) {
-		p, err := cloudru.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"cloudxns": func() (challenge.Provider, error) {
-		p, err := cloudxns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"conoha": func() (challenge.Provider, error) {
-		p, err := conoha.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"constellix": func() (challenge.Provider, error) {
-		p, err := constellix.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"cpanel": func() (challenge.Provider, error) {
-		p, err := cpanel.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"derak": func() (challenge.Provider, error) {
-		p, err := derak.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"desec": func() (challenge.Provider, error) {
-		p, err := desec.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"designate": func() (challenge.Provider, error) {
-		p, err := designate.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"digitalocean": func() (challenge.Provider, error) {
-		p, err := digitalocean.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dnshomede": func() (challenge.Provider, error) {
-		p, err := dnshomede.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dnsimple": func() (challenge.Provider, error) {
-		p, err := dnsimple.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dnsmadeeasy": func() (challenge.Provider, error) {
-		p, err := dnsmadeeasy.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dnspod": func() (challenge.Provider, error) {
-		p, err := dnspod.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dode": func() (challenge.Provider, error) {
-		p, err := dode.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"domeneshop": func() (challenge.Provider, error) {
-		p, err := domeneshop.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dreamhost": func() (challenge.Provider, error) {
-		p, err := dreamhost.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"duckdns": func() (challenge.Provider, error) {
-		p, err := duckdns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dyn": func() (challenge.Provider, error) {
-		p, err := dyn.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"dynu": func() (challenge.Provider, error) {
-		p, err := dynu.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"easydns": func() (challenge.Provider, error) {
-		p, err := easydns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"edgedns": func() (challenge.Provider, error) {
-		p, err := edgedns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"efficientip": func() (challenge.Provider, error) {
-		p, err := efficientip.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"epik": func() (challenge.Provider, error) {
-		p, err := epik.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"exec": func() (challenge.Provider, error) {
-		p, err := exec.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"exoscale": func() (challenge.Provider, error) {
-		p, err := exoscale.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"freemyip": func() (challenge.Provider, error) {
-		p, err := freemyip.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"gandi": func() (challenge.Provider, error) {
-		p, err := gandi.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"gandiv5": func() (challenge.Provider, error) {
-		p, err := gandiv5.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"gcloud": func() (challenge.Provider, error) {
-		p, err := gcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"gcore": func() (challenge.Provider, error) {
-		p, err := gcore.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"glesys": func() (challenge.Provider, error) {
-		p, err := glesys.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"godaddy": func() (challenge.Provider, error) {
-		p, err := godaddy.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"googledomains": func() (challenge.Provider, error) {
-		p, err := googledomains.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"hetzner": func() (challenge.Provider, error) {
-		p, err := hetzner.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"hostingde": func() (challenge.Provider, error) {
-		p, err := hostingde.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"hosttech": func() (challenge.Provider, error) {
-		p, err := hosttech.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"httpnet": func() (challenge.Provider, error) {
-		p, err := httpnet.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"httpreq": func() (challenge.Provider, error) {
-		p, err := httpreq.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"hurricane": func() (challenge.Provider, error) {
-		p, err := hurricane.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"hyperone": func() (challenge.Provider, error) {
-		p, err := hyperone.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ibmcloud": func() (challenge.Provider, error) {
-		p, err := ibmcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"iij": func() (challenge.Provider, error) {
-		p, err := iij.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"iijdpf": func() (challenge.Provider, error) {
-		p, err := iijdpf.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"infoblox": func() (challenge.Provider, error) {
-		p, err := infoblox.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"infomaniak": func() (challenge.Provider, error) {
-		p, err := infomaniak.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"internetbs": func() (challenge.Provider, error) {
-		p, err := internetbs.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"inwx": func() (challenge.Provider, error) {
-		p, err := inwx.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ionos": func() (challenge.Provider, error) {
-		p, err := ionos.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ipv64": func() (challenge.Provider, error) {
-		p, err := ipv64.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"iwantmyname": func() (challenge.Provider, error) {
-		p, err := iwantmyname.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"joker": func() (challenge.Provider, error) {
-		p, err := joker.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"liara": func() (challenge.Provider, error) {
-		p, err := liara.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"lightsail": func() (challenge.Provider, error) {
-		p, err := lightsail.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"linode": func() (challenge.Provider, error) {
-		p, err := linode.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"liquidweb": func() (challenge.Provider, error) {
-		p, err := liquidweb.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"loopia": func() (challenge.Provider, error) {
-		p, err := loopia.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"luadns": func() (challenge.Provider, error) {
-		p, err := luadns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"mailinabox": func() (challenge.Provider, error) {
-		p, err := mailinabox.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"metaname": func() (challenge.Provider, error) {
-		p, err := metaname.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"mydnsjp": func() (challenge.Provider, error) {
-		p, err := mydnsjp.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"mythicbeasts": func() (challenge.Provider, error) {
-		p, err := mythicbeasts.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"namecheap": func() (challenge.Provider, error) {
-		p, err := namecheap.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"namedotcom": func() (challenge.Provider, error) {
-		p, err := namedotcom.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"namesilo": func() (challenge.Provider, error) {
-		p, err := namesilo.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"nearlyfreespeech": func() (challenge.Provider, error) {
-		p, err := nearlyfreespeech.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"netcup": func() (challenge.Provider, error) {
-		p, err := netcup.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"netlify": func() (challenge.Provider, error) {
-		p, err := netlify.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"nicmanager": func() (challenge.Provider, error) {
-		p, err := nicmanager.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"nifcloud": func() (challenge.Provider, error) {
-		p, err := nifcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"njalla": func() (challenge.Provider, error) {
-		p, err := njalla.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"nodion": func() (challenge.Provider, error) {
-		p, err := nodion.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ns1": func() (challenge.Provider, error) {
-		p, err := ns1.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"oraclecloud": func() (challenge.Provider, error) {
-		p, err := oraclecloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"otc": func() (challenge.Provider, error) {
-		p, err := otc.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ovh": func() (challenge.Provider, error) {
-		p, err := ovh.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"pdns": func() (challenge.Provider, error) {
-		p, err := pdns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"plesk": func() (challenge.Provider, error) {
-		p, err := plesk.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"porkbun": func() (challenge.Provider, error) {
-		p, err := porkbun.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"rackspace": func() (challenge.Provider, error) {
-		p, err := rackspace.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"rcodezero": func() (challenge.Provider, error) {
-		p, err := rcodezero.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"regru": func() (challenge.Provider, error) {
-		p, err := regru.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"rfc2136": func() (challenge.Provider, error) {
-		p, err := rfc2136.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"rimuhosting": func() (challenge.Provider, error) {
-		p, err := rimuhosting.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"route53": func() (challenge.Provider, error) {
-		p, err := route53.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"safedns": func() (challenge.Provider, error) {
-		p, err := safedns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"sakuracloud": func() (challenge.Provider, error) {
-		p, err := sakuracloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"scaleway": func() (challenge.Provider, error) {
-		p, err := scaleway.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"selectel": func() (challenge.Provider, error) {
-		p, err := selectel.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"servercow": func() (challenge.Provider, error) {
-		p, err := servercow.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"shellrent": func() (challenge.Provider, error) {
-		p, err := shellrent.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"simply": func() (challenge.Provider, error) {
-		p, err := simply.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"sonic": func() (challenge.Provider, error) {
-		p, err := sonic.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"stackpath": func() (challenge.Provider, error) {
-		p, err := stackpath.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"tencentcloud": func() (challenge.Provider, error) {
-		p, err := tencentcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"transip": func() (challenge.Provider, error) {
-		p, err := transip.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"ultradns": func() (challenge.Provider, error) {
-		p, err := ultradns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"variomedia": func() (challenge.Provider, error) {
-		p, err := variomedia.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vegadns": func() (challenge.Provider, error) {
-		p, err := vegadns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vercel": func() (challenge.Provider, error) {
-		p, err := vercel.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"versio": func() (challenge.Provider, error) {
-		p, err := versio.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vinyldns": func() (challenge.Provider, error) {
-		p, err := vinyldns.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vkcloud": func() (challenge.Provider, error) {
-		p, err := vkcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vscale": func() (challenge.Provider, error) {
-		p, err := vscale.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"vultr": func() (challenge.Provider, error) {
-		p, err := vultr.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"webnames": func() (challenge.Provider, error) {
-		p, err := webnames.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"websupport": func() (challenge.Provider, error) {
-		p, err := websupport.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"wedos": func() (challenge.Provider, error) {
-		p, err := wedos.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"yandex": func() (challenge.Provider, error) {
-		p, err := yandex.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"yandex360": func() (challenge.Provider, error) {
-		p, err := yandex360.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"yandexcloud": func() (challenge.Provider, error) {
-		p, err := yandexcloud.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"zoneee": func() (challenge.Provider, error) {
-		p, err := zoneee.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-	"zonomi": func() (challenge.Provider, error) {
-		p, err := zonomi.NewDNSProvider()
-		if err != nil {
-			return nil, err
-		}
-
-		return p, nil
-	},
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/dnsplugin/plugin.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/plugin.go
--- ./vancluever/v2.21.0/acme/dnsplugin/plugin.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/plugin.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,121 +0,0 @@
-package dnsplugin
-
-//go:generate go run ../../build-support/generate-dns-providers go dns_provider_factory.go
-
-import (
-	"context"
-	"fmt"
-	"os"
-	"time"
-
-	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
-	"github.com/go-acme/lego/v4/challenge"
-	"github.com/go-acme/lego/v4/challenge/dns01"
-	"github.com/hashicorp/go-plugin"
-	"google.golang.org/grpc"
-	"google.golang.org/protobuf/types/known/durationpb"
-)
-
-const (
-	ProtocolVersion  = 1
-	MagicCookieKey   = "TERRAFORM_PROVIDER_ACME_MAGIC_COOKIE_KEY"
-	MagicCookieValue = "990EF127-D8AA-43D3-9196-9493C2D6C475"
-	PluginName       = "dnsplugin"
-	PluginArg        = "-dnsplugin"
-)
-
-var Handshake = plugin.HandshakeConfig{
-	ProtocolVersion:  ProtocolVersion,
-	MagicCookieKey:   MagicCookieKey,
-	MagicCookieValue: MagicCookieValue,
-}
-
-// Serve serves the DNS plugin. This function does not retun and will cause the
-// process to exit after the plugin is finished running.
-func Serve() {
-	plugin.Serve(&plugin.ServeConfig{
-		HandshakeConfig: Handshake,
-		Plugins: map[string]plugin.Plugin{
-			PluginName: &DnsPlugin{},
-		},
-		GRPCServer: plugin.DefaultGRPCServer,
-	})
-}
-
-// DnsPlugin the gRPC plugin for serving the DNS plugin that has been set.
-type DnsPlugin struct {
-	plugin.Plugin
-}
-
-func (p *DnsPlugin) GRPCServer(broker *plugin.GRPCBroker, s *grpc.Server) error {
-	dnspluginproto.RegisterDNSProviderServiceServer(s, &DnsProviderServer{})
-	return nil
-}
-
-func (p *DnsPlugin) GRPCClient(ctx context.Context, broker *plugin.GRPCBroker, c *grpc.ClientConn) (interface{}, error) {
-	return &DnsProviderClient{client: dnspluginproto.NewDNSProviderServiceClient(c)}, nil
-}
-
-type DnsProviderServer struct {
-	dnspluginproto.UnimplementedDNSProviderServiceServer
-
-	provider challenge.Provider
-}
-
-func (s *DnsProviderServer) Configure(ctx context.Context, req *dnspluginproto.ConfigureRequest) (*dnspluginproto.ConfigureResponse, error) {
-	providerFunc, ok := dnsProviderFactory[req.GetProviderName()]
-	if !ok {
-		return nil, fmt.Errorf("unknown provider name %q", req.GetProviderName())
-	}
-
-	if len(req.GetRecursiveNameservers()) > 0 {
-		// Configure recursive nameservers in the dns01 package. Some providers use
-		// functionality in dns01 that depend on these and the changes made in the
-		// parent process will not propagate.
-		if err := dns01.AddRecursiveNameservers(req.GetRecursiveNameservers())(nil); err != nil {
-			return nil, fmt.Errorf("error setting recursive nameservers: %w", err)
-		}
-	}
-
-	// Set env before configuring provider
-	for k, v := range req.GetConfig() {
-		os.Setenv(k, v)
-	}
-
-	var err error
-	s.provider, err = providerFunc()
-	if err != nil {
-		return nil, fmt.Errorf("error initializing provider: %w", err)
-	}
-
-	return &dnspluginproto.ConfigureResponse{}, nil
-}
-
-func (m *DnsProviderServer) Present(ctx context.Context, req *dnspluginproto.PresentRequest) (*dnspluginproto.PresentResponse, error) {
-	return &dnspluginproto.PresentResponse{}, m.provider.Present(req.GetDomain(), req.GetToken(), req.GetKeyAuth())
-}
-
-func (m *DnsProviderServer) CleanUp(ctx context.Context, req *dnspluginproto.CleanUpRequest) (*dnspluginproto.CleanUpResponse, error) {
-	return &dnspluginproto.CleanUpResponse{}, m.provider.CleanUp(req.GetDomain(), req.GetToken(), req.GetKeyAuth())
-}
-
-func (m *DnsProviderServer) Timeout(ctx context.Context, req *dnspluginproto.TimeoutRequest) (*dnspluginproto.TimeoutResponse, error) {
-	var timeout, interval time.Duration
-	if pt, ok := m.provider.(challenge.ProviderTimeout); ok {
-		timeout, interval = pt.Timeout()
-	}
-
-	return &dnspluginproto.TimeoutResponse{
-		Timeout:  durationpb.New(timeout),
-		Interval: durationpb.New(interval),
-	}, nil
-}
-
-// helper function to map environment variables if set
-func mapEnvironmentVariableValues(keyMapping map[string]string) {
-	for key := range keyMapping {
-		if value, ok := os.LookupEnv(key); ok {
-			os.Setenv(keyMapping[key], value)
-		}
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/plugin_test.go
--- ./vancluever/v2.21.0/acme/dnsplugin/plugin_test.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/dnsplugin/plugin_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,82 +0,0 @@
-package dnsplugin
-
-import (
-	"context"
-	"os"
-	"testing"
-	"time"
-
-	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
-	"github.com/go-acme/lego/v4/challenge"
-	"github.com/go-acme/lego/v4/providers/dns/route53"
-)
-
-var _ = challenge.ProviderTimeout((*DnsProviderClient)(nil))
-
-func TestMapEnvironmentVariableValues(t *testing.T) {
-	oldFoo := os.Getenv("ACME_ENV_TEST_FOO")
-	oldBar := os.Getenv("ACME_ENV_TEST_BAR")
-	defer os.Setenv("ACME_ENV_TEST_FOO", oldFoo)
-	defer os.Setenv("ACME_ENV_TEST_BAR", oldBar)
-
-	expected := "test"
-	os.Setenv("ACME_ENV_TEST_FOO", expected)
-	mapEnvironmentVariableValues(map[string]string{
-		"ACME_ENV_TEST_FOO": "ACME_ENV_TEST_BAR",
-	})
-
-	actual := os.Getenv("ACME_ENV_TEST_BAR")
-	if expected != actual {
-		t.Fatalf("expected ACME_ENV_TEST_BAR to be %q, got %q", expected, actual)
-	}
-}
-
-type testDummyProviderNoTimeout struct{}
-
-func (p *testDummyProviderNoTimeout) Present(_, _, _ string) error { return nil }
-func (p *testDummyProviderNoTimeout) CleanUp(_, _, _ string) error { return nil }
-
-func TestDnsProviderServerTimeout(t *testing.T) {
-	testCases := []struct {
-		desc         string
-		provider     challenge.Provider
-		wantTimeout  time.Duration
-		wantInterval time.Duration
-	}{
-		{
-			desc: "with timeout",
-			provider: func() challenge.Provider {
-				p, err := route53.NewDNSProvider()
-				if err != nil {
-					panic(err)
-				}
-
-				return p
-			}(),
-			wantTimeout:  2 * time.Minute,
-			wantInterval: 4 * time.Second,
-		},
-		{
-			desc:     "without timeout",
-			provider: &testDummyProviderNoTimeout{},
-		},
-	}
-
-	for _, tc := range testCases {
-		t.Run(tc.desc, func(t *testing.T) {
-			server := &DnsProviderServer{provider: tc.provider}
-			resp, err := server.Timeout(context.Background(), &dnspluginproto.TimeoutRequest{})
-			if err != nil {
-				t.Fatal(err)
-			}
-
-			if tc.wantTimeout != resp.Timeout.AsDuration() {
-				t.Fatalf("want duration %s, got duration %s", tc.wantTimeout, resp.Timeout.AsDuration())
-			}
-
-			if tc.wantInterval != resp.Interval.AsDuration() {
-				t.Fatalf("want duration %s, got duration %s", tc.wantTimeout, resp.Interval.AsDuration())
-			}
-		})
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/errorlist.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/errorlist.go
--- ./vancluever/v2.21.0/acme/errorlist.go	2024-04-26 18:07:52.564300426 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/errorlist.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,31 +0,0 @@
-package acme
-
-import "strings"
-
-const (
-	ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newAccount"
-	ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS     = "429 ::HEAD :: https://acme.zerossl.com/v2/DV90/newNonce"
-	ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS = "429 ::GET :: https://acme.zerossl.com/v2/DV90"
-	ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS         = "429 ::POST :: https://acme.zerossl.com/v2/DV90/authz"
-	ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/newOrder"
-	ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS       = "429 ::POST :: https://acme.zerossl.com/v2/DV90/account"
-	ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS   = "429 ::POST :: https://acme.zerossl.com/v2/DV90/revokeCert"
-	ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS     = "429 ::POST :: https://acme.zerossl.com/v2/DV90/chall"
-	LETSENCRYPT_ERR_RATE_LIMITED                = "429 :: POST :: https://acme-staging-v02.api.letsencrypt.org/acme/new-acct"
-	ERR_TIME_LIMIT_EXCEEDED                     = "time limit exceeded"
-	ERR_SERVER_NO_RESPONSE                      = "net/http: timeout awaiting response headers"
-)
-
-func isAbleToRetry(errCode string) bool {
-	return strings.Contains(errCode, ZEROSSL_ERR_NEW_ACCOUNT_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_NEW_NONCE_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_GET_DIRECTORY_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_AUTHZ_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_NEW_ORDER_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_ACCOUNT_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_REVOKE_CERT_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, ZEROSSL_ERR_CHALLENGE_TOO_MANY_REQUESTS) ||
-		strings.Contains(errCode, LETSENCRYPT_ERR_RATE_LIMITED) ||
-		strings.Contains(errCode, ERR_TIME_LIMIT_EXCEEDED) ||
-		strings.Contains(errCode, ERR_SERVER_NO_RESPONSE)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/provider.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/provider.go
--- ./vancluever/v2.21.0/acme/provider.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/provider.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,38 +0,0 @@
-package acme
-
-import (
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-)
-
-// Provider returns the terraform.ResourceProvider structure for the ACME
-// provider.
-func Provider() *schema.Provider {
-	return &schema.Provider{
-		Schema: map[string]*schema.Schema{
-			"server_url": {
-				Type:        schema.TypeString,
-				Required:    true,
-				DefaultFunc: schema.EnvDefaultFunc("ACME_SERVER_URL", nil),
-			},
-		},
-
-		ResourcesMap: map[string]*schema.Resource{
-			"acme_registration": resourceACMERegistration(),
-			"acme_certificate":  resourceACMECertificate(),
-		},
-
-		ConfigureFunc: configureProvider,
-	}
-}
-
-// Config represents the configuration of the provider.
-type Config struct {
-	// The ACME server URL.
-	ServerURL string
-}
-
-func configureProvider(d *schema.ResourceData) (interface{}, error) {
-	return &Config{
-		ServerURL: d.Get("server_url").(string),
-	}, nil
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/provider_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/provider_test.go
--- ./vancluever/v2.21.0/acme/provider_test.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/provider_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,172 +0,0 @@
-package acme
-
-import (
-	"crypto/tls"
-	"crypto/x509"
-	"encoding/json"
-	"fmt"
-	"go/build"
-	"io"
-	"net/http"
-	"os"
-	"path/filepath"
-	"testing"
-
-	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-)
-
-func testAccProviderAcme() *schema.Provider {
-	return Provider()
-}
-
-func testAccProviderAcmeConfig(serverUrl string) *Config {
-	return &Config{
-		ServerURL: serverUrl,
-	}
-}
-
-var testAccProviders = map[string]func() (*schema.Provider, error){
-	"acme": func() (*schema.Provider, error) {
-		return testAccProviderAcme(), nil
-	},
-}
-
-// Path to the pebble CA cert list, from GOPATH
-const pebbleCACerts = "src/github.com/letsencrypt/pebble/test/certs/pebble.minica.pem"
-
-// Domain for certificates
-const pebbleCertDomain = "example.test"
-
-// URL for the non-EAB pebble directory
-const pebbleDirBasic = "https://localhost:14000/dir"
-
-// URL for the EAB pebble directory
-const pebbleDirEAB = "https://localhost:14001/dir"
-
-// Address for the challenge/test recursive nameserver
-const pebbleChallTestDNSSrv = "localhost:5553"
-
-// Relative path to the external challenge/test script
-const pebbleChallTestDNSScriptPath = "../build-support/scripts/pebble-challtest-dns.sh"
-
-// URL to the main certificate for regular tests
-const mainIntermediateURL = "https://localhost:15000/intermediates/0"
-
-// URL to the alternate certificate for preferred chain tests
-const alternateIntermediateURL = "https://localhost:15000/intermediates/1"
-
-// URL to cert status (non-EAB)
-const certStatusURL = "https://localhost:15000/cert-status-by-serial/"
-
-// Host:port for memcached
-const memcacheHost = "localhost:11211"
-
-// getPebbleCertificate gets the certificate at the supplied URL.
-func getPebbleCertificate(url string) *x509.Certificate {
-	client := &http.Client{
-		Transport: &http.Transport{
-			TLSClientConfig: &tls.Config{
-				InsecureSkipVerify: true,
-			},
-		},
-	}
-	resp, err := client.Get(url)
-	if err != nil {
-		panic(fmt.Errorf("getAlternateIntermediateCertificate: error fetching certificate: %s", err))
-	}
-
-	defer resp.Body.Close()
-	body, err := io.ReadAll(resp.Body)
-	if err != nil {
-		panic(fmt.Errorf("getAlternateIntermediateCertificate: error reading certificate: %s", err))
-	}
-
-	certs, err := parsePEMBundle(body)
-	if err != nil {
-		panic(fmt.Errorf("getAlternateIntermediateCertificate: error reading PEM bundle response: %s", err))
-	}
-
-	if len(certs) != 1 {
-		panic("getAlternateIntermediateCertificate: expected single certificate in intermediate chain, check pebble config")
-	}
-
-	return certs[0]
-}
-
-// getPebbleCertificateIssuer returns the issuer CN of the
-// certificate at the supplied URL.
-func getPebbleCertificateIssuer(url string) string {
-	return getPebbleCertificate(url).Issuer.CommonName
-}
-
-const (
-	certificateStatusValid   = "Valid"
-	certificateStatusRevoked = "Revoked"
-)
-
-// getStatusForCertificate returns the serial number from a *x509.Certificate.
-// Note this currently only works for the non-EAB endpoint.
-func getStatusForCertificate(cert *x509.Certificate) string {
-	client := &http.Client{
-		Transport: &http.Transport{
-			TLSClientConfig: &tls.Config{
-				InsecureSkipVerify: true,
-			},
-		},
-	}
-	resp, err := client.Get(fmt.Sprintf("%s/%x", certStatusURL, cert.SerialNumber.Int64()))
-	if err != nil {
-		panic(fmt.Errorf("getStatusForCertificate: error fetching certificate status: %s", err))
-	}
-
-	if resp.StatusCode != 200 {
-		panic(fmt.Errorf("getStatusForCertificate: unexpected response status: %s", resp.Status))
-	}
-
-	defer resp.Body.Close()
-	body, err := io.ReadAll(resp.Body)
-	if err != nil {
-		panic(fmt.Errorf("getStatusForCertificate: error reading certificate status: %s", err))
-	}
-
-	var result struct {
-		Status string
-	}
-	if err := json.Unmarshal(body, &result); err != nil {
-		panic(fmt.Errorf("getStatusForCertificate: error reading certificate status JSON: %s", err))
-	}
-
-	return result.Status
-}
-
-// External providers (tls)
-var testAccExternalProviders = map[string]resource.ExternalProvider{
-	"tls": {
-		Source: "registry.terraform.io/hashicorp/tls",
-	},
-}
-
-func init() {
-	// Set TF_SCHEMA_PANIC_ON_ERROR as a sanity check on tests.
-	os.Setenv("TF_SCHEMA_PANIC_ON_ERROR", "true")
-
-	// Set lego's CA certs to pebble's CA for testing w/pebble
-	os.Setenv("LEGO_CA_CERTIFICATES", filepath.Join(build.Default.GOPATH, pebbleCACerts))
-}
-
-func TestProvider(t *testing.T) {
-	if err := Provider().InternalValidate(); err != nil {
-		t.Fatalf("err: %s", err)
-	}
-}
-
-func TestMain(m *testing.M) {
-	if len(os.Args) == 2 && os.Args[1] == dnsplugin.PluginArg {
-		// Start the plugin here
-		dnsplugin.Serve()
-	} else {
-		os.Exit(m.Run())
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/resource_acme_certificate.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate.go
--- ./vancluever/v2.21.0/acme/resource_acme_certificate.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,694 +0,0 @@
-package acme
-
-import (
-	"context"
-	"crypto/x509"
-	"fmt"
-	"log"
-	"time"
-
-	"github.com/cenkalti/backoff/v4"
-	"github.com/go-acme/lego/v4/acme"
-	"github.com/go-acme/lego/v4/certificate"
-	"github.com/go-acme/lego/v4/challenge/dns01"
-	"github.com/hashicorp/go-uuid"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
-)
-
-type RevocationReason string
-
-const (
-	RevocationReasonUnspecified          RevocationReason = "unspecified"
-	RevocationReasonKeyCompromise        RevocationReason = "key-compromise"
-	RevocationReasonCACompromise         RevocationReason = "ca-compromise"
-	RevocationReasonAffiliationChanged   RevocationReason = "affiliation-changed"
-	RevocationReasonSuperseded           RevocationReason = "superseded"
-	RevocationReasonCessationOfOperation RevocationReason = "cessation-of-operation"
-	RevocationReasonCertificateHold      RevocationReason = "certificate-hold"
-	RevocationReasonRemoveFromCRL        RevocationReason = "remove-from-crl"
-	RevocationReasonPrivilegeWithdrawn   RevocationReason = "privilege-withdrawn"
-	RevocationReasonAACompromise         RevocationReason = "aa-compromise"
-)
-
-// resourceACMECertificate returns the current version of the
-// acme_registration resource and needs to be updated when the schema
-// version is incremented.
-func resourceACMECertificate() *schema.Resource { return resourceACMECertificateV5() }
-
-func resourceACMECertificateV5() *schema.Resource {
-	return &schema.Resource{
-		Create:        resourceACMECertificateCreate,
-		Read:          resourceACMECertificateRead,
-		CustomizeDiff: resourceACMECertificateCustomizeDiff,
-		Update:        resourceACMECertificateUpdate,
-		Delete:        resourceACMECertificateDelete,
-		MigrateState:  resourceACMECertificateMigrateState,
-		SchemaVersion: 5,
-		StateUpgraders: []schema.StateUpgrader{
-			resourceACMECertificateStateUpgraderV4(),
-		},
-		Schema: map[string]*schema.Schema{
-			"account_key_pem": {
-				Type:      schema.TypeString,
-				Required:  true,
-				ForceNew:  true,
-				Sensitive: true,
-			},
-			"common_name": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"subject_alternative_names": {
-				Type:          schema.TypeSet,
-				Optional:      true,
-				Elem:          &schema.Schema{Type: schema.TypeString},
-				Set:           schema.HashString,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"key_type": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				Default:       "2048",
-				ConflictsWith: []string{"certificate_request_pem"},
-				ValidateFunc:  validateKeyType,
-			},
-			"certificate_request_pem": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"common_name", "subject_alternative_names", "key_type"},
-			},
-			"min_days_remaining": {
-				Type:     schema.TypeInt,
-				Optional: true,
-				Default:  30,
-			},
-			"dns_challenge": {
-				Type:         schema.TypeList,
-				Optional:     true,
-				AtLeastOneOf: []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"provider": {
-							Type:     schema.TypeString,
-							Required: true,
-						},
-						"config": {
-							Type:         schema.TypeMap,
-							Optional:     true,
-							ValidateFunc: validateDNSChallengeConfig,
-							Sensitive:    true,
-						},
-					},
-				},
-			},
-			"http_challenge": {
-				Type:          schema.TypeList,
-				Optional:      true,
-				AtLeastOneOf:  []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				ConflictsWith: []string{"http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge"},
-				MaxItems:      1,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"port": {
-							Type:         schema.TypeInt,
-							Optional:     true,
-							Default:      80,
-							ValidateFunc: validation.IsPortNumber,
-						},
-						"proxy_header": {
-							Type:     schema.TypeString,
-							Optional: true,
-						},
-					},
-				},
-			},
-			"http_webroot_challenge": {
-				Type:          schema.TypeList,
-				Optional:      true,
-				AtLeastOneOf:  []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				ConflictsWith: []string{"http_challenge", "http_memcached_challenge", "http_s3_challenge"},
-				MaxItems:      1,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"directory": {
-							Type:     schema.TypeString,
-							Required: true,
-						},
-					},
-				},
-			},
-			"http_memcached_challenge": {
-				Type:          schema.TypeList,
-				Optional:      true,
-				AtLeastOneOf:  []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				ConflictsWith: []string{"http_challenge", "http_webroot_challenge", "http_s3_challenge"},
-				MaxItems:      1,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"hosts": {
-							Type:     schema.TypeSet,
-							Required: true,
-							Elem:     &schema.Schema{Type: schema.TypeString},
-							Set:      schema.HashString,
-							MinItems: 1,
-						},
-					},
-				},
-			},
-			"http_s3_challenge": {
-				Type:          schema.TypeList,
-				Optional:      true,
-				AtLeastOneOf:  []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				ConflictsWith: []string{"http_challenge", "http_webroot_challenge", "http_memcached_challenge"},
-				MaxItems:      1,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"s3_bucket": {
-							Type:     schema.TypeString,
-							Required: true,
-						},
-					},
-				},
-			},
-			"tls_challenge": {
-				Type:         schema.TypeList,
-				Optional:     true,
-				AtLeastOneOf: []string{"dns_challenge", "http_challenge", "http_webroot_challenge", "http_memcached_challenge", "http_s3_challenge", "tls_challenge"},
-				MaxItems:     1,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"port": {
-							Type:         schema.TypeInt,
-							Optional:     true,
-							Default:      443,
-							ValidateFunc: validation.IsPortNumber,
-						},
-					},
-				},
-			},
-			"pre_check_delay": {
-				Type:         schema.TypeInt,
-				Optional:     true,
-				Default:      0,
-				ValidateFunc: validation.IntAtLeast(0),
-			},
-			"recursive_nameservers": {
-				Type:     schema.TypeList,
-				Optional: true,
-				Elem:     &schema.Schema{Type: schema.TypeString},
-			},
-			"disable_complete_propagation": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  false,
-			},
-			"must_staple": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  false,
-				ForceNew: true,
-			},
-			"preferred_chain": {
-				Type:     schema.TypeString,
-				Optional: true,
-				Default:  "",
-				ForceNew: true,
-			},
-			"cert_timeout": {
-				Type:     schema.TypeInt,
-				Optional: true,
-				Default:  30,
-			},
-			"certificate_url": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_domain": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"private_key_pem": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"issuer_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_p12": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_not_after": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_p12_password": {
-				Type:      schema.TypeString,
-				Optional:  true,
-				Default:   "",
-				Sensitive: true,
-			},
-			"revoke_certificate_on_destroy": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  true,
-			},
-			"revoke_certificate_reason": {
-				Type:         schema.TypeString,
-				Optional:     true,
-				ValidateFunc: validateRevocationReason,
-			},
-		},
-		Timeouts: &schema.ResourceTimeout{
-			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-		},
-	}
-}
-
-func resourceACMECertificateCreate(d *schema.ResourceData, meta interface{}) error {
-	// Pre-generate resource UUID here, in case there is a serious
-	// issue with UUID generation that would lead to inconsistency.
-	//
-	// We do not use the ID of the certificate here as the IDs of
-	// certificates drift during renewal (they are effectively new
-	// certificates). Use the certificate_url to get the URL of the
-	// current certificate instead.
-	resourceUUID, err := uuid.GenerateUUID()
-	if err != nil {
-		return fmt.Errorf("error generating UUID for resource: %s", err)
-	}
-
-	client, _, err := expandACMEClient(d, meta, true)
-	if err != nil {
-		return err
-	}
-
-	dnsCloser, err := setCertificateChallengeProviders(client, d)
-	defer dnsCloser()
-	if err != nil {
-		return err
-	}
-
-	var cert *certificate.Resource
-
-	if v, ok := d.GetOk("certificate_request_pem"); ok {
-		var csr *x509.CertificateRequest
-		csr, err = csrFromPEM([]byte(v.(string)))
-		if err != nil {
-			return err
-		}
-
-		obtainCertCSR := func() error {
-			cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
-				CSR:            csr,
-				Bundle:         true,
-				PreferredChain: d.Get("preferred_chain").(string),
-			})
-			if err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(obtainCertCSR, reconnectBackoff)
-		if err != nil {
-			return err
-		}
-	} else {
-		cn := d.Get("common_name").(string)
-		domains := []string{cn}
-		if s, ok := d.GetOk("subject_alternative_names"); ok {
-			for _, v := range stringSlice(s.(*schema.Set).List()) {
-				if v != cn {
-					domains = append(domains, v)
-				}
-			}
-		}
-
-		obtainCert := func() error {
-			cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
-				Domains:        domains,
-				Bundle:         true,
-				MustStaple:     d.Get("must_staple").(bool),
-				PreferredChain: d.Get("preferred_chain").(string),
-			})
-			if err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(obtainCert, reconnectBackoff)
-		if err != nil {
-			return err
-		}
-	}
-
-	if err != nil {
-		return fmt.Errorf("error creating certificate: %s", err)
-	}
-
-	d.SetId(resourceUUID)
-	password := d.Get("certificate_p12_password").(string)
-	if err := saveCertificateResource(d, cert, password); err != nil {
-		return err
-	}
-
-	return resourceACMECertificateRead(d, meta)
-}
-
-func resourceACMECertificateRead(d *schema.ResourceData, meta interface{}) error {
-	// This is a workaround to correct issues with some versions of the
-	// resource prior to 1.3.2 where a renewal failure would possibly
-	// delete the certificate.
-	if _, ok := d.GetOk("certificate_pem"); !ok {
-		// Try to recover the certificate from the ACME API.
-		client, _, err := expandACMEClient(d, meta, true)
-		if err != nil {
-			return err
-		}
-
-		var srcCR *certificate.Resource
-		getCert := func() error {
-			srcCR, err = client.Certificate.Get(d.Get("certificate_url").(string), true)
-			if err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(getCert, reconnectBackoff)
-		if err != nil {
-			// There are probably some cases that we will want to just drop
-			// the resource if there's been an issue, but seeing as this is
-			// mainly being used to recover for a bug that will be gone in
-			// 1.3.2, this will probably be rare. If we start relying on
-			// this behavior on a more general level, we may need to
-			// investigate this more. Just error on everything for now.
-			return err
-		}
-
-		dstCR := expandCertificateResource(d)
-		dstCR.Certificate = srcCR.Certificate
-		password := d.Get("certificate_p12_password").(string)
-		if err := saveCertificateResource(d, dstCR, password); err != nil {
-			return err
-		}
-	}
-
-	return nil
-}
-
-// resourceACMECertificateCustomizeDiff checks the certificate for renewal and
-// flags it as NewComputed if it needs a renewal.
-func resourceACMECertificateCustomizeDiff(_ context.Context, d *schema.ResourceDiff, meta interface{}) error {
-	// Ensure duplicate providers for dns_challenge are not provided.
-	providerMap := make(map[string]bool)
-	for _, v := range d.Get("dns_challenge").([]interface{}) {
-		m := v.(map[string]interface{})
-		if v, ok := m["provider"]; ok && v.(string) != "" {
-			provider := v.(string)
-			if _, ok := providerMap[provider]; ok {
-				return fmt.Errorf("duplicate dns_challenge providers: %s", provider)
-			}
-
-			providerMap[provider] = true
-		} else {
-			return fmt.Errorf("DNS challenge provider not defined")
-		}
-	}
-
-	// There's nothing for us to do in a Create diff, so if there's no ID yet,
-	// just pass this part.
-	if d.Id() == "" {
-		return nil
-	}
-
-	expired, err := resourceACMECertificateHasExpired(d)
-	if err != nil {
-		return err
-	}
-
-	if expired {
-		d.SetNewComputed("certificate_pem")
-		d.SetNewComputed("certificate_p12")
-		d.SetNewComputed("certificate_url")
-		d.SetNewComputed("certificate_domain")
-		d.SetNewComputed("private_key_pem")
-		d.SetNewComputed("issuer_pem")
-	}
-
-	return nil
-}
-
-// resourceACMECertificateUpdate renews a certificate if it has been flagged as changed.
-func resourceACMECertificateUpdate(d *schema.ResourceData, meta interface{}) error {
-	// We don't need to do anything else here if the certificate hasn't been diffed
-	expired, err := resourceACMECertificateHasExpired(d)
-	if err != nil {
-		return err
-	}
-
-	if !expired {
-		// when the certificate hasn't changed but the p12 password has, we still need to regenerate the p12
-		if d.HasChange("certificate_p12_password") {
-			cert := expandCertificateResource(d)
-			password := d.Get("certificate_p12_password").(string)
-			if err := saveCertificateResource(d, cert, password); err != nil {
-				return err
-			}
-		}
-		return nil
-	}
-
-	// Enable partial mode to protect the certificate during renewal
-	d.Partial(true)
-
-	client, _, err := expandACMEClient(d, meta, true)
-	if err != nil {
-		return err
-	}
-
-	cert := expandCertificateResource(d)
-
-	dnsCloser, err := setCertificateChallengeProviders(client, d)
-	defer dnsCloser()
-	if err != nil {
-		return err
-	}
-
-	var newCert *certificate.Resource
-	renewCert := func() error {
-		newCert, err = client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
-		if err != nil {
-			if isAbleToRetry(err.Error()) {
-				return err
-			} else {
-				return backoff.Permanent(err)
-			}
-		}
-		return nil
-	}
-	reconnectBackoff := backoff.NewExponentialBackOff()
-	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-	err = backoff.Retry(renewCert, reconnectBackoff)
-	if err != nil {
-		return err
-	}
-
-	password := d.Get("certificate_p12_password").(string)
-	if err := saveCertificateResource(d, newCert, password); err != nil {
-		return err
-	}
-
-	// Complete, safe to turn off partial mode now.
-	d.Partial(false)
-	return nil
-}
-
-// resourceACMECertificateDelete "deletes" the certificate by revoking it.
-func resourceACMECertificateDelete(d *schema.ResourceData, meta interface{}) error {
-	if !d.Get("revoke_certificate_on_destroy").(bool) {
-		return nil
-	}
-
-	client, _, err := expandACMEClient(d, meta, true)
-	if err != nil {
-		return err
-	}
-
-	cert := expandCertificateResource(d)
-	remaining, err := certSecondsRemaining(cert)
-	if err != nil {
-		return err
-	}
-
-	if remaining >= 0 {
-		revokeCert := func() error {
-			maybeReason, ok := d.GetOk("revoke_certificate_reason")
-			if ok {
-				reason := RevocationReason(maybeReason.(string))
-				reasonNum, err := GetRevocationReason(reason)
-				if err != nil {
-					return err
-				}
-				if err = client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum); err != nil {
-					if isAbleToRetry(err.Error()) {
-						return err
-					} else {
-						return backoff.Permanent(err)
-					}
-
-				}
-				return nil
-			}
-
-			if err = client.Certificate.Revoke(cert.Certificate); err != nil {
-				if isAbleToRetry(err.Error()) {
-					return err
-				} else {
-					return backoff.Permanent(err)
-				}
-			}
-
-			return nil
-		}
-		reconnectBackoff := backoff.NewExponentialBackOff()
-		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-		err = backoff.Retry(revokeCert, reconnectBackoff)
-		if err != nil {
-			return err
-		}
-	}
-
-	return nil
-}
-
-// resourceACMECertificateHasExpired checks the acme_certificate
-// resource to see if it has expired.
-func resourceACMECertificateHasExpired(d certificateResourceExpander) (bool, error) {
-	mindays := d.Get("min_days_remaining").(int)
-	if mindays < 0 {
-		log.Printf("[WARN] min_days_remaining is set to less than 0, certificate will never be renewed")
-		return false, nil
-	}
-
-	cert := expandCertificateResource(d)
-	remaining, err := certDaysRemaining(cert)
-	if err != nil {
-		return false, err
-	}
-
-	if int64(mindays) >= remaining {
-		return true, nil
-	}
-
-	return false, nil
-}
-
-func resourceACMECertificatePreCheckDelay(delay int) dns01.WrapPreCheckFunc {
-	// Compute a reasonable interval for the delay, max delay 10
-	// seconds, minimum 2.
-	var interval int
-	switch {
-	case delay <= 10:
-		interval = 2
-
-	case delay <= 60:
-		interval = 5
-
-	default:
-		interval = 10
-	}
-
-	return func(domain, fqdn, value string, orig dns01.PreCheckFunc) (bool, error) {
-		stop, err := orig(fqdn, value)
-		if stop && err == nil {
-			// Run the delay. TODO: Eventually make this interruptible.
-			var elapsed int
-			end := time.After(time.Second * time.Duration(delay))
-			for {
-				select {
-				case <-end:
-					return true, nil
-				default:
-				}
-
-				remaining := delay - elapsed
-				if remaining < interval {
-					// To honor the specified timeout, make our next interval the
-					// time remaining. Minimum one second.
-					interval = remaining
-					if interval < 1 {
-						interval = 1
-					}
-				}
-
-				log.Printf("[DEBUG] [%s] acme: Waiting an additional %d second(s) for DNS record propagation.", domain, remaining)
-				time.Sleep(time.Second * time.Duration(interval))
-				elapsed += interval
-			}
-		}
-
-		// A previous pre-check failed, return and exit.
-		return stop, err
-	}
-}
-
-func GetRevocationReason(reason RevocationReason) (uint, error) {
-	switch reason {
-	case RevocationReasonUnspecified:
-		return acme.CRLReasonUnspecified, nil
-	case RevocationReasonKeyCompromise:
-		return acme.CRLReasonKeyCompromise, nil
-	case RevocationReasonCACompromise:
-		return acme.CRLReasonCACompromise, nil
-	case RevocationReasonAffiliationChanged:
-		return acme.CRLReasonAffiliationChanged, nil
-	case RevocationReasonSuperseded:
-		return acme.CRLReasonSuperseded, nil
-	case RevocationReasonCessationOfOperation:
-		return acme.CRLReasonCessationOfOperation, nil
-	case RevocationReasonCertificateHold:
-		return acme.CRLReasonCertificateHold, nil
-	case RevocationReasonRemoveFromCRL:
-		return acme.CRLReasonRemoveFromCRL, nil
-	case RevocationReasonPrivilegeWithdrawn:
-		return acme.CRLReasonPrivilegeWithdrawn, nil
-	case RevocationReasonAACompromise:
-		return acme.CRLReasonAACompromise, nil
-	default:
-		return acme.CRLReasonUnspecified, fmt.Errorf("unknown revocation reason: %s", reason)
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/resource_acme_certificate_legacy_schemas.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate_legacy_schemas.go
--- ./vancluever/v2.21.0/acme/resource_acme_certificate_legacy_schemas.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate_legacy_schemas.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,248 +0,0 @@
-package acme
-
-import (
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
-)
-
-func resourceACMECertificateV4() *schema.Resource {
-	return &schema.Resource{
-		Create:        resourceACMECertificateCreate,
-		Read:          resourceACMECertificateRead,
-		CustomizeDiff: resourceACMECertificateCustomizeDiff,
-		Update:        resourceACMECertificateUpdate,
-		Delete:        resourceACMECertificateDelete,
-		MigrateState:  resourceACMECertificateMigrateState,
-		SchemaVersion: 4,
-		StateUpgraders: []schema.StateUpgrader{
-			resourceACMECertificateStateUpgraderV3(),
-		},
-		Schema: map[string]*schema.Schema{
-			"account_key_pem": {
-				Type:      schema.TypeString,
-				Required:  true,
-				ForceNew:  true,
-				Sensitive: true,
-			},
-			"common_name": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"subject_alternative_names": {
-				Type:          schema.TypeSet,
-				Optional:      true,
-				Elem:          &schema.Schema{Type: schema.TypeString},
-				Set:           schema.HashString,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"key_type": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				Default:       "2048",
-				ConflictsWith: []string{"certificate_request_pem"},
-				ValidateFunc:  validateKeyType,
-			},
-			"certificate_request_pem": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"common_name", "subject_alternative_names", "key_type"},
-			},
-			"min_days_remaining": {
-				Type:     schema.TypeInt,
-				Optional: true,
-				Default:  30,
-			},
-			"dns_challenge": {
-				Type:     schema.TypeList,
-				Required: true,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"provider": {
-							Type:     schema.TypeString,
-							Required: true,
-						},
-						"config": {
-							Type:         schema.TypeMap,
-							Optional:     true,
-							ValidateFunc: validateDNSChallengeConfig,
-							Sensitive:    true,
-						},
-					},
-				},
-			},
-			"pre_check_delay": {
-				Type:         schema.TypeInt,
-				Optional:     true,
-				Default:      0,
-				ValidateFunc: validation.IntAtLeast(0),
-			},
-			"recursive_nameservers": {
-				Type:     schema.TypeList,
-				Optional: true,
-				Elem:     &schema.Schema{Type: schema.TypeString},
-			},
-			"disable_complete_propagation": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  false,
-			},
-			"must_staple": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  false,
-				ForceNew: true,
-			},
-			"certificate_url": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_domain": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"private_key_pem": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"issuer_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_p12": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_p12_password": {
-				Type:      schema.TypeString,
-				Optional:  true,
-				Default:   "",
-				Sensitive: true,
-			},
-		},
-	}
-}
-
-func resourceACMECertificateV3() *schema.Resource {
-	return &schema.Resource{
-		Create:        resourceACMECertificateCreate,
-		Read:          resourceACMECertificateRead,
-		CustomizeDiff: resourceACMECertificateCustomizeDiff,
-		Update:        resourceACMECertificateUpdate,
-		Delete:        resourceACMECertificateDelete,
-		MigrateState:  resourceACMECertificateMigrateState,
-		SchemaVersion: 3,
-		Schema: map[string]*schema.Schema{
-			"account_key_pem": {
-				Type:      schema.TypeString,
-				Required:  true,
-				ForceNew:  true,
-				Sensitive: true,
-			},
-			"common_name": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"subject_alternative_names": {
-				Type:          schema.TypeSet,
-				Optional:      true,
-				Elem:          &schema.Schema{Type: schema.TypeString},
-				Set:           schema.HashString,
-				ForceNew:      true,
-				ConflictsWith: []string{"certificate_request_pem"},
-			},
-			"key_type": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				Default:       "2048",
-				ConflictsWith: []string{"certificate_request_pem"},
-				ValidateFunc:  validateKeyType,
-			},
-			"certificate_request_pem": {
-				Type:          schema.TypeString,
-				Optional:      true,
-				ForceNew:      true,
-				ConflictsWith: []string{"common_name", "subject_alternative_names", "key_type"},
-			},
-			"min_days_remaining": {
-				Type:     schema.TypeInt,
-				Optional: true,
-				Default:  30,
-			},
-			"dns_challenge": {
-				Type:     schema.TypeList,
-				Required: true,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"provider": {
-							Type:     schema.TypeString,
-							Required: true,
-						},
-						"config": {
-							Type:         schema.TypeMap,
-							Optional:     true,
-							ValidateFunc: validateDNSChallengeConfig,
-							Sensitive:    true,
-						},
-						"recursive_nameservers": {
-							Type:     schema.TypeList,
-							Optional: true,
-							Elem:     &schema.Schema{Type: schema.TypeString},
-						},
-					},
-				},
-			},
-			"must_staple": {
-				Type:     schema.TypeBool,
-				Optional: true,
-				Default:  false,
-				ForceNew: true,
-			},
-			"certificate_url": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_domain": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"private_key_pem": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"issuer_pem": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-			"certificate_p12": {
-				Type:      schema.TypeString,
-				Computed:  true,
-				Sensitive: true,
-			},
-			"certificate_p12_password": {
-				Type:      schema.TypeString,
-				Optional:  true,
-				Default:   "",
-				Sensitive: true,
-			},
-		},
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/resource_acme_certificate_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate_test.go
--- ./vancluever/v2.21.0/acme/resource_acme_certificate_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_certificate_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,1599 +0,0 @@
-package acme
-
-import (
-	"context"
-	"crypto"
-	"crypto/ecdsa"
-	"crypto/rsa"
-	"crypto/x509"
-	"encoding/base64"
-	"encoding/pem"
-	"errors"
-	"fmt"
-	"net/http"
-	"net/http/httputil"
-	"net/url"
-	"os"
-	"reflect"
-	"regexp"
-	"strings"
-	"testing"
-	"time"
-
-	"github.com/google/go-cmp/cmp"
-	"github.com/google/go-cmp/cmp/cmpopts"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
-	"github.com/rainycape/memcache"
-	"software.sslmate.com/src/go-pkcs12"
-)
-
-var uuidRegexp = regexp.MustCompile(`^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$`)
-var certURLRegexp = regexp.MustCompile(`^https://localhost:1400[01]/certZ/[a-z0-9]+(/alternate/\d+)?$`)
-
-func TestAccACMECertificate_basic(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		CheckDestroy:      testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusRevoked),
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www", "www2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusValid),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_basic_revoke_reason(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		CheckDestroy:      testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusRevoked),
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateRevokeReasonConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www", "www2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusValid),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_CSR(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateCSRConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www3", "www4"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_CSR_PreferredChain(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateCSRConfigWithPreferredChain(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www3", "www4"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(alternateIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_forceRenewal(t *testing.T) {
-	wantEnv := os.Environ()
-	var certURL string
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateForceRenewalConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					func(s *terraform.State) error {
-						certURL = s.RootModule().Resources["acme_certificate.certificate"].Primary.Attributes["certificate_url"]
-						return nil
-					},
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www6", ""),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-				ExpectNonEmptyPlan: true,
-			},
-			{
-				Config: testAccACMECertificateForceRenewalConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					func(s *terraform.State) error {
-						if certURL == s.Modules[0].Resources["acme_certificate.certificate"].Primary.Attributes["certificate_url"] {
-							return errors.New("certificate URL did not change")
-						}
-
-						return nil
-					},
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www6", ""),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-				ExpectNonEmptyPlan: true,
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_wildcard(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateWildcardConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "*", ""),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_p12Password(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigP12Password("changeit"),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www12", "www13"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-			{
-				Config: testAccACMECertificateConfigP12Password("changeitagain"),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www12", "www13"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_preCheckDelay(t *testing.T) {
-	wantEnv := os.Environ()
-	var step1Start, step1End, step2Start, step2End time.Time
-	const delay = 15
-
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				PreConfig: func() { step1Start = time.Now() },
-				Config:    testAccACMECertificateConfigPreCheckDelay(0),
-				Check: resource.ComposeTestCheckFunc(
-					func(_ *terraform.State) error {
-						step1End = time.Now()
-						return nil
-					},
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www16", "www17"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-			{
-				Config:  testAccACMECertificateConfigPreCheckDelay(0),
-				Destroy: true,
-			},
-			{
-				PreConfig: func() { step2Start = time.Now() },
-				Config:    testAccACMECertificateConfigPreCheckDelay(delay),
-				Check: resource.ComposeTestCheckFunc(
-					func(_ *terraform.State) error {
-						step2End = time.Now()
-						step1Elapsed := step1End.Sub(step1Start)
-						step2Elapsed := step2End.Sub(step2Start)
-
-						// Approximate the actual delay and expect some margin of
-						// error, since it's pretty much guaranteed that the
-						// elapsed time is not going to be exact, to the tune of
-						// seconds on part of caching/etc.
-						//
-						// Additionally, we need to multiply the configured delay
-						// by the number of domains we're actually configuring
-						// challenges for.
-						const deltaThreshold = 10
-
-						expectedDelay := delay * 2
-						actualDelay := int((step2Elapsed - step1Elapsed) / time.Second)
-						delayDelta := expectedDelay - actualDelay
-						if delayDelta > deltaThreshold || delayDelta < -deltaThreshold {
-							return fmt.Errorf(
-								"delta too large between standard and pre-check delay applies; expected %ds, got approx. %ds", expectedDelay, actualDelay)
-						}
-
-						return nil
-					},
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "www16", "www17"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_duplicateDomain(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigDuplicateDomain(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-dupe", "test-dupe"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_preferredChain(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigPreferredChain(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-preferred", "test-preferred2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(alternateIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_http(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigHTTP(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-http", "test-http2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_httpWebroot(t *testing.T) {
-	wantEnv := os.Environ()
-	closeServer, serverDir, err := testAccCheckACMECertificateWebrootTestServer()
-	if err != nil {
-		panic(fmt.Errorf("TestAccACMECertificate_httpWebroot: %s", err))
-	}
-	defer closeServer()
-
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigHTTPWebroot(serverDir),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-webroot", "test-webroot2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_httpMemcache(t *testing.T) {
-	wantEnv := os.Environ()
-	closeServer, err := testAccCheckACMECertificateMemcacheTestServer()
-	if err != nil {
-		panic(fmt.Errorf("TestAccACMECertificate_httpMemcache: %s", err))
-	}
-	defer closeServer()
-
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigHTTPMemcache(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-webroot", "test-webroot2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_httpS3(t *testing.T) {
-	testAccACMECertificate_httpS3_preCheck(t)
-
-	wantEnv := os.Environ()
-	s3_bucket := os.Getenv("ACME_S3_BUCKET")
-	awsRegion := os.Getenv("AWS_REGION")
-	closeServer, err := testAccCheckACMECertificateS3ProxyTestServer(s3_bucket, awsRegion)
-	if err != nil {
-		t.Fatalf("TestAccACMECertificate_S3httpProxy: %s", err)
-	}
-	defer closeServer()
-
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigHTTPS3(s3_bucket),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-s3", "test-s32"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func testAccACMECertificate_httpS3_preCheck(t *testing.T) {
-	t.Helper()
-
-	if os.Getenv("ACME_S3_BUCKET") == "" {
-		t.Skip("ACME_S3_BUCKET must be set for the HTTP S3 challenge acceptance test")
-	}
-
-	if os.Getenv("AWS_PROFILE") == "" {
-		if os.Getenv("AWS_ACCESS_KEY_ID") == "" {
-			t.Skip("AWS_ACCESS_KEY_ID must be set for the HTTP S3 challenge acceptance test")
-		}
-		if os.Getenv("AWS_SECRET_ACCESS_KEY") == "" {
-			t.Skip("AWS_SECRET_ACCESS_KEY must be set for the HTTP S3 challenge acceptance test")
-		}
-	}
-
-	if os.Getenv("AWS_REGION") == "" {
-		t.Skip("AWS_REGION must be set for the HTTP S3 challenge acceptance test")
-	}
-}
-
-func TestAccACMECertificate_httpProxy(t *testing.T) {
-	wantEnv := os.Environ()
-	closeServer, err := testAccCheckACMECertificateProxyTestServer()
-	if err != nil {
-		panic(fmt.Errorf("TestAccACMECertificate_httpProxy: %s", err))
-	}
-	defer closeServer()
-
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigHTTPProxy(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-proxy", "test-proxy2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_tls(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigTLS(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-tls", "test-tls2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMECertificate_noRevoke(t *testing.T) {
-	wantEnv := os.Environ()
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		CheckDestroy:      testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusValid),
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMECertificateConfigNoRevoke(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "id", uuidRegexp),
-					resource.TestMatchResourceAttr("acme_certificate.certificate", "certificate_url", certURLRegexp),
-					testAccCheckACMECertificateValid("acme_certificate.certificate", "test-no-revoke", "test-no-revoke2"),
-					testAccCheckACMECertificateIntermediateEqual("acme_certificate.certificate", getPebbleCertificate(mainIntermediateURL)),
-					testAccCheckACMECertificateStatus("acme_certificate.certificate", certificateStatusValid),
-					testAccCheckEnvironNotChanged(wantEnv),
-				),
-			},
-		},
-	})
-}
-
-func testAccCheckACMECertificateValid(n, cn, san string) resource.TestCheckFunc {
-	return func(s *terraform.State) error {
-		rs, ok := s.RootModule().Resources[n]
-		if !ok {
-			return fmt.Errorf("Can't find ACME certificate: %s", n)
-		}
-
-		if rs.Primary.ID == "" {
-			return fmt.Errorf("ACME certificate ID not set")
-		}
-
-		cert := rs.Primary.Attributes["certificate_pem"]
-		issuer := rs.Primary.Attributes["issuer_pem"]
-		key := rs.Primary.Attributes["private_key_pem"]
-		x509Certs, err := parsePEMBundle([]byte(cert))
-		if err != nil {
-			return err
-		}
-		x509Cert := x509Certs[0]
-
-		issuerCerts, err := parsePEMBundle([]byte(issuer))
-		if err != nil {
-			return err
-		}
-		issuerCert := issuerCerts[0]
-
-		// Skip the private key test if we have an empty key. This is a legit case
-		// that comes up when a CSR is supplied instead of creating a cert from
-		// scratch.
-		if key != "" {
-			privateKey, err := privateKeyFromPEM([]byte(key))
-			if err != nil {
-				return err
-			}
-
-			var privPub crypto.PublicKey
-
-			switch v := privateKey.(type) {
-			case *rsa.PrivateKey:
-				privPub = v.Public()
-			case *ecdsa.PrivateKey:
-				privPub = v.Public()
-			}
-
-			if reflect.DeepEqual(x509Cert.PublicKey, privPub) != true {
-				return fmt.Errorf("Public key for cert and private key don't match: %#v, %#v", x509Cert.PublicKey, privPub)
-			}
-
-			// Test PKCS12, which is only present if there's a private key.
-			if err := testFindPEMInP12(
-				[]byte(rs.Primary.Attributes["certificate_p12"]),
-				rs.Primary.Attributes["certificate_p12_password"],
-				[]byte(cert),
-				[]byte(issuer),
-				[]byte(key),
-			); err != nil {
-				return fmt.Errorf("error validating P12 certificates: %s", err)
-			}
-		}
-
-		// Ensure the issuer cert is a CA cert
-		if issuerCert.IsCA == false {
-			return fmt.Errorf("issuer_pem is not a CA certificate")
-		}
-
-		// domains
-		domain := "." + pebbleCertDomain
-		expectedCN := cn + domain
-		var expectedSANs []string
-		if san != "" && cn != san {
-			expectedSANs = []string{cn + domain, san + domain}
-		} else {
-			expectedSANs = []string{cn + domain}
-		}
-
-		actualCN := x509Cert.Subject.CommonName
-		actualSANs := x509Cert.DNSNames
-
-		if expectedCN != actualCN {
-			return fmt.Errorf("Expected common name to be %s, got %s", expectedCN, actualCN)
-		}
-
-		if reflect.DeepEqual(expectedSANs, actualSANs) != true {
-			return fmt.Errorf("Expected SANs to be %#v, got %#v", expectedSANs, actualSANs)
-		}
-
-		// Expiry
-		actualNotAfter := rs.Primary.Attributes["certificate_not_after"]
-		expectedNotAfter := x509Cert.NotAfter.Format(time.RFC3339)
-		if expectedNotAfter != actualNotAfter {
-			return fmt.Errorf("expected certificate_not_after to be %q, got %q", expectedNotAfter, actualNotAfter)
-		}
-
-		return nil
-	}
-}
-
-// testFindPEMInP12 tries to find the supplied PEM blocks in the supplied
-// base64-encoded P12 content.
-func testFindPEMInP12(pfxB64 []byte, password string, expected ...[]byte) error {
-	pfxData := make([]byte, base64.StdEncoding.DecodedLen(len(pfxB64)))
-	nBytes, err := base64.StdEncoding.Decode(pfxData, pfxB64)
-	if err != nil {
-		return err
-	}
-
-	// TODO: fix the ToPEM deprecation notice
-	actualBlocks, err := pkcs12.ToPEM(pfxData[:nBytes], password) //nolint:staticcheck
-	if err != nil {
-		return err
-	}
-
-	var expectedBlocks []*pem.Block
-	for i, data := range expected {
-		block, _ := pem.Decode(data)
-		if block == nil {
-			return fmt.Errorf("bad PEM data in expected block %d", i)
-		}
-
-		expectedBlocks = append(expectedBlocks, block)
-	}
-
-	for i := 0; i < len(expectedBlocks); i++ {
-		expected := expectedBlocks[i]
-		for _, actual := range actualBlocks {
-			if reflect.DeepEqual(expected.Bytes, actual.Bytes) {
-				expectedBlocks = append(expectedBlocks[:i], expectedBlocks[i+1:]...)
-				i--
-			}
-		}
-	}
-
-	if len(expectedBlocks) > 0 {
-		return fmt.Errorf(
-			"not all expected blocks were found in the PFX archive (remaining: %d, %d in archive)",
-			len(expectedBlocks),
-			len(actualBlocks),
-		)
-	}
-
-	return nil
-}
-
-func testAccCheckACMECertificateIntermediateEqual(name string, expected *x509.Certificate) resource.TestCheckFunc {
-	return func(s *terraform.State) error {
-		rs, ok := s.RootModule().Resources[name]
-		if !ok {
-			return fmt.Errorf("Can't find ACME certificate: %s", name)
-		}
-
-		issuer := rs.Primary.Attributes["issuer_pem"]
-		issuerCerts, err := parsePEMBundle([]byte(issuer))
-		if err != nil {
-			return err
-		}
-		actual := issuerCerts[0]
-
-		if !expected.Equal(actual) {
-			return fmt.Errorf("certificate mismatch: expected issuer %q, actual %q", expected.Issuer.CommonName, actual.Issuer.CommonName)
-		}
-
-		return nil
-	}
-}
-
-func testAccCheckACMECertificateWebrootTestServer() (func(), string, error) {
-	dir, err := os.MkdirTemp(os.TempDir(), "terraform-provider-acme-test-webroot")
-	if err != nil {
-		return nil, "", err
-	}
-
-	// Would use httptest here, but this ensures we don't have to mess with the
-	// default listener that would normally be crated by httptest to ensure it
-	// goes to the correct place, since we need to set this to 5002.
-	server := &http.Server{
-		Addr:    ":5002",
-		Handler: http.FileServer(http.Dir(dir)),
-	}
-	go server.ListenAndServe()
-	return func() {
-		ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
-		defer cancel()
-		server.Shutdown(ctx)
-		os.RemoveAll(dir)
-	}, dir, nil
-}
-
-func testAccCheckACMECertificateMemcacheTestServer() (func(), error) {
-	mux := http.NewServeMux()
-	mux.HandleFunc("/.well-known/acme-challenge/", func(w http.ResponseWriter, r *http.Request) {
-		client, err := memcache.New(memcacheHost)
-		if err != nil {
-			http.Error(w, fmt.Sprintf("memcached connect: %s", err), http.StatusBadRequest)
-			return
-		}
-
-		item, err := client.Get(r.URL.Path)
-		if err != nil {
-			http.Error(w, fmt.Sprintf("memcached get: %s", err), http.StatusBadRequest)
-			return
-		}
-
-		w.Write(item.Value)
-	})
-
-	server := &http.Server{
-		Addr:    ":5002",
-		Handler: mux,
-	}
-	go server.ListenAndServe()
-	return func() {
-		ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
-		defer cancel()
-		server.Shutdown(ctx)
-	}, nil
-}
-
-func testAccCheckACMECertificateProxyTestServer() (func(), error) {
-	target, err := url.Parse("http://localhost:5502")
-	if err != nil {
-		panic(err) // No real reason to return an actual error here
-	}
-
-	proxy := httputil.NewSingleHostReverseProxy(target)
-	defaultDirector := proxy.Director
-	proxy.Director = func(r *http.Request) {
-		r.Header.Add("Forwarded", "host="+strings.Split(r.Host, ":")[0])
-		defaultDirector(r)
-	}
-
-	server := &http.Server{
-		Addr:    ":5002",
-		Handler: proxy,
-	}
-	go server.ListenAndServe()
-	return func() {
-		ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
-		defer cancel()
-		server.Shutdown(ctx)
-	}, nil
-}
-
-func testAccCheckACMECertificateS3ProxyTestServer(s3Bucket string, awsRegion string) (func(), error) {
-	target := fmt.Sprintf("%s.s3.%s.amazonaws.com", s3Bucket, awsRegion)
-
-	proxy := &httputil.ReverseProxy{
-		Director: func(req *http.Request) {
-			req.URL.Scheme = "https"
-			req.URL.Host = target
-			req.Host = target
-		},
-	}
-
-	server := &http.Server{
-		Addr:    ":5002",
-		Handler: proxy,
-	}
-	go server.ListenAndServe()
-
-	return func() {
-		ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
-		defer cancel()
-		server.Shutdown(ctx)
-	}, nil
-}
-
-func testAccCheckACMECertificateStatus(name, expected string) resource.TestCheckFunc {
-	return func(s *terraform.State) error {
-		rs, ok := s.RootModule().Resources[name]
-		if !ok {
-			return fmt.Errorf("Can't find ACME certificate: %s", name)
-		}
-
-		certPem := rs.Primary.Attributes["certificate_pem"]
-		certs, err := parsePEMBundle([]byte(certPem))
-		if err != nil {
-			return err
-		}
-		cert := certs[0]
-		actual := getStatusForCertificate(cert)
-
-		if expected != actual {
-			return fmt.Errorf("subject=%s serial=%x, expected status %q, actual %q", cert.Subject, cert.SerialNumber.Int64(), expected, actual)
-		}
-
-		return nil
-	}
-}
-
-func testAccCheckEnvironNotChanged(want []string) resource.TestCheckFunc {
-	// Make an ignore func that allows us to ignore a few things that seem to
-	// get added by TF testing after we take an environment snapshot.
-	ignoreFunc := func(s string) bool {
-		ignoreList := []string{
-			"PLUGIN_PROTOCOL_VERSIONS",
-			"CHECKPOINT_DISABLE",
-		}
-		for _, v := range ignoreList {
-			if strings.HasPrefix(s, v+"=") {
-				return true
-			}
-		}
-
-		return false
-	}
-	return func(_ *terraform.State) error {
-		if diff := cmp.Diff(want, os.Environ(), cmpopts.IgnoreSliceElements(ignoreFunc)); diff != "" {
-			return fmt.Errorf("environment altered but should not have been (-want +got):\n%s", diff)
-		}
-
-		return nil
-	}
-}
-
-func testAccACMECertificateConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "www.${var.domain}"
-  subject_alternative_names = ["www2.${var.domain}"]
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateRevokeReasonConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "www.${var.domain}"
-  subject_alternative_names = ["www2.${var.domain}"]
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  revoke_certificate_reason = "superseded"
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateCSRConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "reg_private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.reg_private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "tls_private_key" "cert_private_key" {
-  algorithm = "RSA"
-}
-
-resource "tls_cert_request" "req" {
-  private_key_pem = "${tls_private_key.cert_private_key.private_key_pem}"
-  dns_names       = ["www3.${var.domain}", "www4.${var.domain}"]
-
-  subject {
-    common_name  = "www3.${var.domain}"
-  }
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem         = "${acme_registration.reg.account_key_pem}"
-  certificate_request_pem = "${tls_cert_request.req.cert_request_pem}"
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateCSRConfigWithPreferredChain() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "reg_private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.reg_private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "tls_private_key" "cert_private_key" {
-  algorithm = "RSA"
-}
-
-resource "tls_cert_request" "req" {
-  private_key_pem = "${tls_private_key.cert_private_key.private_key_pem}"
-  dns_names       = ["www3.${var.domain}", "www4.${var.domain}"]
-
-  subject {
-    common_name  = "www3.${var.domain}"
-  }
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem         = "${acme_registration.reg.account_key_pem}"
-	certificate_request_pem = "${tls_cert_request.req.cert_request_pem}"
-
-  recursive_nameservers        = ["%s"]
-	disable_complete_propagation = true
-	preferred_chain = "%s"
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		getPebbleCertificateIssuer(alternateIntermediateURL),
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateForceRenewalConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem    = "${acme_registration.reg.account_key_pem}"
-  common_name        = "www6.${var.domain}"
-  min_days_remaining = 18250
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateWildcardConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem = "${acme_registration.reg.account_key_pem}"
-  common_name     = "*.${var.domain}"
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateConfigP12Password(password string) string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-variable "password" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "www12.${var.domain}"
-  subject_alternative_names = ["www13.${var.domain}"]
-  certificate_p12_password  = "${var.password}"
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		password,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateConfigPreCheckDelay(delay int) string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "www16.${var.domain}"
-  subject_alternative_names = ["www17.${var.domain}"]
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-  pre_check_delay              = %d
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		delay,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateConfigDuplicateDomain() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-dupe.${var.domain}"
-  subject_alternative_names = ["test-dupe.${var.domain}"]
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateConfigPreferredChain() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-preferred.${var.domain}"
-  subject_alternative_names = ["test-preferred2.${var.domain}"]
-
-  recursive_nameservers        = ["%s"]
-  disable_complete_propagation = true
-  preferred_chain = "%s"
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		getPebbleCertificateIssuer(alternateIntermediateURL),
-		pebbleChallTestDNSScriptPath,
-	)
-}
-
-func testAccACMECertificateConfigHTTP() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-http.${var.domain}"
-  subject_alternative_names = ["test-http2.${var.domain}"]
-
-  http_challenge {
-    port = 5002
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-	)
-}
-
-func testAccACMECertificateConfigHTTPWebroot(dir string) string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-webroot.${var.domain}"
-  subject_alternative_names = ["test-webroot2.${var.domain}"]
-
-  http_webroot_challenge {
-    directory = "%s"
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		dir,
-	)
-}
-
-func testAccACMECertificateConfigHTTPMemcache() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-webroot.${var.domain}"
-  subject_alternative_names = ["test-webroot2.${var.domain}"]
-
-  http_memcached_challenge {
-    hosts = ["%s"]
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		memcacheHost,
-	)
-}
-
-func testAccACMECertificateConfigHTTPS3(bucket string) string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-s3.${var.domain}"
-  subject_alternative_names = ["test-s32.${var.domain}"]
-
-  http_s3_challenge {
-    s3_bucket = "%s"
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		bucket,
-	)
-}
-
-func testAccACMECertificateConfigHTTPProxy() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-proxy.${var.domain}"
-  subject_alternative_names = ["test-proxy2.${var.domain}"]
-
-  http_challenge {
-    port         = 5502
-    proxy_header = "Forwarded"
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-	)
-}
-
-func testAccACMECertificateConfigTLS() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "${var.email_address}"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = "${acme_registration.reg.account_key_pem}"
-  common_name               = "test-tls.${var.domain}"
-  subject_alternative_names = ["test-tls2.${var.domain}"]
-
-  tls_challenge {
-    port = 5001
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-	)
-}
-
-func testAccACMECertificateConfigNoRevoke() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-variable "email_address" {
-  default = "nobody@%s"
-}
-
-variable "domain" {
-  default = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = tls_private_key.private_key.private_key_pem
-  email_address   = var.email_address
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = acme_registration.reg.account_key_pem
-  common_name               = "test-no-revoke.${var.domain}"
-  subject_alternative_names = ["test-no-revoke2.${var.domain}"]
-
-  recursive_nameservers         = ["%s"]
-  disable_complete_propagation  = true
-  revoke_certificate_on_destroy = false
-
-  dns_challenge {
-    provider = "exec"
-    config = {
-      EXEC_PATH = "%s"
-    }
-  }
-}
-`, pebbleDirBasic,
-		pebbleCertDomain,
-		pebbleCertDomain,
-		pebbleChallTestDNSSrv,
-		pebbleChallTestDNSScriptPath,
-	)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/resource_acme_registration.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_registration.go
--- ./vancluever/v2.21.0/acme/resource_acme_registration.go	2024-04-26 18:07:52.556297833 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_registration.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,179 +0,0 @@
-package acme
-
-import (
-	"github.com/cenkalti/backoff/v4"
-	"github.com/go-acme/lego/v4/acme"
-	"github.com/go-acme/lego/v4/registration"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-)
-
-// resourceACMERegistration returns the current version of the
-// acme_registration resource and needs to be updated when the schema
-// version is incremented.
-func resourceACMERegistration() *schema.Resource { return resourceACMERegistrationV1() }
-
-func resourceACMERegistrationV1() *schema.Resource {
-	return &schema.Resource{
-		Create:        resourceACMERegistrationCreate,
-		Read:          resourceACMERegistrationRead,
-		Delete:        resourceACMERegistrationDelete,
-		MigrateState:  resourceACMERegistrationMigrateState,
-		SchemaVersion: 1,
-		Schema: map[string]*schema.Schema{
-			"account_key_pem": {
-				Type:      schema.TypeString,
-				Required:  true,
-				ForceNew:  true,
-				Sensitive: true,
-			},
-			"email_address": {
-				Type:     schema.TypeString,
-				Required: true,
-				ForceNew: true,
-			},
-			"external_account_binding": {
-				Type:     schema.TypeList,
-				Optional: true,
-				MaxItems: 1,
-				ForceNew: true,
-				Elem: &schema.Resource{
-					Schema: map[string]*schema.Schema{
-						"key_id": {
-							Type:      schema.TypeString,
-							Required:  true,
-							Sensitive: true,
-							ForceNew:  true,
-						},
-						"hmac_base64": {
-							Type:      schema.TypeString,
-							Required:  true,
-							Sensitive: true,
-							ForceNew:  true,
-						},
-					},
-				},
-			},
-			"registration_url": {
-				Type:     schema.TypeString,
-				Computed: true,
-			},
-		},
-		Timeouts: &schema.ResourceTimeout{
-			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
-			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
-		},
-	}
-}
-
-func resourceACMERegistrationCreate(d *schema.ResourceData, meta interface{}) error {
-	// register and agree to the TOS
-	client, _, err := expandACMEClient(d, meta, false)
-	if err != nil {
-		return err
-	}
-
-	var reg *registration.Resource
-	// If EAB was enabled, register using EAB.
-	registerAccount := func() error {
-		if v, ok := d.GetOk("external_account_binding"); ok {
-			reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
-				TermsOfServiceAgreed: true,
-				Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
-				HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
-			})
-		} else {
-			// Normal registration.
-			reg, err = client.Registration.Register(registration.RegisterOptions{
-				TermsOfServiceAgreed: true,
-			})
-		}
-		if err != nil {
-			if isAbleToRetry(err.Error()) {
-				return err
-			} else {
-				return backoff.Permanent(err)
-			}
-		}
-		return nil
-	}
-	reconnectBackoff := backoff.NewExponentialBackOff()
-	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-	err = backoff.Retry(registerAccount, reconnectBackoff)
-
-	_, user, err := expandACMEClient(d, meta, true)
-
-	if err != nil {
-		return err
-	}
-
-	// save the reg
-	d.SetId(reg.URI)
-	return saveACMERegistration(d, user.Registration)
-}
-
-func resourceACMERegistrationRead(d *schema.ResourceData, meta interface{}) error {
-	_, user, err := expandACMEClient(d, meta, true)
-	if err != nil {
-		if regGone(err) {
-			d.SetId("")
-			return nil
-		}
-
-		return err
-	}
-
-	// save the reg
-	return saveACMERegistration(d, user.Registration)
-}
-
-func resourceACMERegistrationDelete(d *schema.ResourceData, meta interface{}) error {
-	client, _, err := expandACMEClient(d, meta, true)
-	if err != nil {
-		return err
-	}
-
-	deleteRegistration := func() error {
-		err := client.Registration.DeleteRegistration()
-		if err != nil {
-			if isAbleToRetry(err.Error()) {
-				return err
-			} else {
-				return backoff.Permanent(err)
-			}
-		}
-		return nil
-	}
-	reconnectBackoff := backoff.NewExponentialBackOff()
-	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
-	err = backoff.Retry(deleteRegistration, reconnectBackoff)
-	if err != nil {
-		return err
-	}
-
-	return nil
-}
-
-func regGone(err error) bool {
-	e, ok := err.(*acme.ProblemDetails)
-	if !ok {
-		return false
-	}
-
-	switch {
-	case e.HTTPStatus == 400 && e.Type == "urn:ietf:params:acme:error:accountDoesNotExist":
-		// As per RFC8555, see: no account exists when onlyReturnExisting
-		// is set to true.
-		return true
-
-	case e.HTTPStatus == 403 && e.Type == "urn:ietf:params:acme:error:unauthorized":
-		// Usually happens when the account has been deactivated. The URN
-		// is a bit general for my liking, but it should be fine given
-		// the specific nature of the request this error would be
-		// returned for.
-		return true
-	}
-
-	return false
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/acme/resource_acme_registration_test.go ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_registration_test.go
--- ./vancluever/v2.21.0/acme/resource_acme_registration_test.go	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/acme/resource_acme_registration_test.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,205 +0,0 @@
-package acme
-
-import (
-	"fmt"
-	"testing"
-
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
-)
-
-func TestAccACMERegistration_basic(t *testing.T) {
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		CheckDestroy:      testAccCheckACMERegistrationValid("acme_registration.reg", false, pebbleDirBasic),
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMERegistrationConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestCheckResourceAttrPair(
-						"acme_registration.reg", "id",
-						"acme_registration.reg", "registration_url",
-					),
-					testAccCheckACMERegistrationValid("acme_registration.reg", true, pebbleDirBasic),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMERegistration_eab(t *testing.T) {
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		CheckDestroy:      testAccCheckACMERegistrationValid("acme_registration.reg", false, pebbleDirEAB),
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMERegistrationConfigEAB(),
-				Check: resource.ComposeTestCheckFunc(
-					resource.TestCheckResourceAttrPair(
-						"acme_registration.reg", "id",
-						"acme_registration.reg", "registration_url",
-					),
-					testAccCheckACMERegistrationValid("acme_registration.reg", true, pebbleDirEAB),
-				),
-			},
-		},
-	})
-}
-
-func TestAccACMERegistration_refreshDeactivated(t *testing.T) {
-	var state *terraform.State
-	resource.Test(t, resource.TestCase{
-		ProviderFactories: testAccProviders,
-		ExternalProviders: testAccExternalProviders,
-		Steps: []resource.TestStep{
-			{
-				Config: testAccACMERegistrationConfig(),
-				Check: resource.ComposeTestCheckFunc(
-					func(s *terraform.State) error {
-						state = s
-						return nil
-					},
-					resource.TestCheckResourceAttrPair(
-						"acme_registration.reg", "id",
-						"acme_registration.reg", "registration_url",
-					),
-					testAccCheckACMERegistrationValid("acme_registration.reg", true, pebbleDirBasic),
-				),
-			},
-			{
-				PreConfig: func() {
-					rs := state.RootModule().Resources["acme_registration.reg"]
-					d := testAccCheckACMERegistrationResourceData(rs)
-					client, _, err := expandACMEClient(d, testAccProviderAcmeConfig(pebbleDirBasic), true)
-					if err != nil {
-						panic(err)
-					}
-
-					if err := client.Registration.DeleteRegistration(); err != nil {
-						panic(err)
-					}
-				},
-				Config:             testAccACMERegistrationConfig(),
-				PlanOnly:           true,
-				ExpectNonEmptyPlan: true,
-			},
-		},
-	})
-}
-
-func testAccCheckACMERegistrationValid(n string, exists bool, acmeServerUrl string) resource.TestCheckFunc {
-	return func(s *terraform.State) error {
-		rs, ok := s.RootModule().Resources[n]
-		if !ok {
-			if !exists {
-				// No state, but this is okay. The new TF SDK completely
-				// removes state for deleted resources before the destroy
-				// check runs, so we cannot do in-band verification of
-				// resource deletion. Normal patterns loop through state
-				// looking for resources, using a pattern like this:
-				//
-				// for _, rs := range s.RootModule().Resources {
-				//   if rs.Type != "example_widget" {
-				//     continue
-				//   }
-				//
-				//   ...
-				// }
-				//
-				// This pattern will completely miss the fact that the
-				// resource state doesn't exist at all, and return no error.
-				//
-				// TODO: Maybe put in a bug report for this and see if the
-				// SDK can be adjusted to allow for the passing in of
-				// pre-destroy state to see if we can assert the deletion of
-				// the resource from infrastructure, and not just TF state.
-				//
-				// Return nil to pass the test.
-				return nil
-			}
-
-			return fmt.Errorf("Can't find ACME registration: %s", n)
-		}
-
-		if rs.Primary.ID == "" {
-			return fmt.Errorf("ACME registration ID not set")
-		}
-
-		d := testAccCheckACMERegistrationResourceData(rs)
-
-		client, _, err := expandACMEClient(d, testAccProviderAcmeConfig(acmeServerUrl), true)
-		if err != nil {
-			if regGone(err) && !exists {
-				return nil
-			}
-			return fmt.Errorf("Could not build ACME client off reg: %s", err.Error())
-		}
-
-		reg, err := client.Registration.QueryRegistration()
-		if err != nil {
-			return fmt.Errorf("Error on reg query: %s", err.Error())
-		}
-
-		actual := reg.URI
-		expected := rs.Primary.ID
-
-		if actual != expected {
-			return fmt.Errorf("Expected ID to be %s, got %s", expected, actual)
-		}
-		return nil
-	}
-}
-
-// testAccCheckACMERegistrationResourceData returns a *schema.ResourceData that should match a
-// acme_registration resource.
-func testAccCheckACMERegistrationResourceData(rs *terraform.ResourceState) *schema.ResourceData {
-	r := resourceACMERegistration()
-	d := r.TestResourceData()
-
-	d.SetId(rs.Primary.ID)
-	d.Set("account_key_pem", rs.Primary.Attributes["account_key_pem"])
-	d.Set("email_address", rs.Primary.Attributes["email_address"])
-
-	return d
-}
-
-func testAccACMERegistrationConfig() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "nobody@example.test"
-}
-`, pebbleDirBasic)
-}
-
-func testAccACMERegistrationConfigEAB() string {
-	return fmt.Sprintf(`
-provider "acme" {
-  server_url = "%s"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = "${tls_private_key.private_key.private_key_pem}"
-  email_address   = "nobody@example.test"
-  external_account_binding {
-    key_id      = "kid-1"
-    hmac_base64 = "zWNDZM6eQGHWpSRTPal5eIUYFTu7EajVIoguysqZ9wG44nMEtx3MUAsUDkMTQ12W"
-  }
-}
-`, pebbleDirEAB)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-acme-dns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-acme-dns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-acme-dns.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-acme-dns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,55 +0,0 @@
----
-page_title: "acme-dns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Joohoi's ACME-DNS DNS Challenge Provider
-
-The `acme-dns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Joohoi's ACME-DNS](https://github.com/joohoi/acme-dns).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "acme-dns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ACME_DNS_API_BASE` - The ACME-DNS API address.
-* `ACME_DNS_STORAGE_PATH` - The ACME-DNS JSON account data file. A per-domain account will be registered/persisted to this file and used for TXT updates..
-
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-alidns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-alidns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-alidns.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-alidns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "alidns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Alibaba Cloud DNS DNS Challenge Provider
-
-The `alidns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Alibaba Cloud DNS](https://www.alibabacloud.com/product/dns).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "alidns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ALICLOUD_ACCESS_KEY` - Access key ID.
-* `ALICLOUD_RAM_ROLE` - Your instance RAM role (https://www.alibabacloud.com/help/doc-detail/54579.htm).
-* `ALICLOUD_SECRET_KEY` - Access Key secret.
-* `ALICLOUD_SECURITY_TOKEN` - STS Security Token (optional).
-
-* `ALICLOUD_HTTP_TIMEOUT` - API request timeout.
-* `ALICLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ALICLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `ALICLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-allinkl.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-allinkl.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-allinkl.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-allinkl.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "allinkl"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# all-inkl DNS Challenge Provider
-
-The `allinkl` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[all-inkl](https://all-inkl.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "allinkl"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ALL_INKL_LOGIN` - KAS login.
-* `ALL_INKL_PASSWORD` - KAS password.
-
-* `ALL_INKL_HTTP_TIMEOUT` - API request timeout.
-* `ALL_INKL_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ALL_INKL_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-arvancloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-arvancloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-arvancloud.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-arvancloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "arvancloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# ArvanCloud DNS Challenge Provider
-
-The `arvancloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[ArvanCloud](https://arvancloud.ir).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "arvancloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ARVANCLOUD_API_KEY` - API key.
-
-* `ARVANCLOUD_HTTP_TIMEOUT` - API request timeout.
-* `ARVANCLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ARVANCLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `ARVANCLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-auroradns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-auroradns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-auroradns.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-auroradns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "auroradns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Aurora DNS DNS Challenge Provider
-
-The `auroradns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Aurora DNS](https://www.pcextreme.com/dns-health-checks).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "auroradns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AURORA_API_KEY` - API key or username to used.
-* `AURORA_SECRET` - Secret password to be used.
-
-* `AURORA_ENDPOINT` - API endpoint URL.
-* `AURORA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `AURORA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `AURORA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-autodns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-autodns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-autodns.md	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-autodns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "autodns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Autodns DNS Challenge Provider
-
-The `autodns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Autodns](https://www.internetx.com/domains/autodns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "autodns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AUTODNS_API_PASSWORD` - User Password.
-* `AUTODNS_API_USER` - Username.
-
-* `AUTODNS_CONTEXT` - API context (4 for production, 1 for testing. Defaults to 4).
-* `AUTODNS_ENDPOINT` - API endpoint URL, defaults to https://api.autodns.com/v1/.
-* `AUTODNS_HTTP_TIMEOUT` - API request timeout, defaults to 30 seconds.
-* `AUTODNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `AUTODNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `AUTODNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-azuredns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-azuredns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-azuredns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-azuredns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,195 +0,0 @@
----
-page_title: "azuredns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Azure DNS DNS Challenge Provider
-
-The `azuredns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Azure DNS](https://azure.microsoft.com/services/dns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "azuredns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AZURE_CLIENT_CERTIFICATE_PATH` - Client certificate path.
-* `AZURE_CLIENT_ID` - Client ID.
-* `AZURE_CLIENT_SECRET` - Client secret.
-* `AZURE_RESOURCE_GROUP` - DNS zone resource group.
-* `AZURE_SUBSCRIPTION_ID` - DNS zone subscription ID.
-* `AZURE_TENANT_ID` - Tenant ID.
-
-* `AZURE_AUTH_METHOD` - Specify which authentication method to use.
-* `AZURE_AUTH_MSI_TIMEOUT` - Managed Identity timeout duration.
-* `AZURE_ENVIRONMENT` - Azure environment, one of: public, usgovernment, and china.
-* `AZURE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `AZURE_PRIVATE_ZONE` - Set to true to use Azure Private DNS Zones and not public.
-* `AZURE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `AZURE_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `AZURE_ZONE_NAME` - Zone name to use inside Azure DNS service to add the TXT record in.
-
-The following variables are **Terraform-specific** aliases for the above
-configuration values:
-
-
-* `ARM_CLIENT_ID` - alias for `AZURE_CLIENT_ID`.
-* `ARM_CLIENT_SECRET` - alias for `AZURE_CLIENT_SECRET`.
-* `ARM_RESOURCE_GROUP` - alias for `AZURE_RESOURCE_GROUP`.
-* `ARM_SUBSCRIPTION_ID` - alias for `AZURE_SUBSCRIPTION_ID`.
-* `ARM_TENANT_ID` - alias for `AZURE_TENANT_ID`.
-
-## Description
-
-Several authentication methods can be used to authenticate against Azure DNS API.
-
-### Default Azure Credentials (default option)
-
-Default Azure Credentials automatically detects in the following locations and prioritized in the following order:
-
-1. Environment variables for client secret: `AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, `AZURE_CLIENT_SECRET`
-2. Environment variables for client certificate: `AZURE_CLIENT_ID`, `AZURE_TENANT_ID`, `AZURE_CLIENT_CERTIFICATE_PATH`
-3. Workload identity for resources hosted in Azure environment (see below)
-4. Shared credentials (defaults to `~/.azure` folder), used by Azure CLI
-
-Link:
-- [Azure Authentication](https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication)
-
-### Environment variables
-
-#### Client secret
-
-The Azure Credentials can be configured using the following environment variables:
-* AZURE_CLIENT_ID = "Client ID"
-* AZURE_CLIENT_SECRET = "Client secret"
-* AZURE_TENANT_ID = "Tenant ID"
-
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `env`.
-
-#### Client certificate
-
-The Azure Credentials can be configured using the following environment variables:
-* AZURE_CLIENT_ID = "Client ID"
-* AZURE_CLIENT_CERTIFICATE_PATH = "Client certificate path"
-* AZURE_TENANT_ID = "Tenant ID"
-
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `env`.
-
-### Workload identity
-
-Workload identity allows workloads running Azure Kubernetes Services (AKS) clusters to authenticate as an Azure AD application identity using federated credentials.
-
-This must be configured in kubernetes workload deployment in one hand and on the Azure AD application registration in the other hand.
-
-Here is a summary of the steps to follow to use it :
-* create a `ServiceAccount` resource, add following annotations to reference the targeted Azure AD application registration : `azure.workload.identity/client-id` and `azure.workload.identity/tenant-id`.
-* on the `Deployment` resource you must reference the previous `ServiceAccount` and add the following label : `azure.workload.identity/use: "true"`.
-* create a fedreated credentials of type `Kubernetes accessing Azure resources`, add the cluster issuer URL  and add the namespace and name of your kubernetes service account.
-
-Link :
-- [Azure AD Workload identity](https://azure.github.io/azure-workload-identity/docs/topics/service-account-labels-and-annotations.html)
-
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `wli`.
-
-### Azure Managed Identity
-
-#### Azure Managed Identity (with Azure workload)
-
-The Azure Managed Identity service allows linking Azure AD identities to Azure resources, without needing to manually manage client IDs and secrets.
-
-Workloads with a Managed Identity can manage their own certificates, with permissions on specific domain names set using IAM assignments.
-For this to work, the Managed Identity requires the **Reader** role on the target DNS Zone,
-and the **DNS Zone Contributor** on the relevant `_acme-challenge` TXT records.
-
-For example, to allow a Managed Identity to create a certificate for "fw01.lab.example.com", using Azure CLI:
-
-```bash
-export AZURE_SUBSCRIPTION_ID="00000000-0000-0000-0000-000000000000"
-export AZURE_RESOURCE_GROUP="rg1"
-export SERVICE_PRINCIPAL_ID="00000000-0000-0000-0000-000000000000"
-
-export AZURE_DNS_ZONE="lab.example.com"
-export AZ_HOSTNAME="fw01"
-export AZ_RECORD_SET="_acme-challenge.${AZ_HOSTNAME}"
-
-az role assignment create \
---assignee "${SERVICE_PRINCIPAL_ID}" \
---role "Reader" \
---scope "/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP}/providers/Microsoft.Network/dnszones/${AZURE_DNS_ZONE}"
-
-az role assignment create \
---assignee "${SERVICE_PRINCIPAL_ID}" \
---role "DNS Zone Contributor" \
---scope "/subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP}/providers/Microsoft.Network/dnszones/${AZURE_DNS_ZONE}/TXT/${AZ_RECORD_SET}"
-```
-
-A timeout wrapper is configured for this authentication method.
-The duraction can be configured by setting the `AZURE_AUTH_MSI_TIMEOUT`.
-The default timeout is 2 seconds.
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `msi`.
-
-#### Azure Managed Identity (with Azure Arc)
-
-The Azure Arc agent provides the ability to use a Managed Identity on resources hosted outside of Azure
-(such as on-prem virtual machines, or VMs in another cloud provider).
-
-While the upstream `azidentity` SDK will try to automatically identify and use the Azure Arc metadata service,
-if you get `azuredns: DefaultAzureCredential: failed to acquire a token.` error messages,
-you may need to set the environment variables:
-* `IMDS_ENDPOINT=http://localhost:40342`
-* `IDENTITY_ENDPOINT=http://localhost:40342/metadata/identity/oauth2/token`
-
-A timeout wrapper is configured for this authentication method.
-The duraction can be configured by setting the `AZURE_AUTH_MSI_TIMEOUT`.
-The default timeout is 2 seconds.
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `msi`.
-
-### Azure CLI
-
-The Azure CLI is a command-line tool provided by Microsoft to interact with Azure resources.
-It provides an easy way to authenticate by simply running `az login` command.
-The generated token will be cached by default in the `~/.azure` folder.
-
-This authentication method can be specificaly used by setting the `AZURE_AUTH_METHOD` environment variable to `cli`.
-
-### Open ID Connect
-
-Open ID Connect is a mechanism that establish a trust relationship between a running environment and the Azure AD identity provider.
-It can be enabled by setting the `AZURE_AUTH_METHOD` environment variable to `oidc`.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-azure.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-azure.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-azure.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-azure.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,76 +0,0 @@
----
-page_title: "azure"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Azure (deprecated) DNS Challenge Provider
-
-The `azure` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Azure (deprecated)](https://azure.microsoft.com/services/dns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "azure"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AZURE_CLIENT_ID` - Client ID.
-* `AZURE_CLIENT_SECRET` - Client secret.
-* `AZURE_ENVIRONMENT` - Azure environment, one of: public, usgovernment, german, and china.
-* `AZURE_RESOURCE_GROUP` - Resource group.
-* `AZURE_SUBSCRIPTION_ID` - Subscription ID.
-* `AZURE_TENANT_ID` - Tenant ID.
-* `instance metadata service` - If the credentials are **not** set via the environment, then it will attempt to get a bearer token via the [instance metadata service](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service)..
-
-* `AZURE_METADATA_ENDPOINT` - Metadata Service endpoint URL.
-* `AZURE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `AZURE_PRIVATE_ZONE` - Set to true to use Azure Private DNS Zones and not public.
-* `AZURE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `AZURE_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `AZURE_ZONE_NAME` - Zone name to use inside Azure DNS service to add the TXT record in.
-
-The following variables are **Terraform-specific** aliases for the above
-configuration values:
-
-
-* `ARM_CLIENT_ID` - alias for `AZURE_CLIENT_ID`.
-* `ARM_CLIENT_SECRET` - alias for `AZURE_CLIENT_SECRET`.
-* `ARM_RESOURCE_GROUP` - alias for `AZURE_RESOURCE_GROUP`.
-* `ARM_SUBSCRIPTION_ID` - alias for `AZURE_SUBSCRIPTION_ID`.
-* `ARM_TENANT_ID` - alias for `AZURE_TENANT_ID`.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-bindman.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bindman.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-bindman.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bindman.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,57 +0,0 @@
----
-page_title: "bindman"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Bindman DNS Challenge Provider
-
-The `bindman` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Bindman](https://github.com/labbsr0x/bindman-dns-webhook).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "bindman"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `BINDMAN_MANAGER_ADDRESS` - The server URL, should have scheme, hostname, and port (if required) of the Bindman-DNS Manager server.
-
-* `BINDMAN_HTTP_TIMEOUT` - API request timeout.
-* `BINDMAN_POLLING_INTERVAL` - Time between DNS propagation check.
-* `BINDMAN_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-bluecat.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bluecat.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-bluecat.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bluecat.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "bluecat"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Bluecat DNS Challenge Provider
-
-The `bluecat` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Bluecat](https://www.bluecatnetworks.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "bluecat"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `BLUECAT_CONFIG_NAME` - Configuration name.
-* `BLUECAT_DNS_VIEW` - External DNS View Name.
-* `BLUECAT_PASSWORD` - API password.
-* `BLUECAT_SERVER_URL` - The server URL, should have scheme, hostname, and port (if required) of the authoritative Bluecat BAM serve.
-* `BLUECAT_USER_NAME` - API username.
-
-* `BLUECAT_HTTP_TIMEOUT` - API request timeout.
-* `BLUECAT_POLLING_INTERVAL` - Time between DNS propagation check.
-* `BLUECAT_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `BLUECAT_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-brandit.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-brandit.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-brandit.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-brandit.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "brandit"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Brandit DNS Challenge Provider
-
-The `brandit` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Brandit](https://www.brandit.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "brandit"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `BRANDIT_API_KEY` - The API key.
-* `BRANDIT_API_USERNAME` - The API username.
-
-* `BRANDIT_HTTP_TIMEOUT` - API request timeout.
-* `BRANDIT_POLLING_INTERVAL` - Time between DNS propagation check.
-* `BRANDIT_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `BRANDIT_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-bunny.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bunny.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-bunny.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-bunny.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,57 +0,0 @@
----
-page_title: "bunny"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Bunny DNS Challenge Provider
-
-The `bunny` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Bunny](https://bunny.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "bunny"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `BUNNY_API_KEY` - API key.
-
-* `BUNNY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `BUNNY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `BUNNY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-checkdomain.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-checkdomain.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-checkdomain.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-checkdomain.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "checkdomain"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Checkdomain DNS Challenge Provider
-
-The `checkdomain` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Checkdomain](https://checkdomain.de/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "checkdomain"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CHECKDOMAIN_TOKEN` - API token.
-
-* `CHECKDOMAIN_ENDPOINT` - API endpoint URL, defaults to https://api.checkdomain.de.
-* `CHECKDOMAIN_HTTP_TIMEOUT` - API request timeout, defaults to 30 seconds.
-* `CHECKDOMAIN_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CHECKDOMAIN_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CHECKDOMAIN_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-civo.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-civo.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-civo.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-civo.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,57 +0,0 @@
----
-page_title: "civo"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Civo DNS Challenge Provider
-
-The `civo` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Civo](https://civo.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "civo"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CIVO_TOKEN` - Authentication token.
-
-* `CIVO_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CIVO_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CIVO_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-clouddns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-clouddns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-clouddns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-clouddns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "clouddns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# CloudDNS DNS Challenge Provider
-
-The `clouddns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[CloudDNS](https://vshosting.eu/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "clouddns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CLOUDDNS_CLIENT_ID` - Client ID.
-* `CLOUDDNS_EMAIL` - Account email.
-* `CLOUDDNS_PASSWORD` - Account password.
-
-* `CLOUDDNS_HTTP_TIMEOUT` - API request timeout.
-* `CLOUDDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CLOUDDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CLOUDDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-cloudflare.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudflare.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-cloudflare.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudflare.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,104 +0,0 @@
----
-page_title: "cloudflare"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Cloudflare DNS Challenge Provider
-
-The `cloudflare` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Cloudflare](https://www.cloudflare.com/dns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "cloudflare"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CF_API_EMAIL` - Account email.
-* `CF_API_KEY` - API key.
-* `CF_DNS_API_TOKEN` - API token with DNS:Edit permission (since v3.1.0).
-* `CF_ZONE_API_TOKEN` - API token with Zone:Read permission (since v3.1.0).
-* `CLOUDFLARE_API_KEY` - Alias to CF_API_KEY.
-* `CLOUDFLARE_DNS_API_TOKEN` - Alias to CF_DNS_API_TOKEN.
-* `CLOUDFLARE_EMAIL` - Alias to CF_API_EMAIL.
-* `CLOUDFLARE_ZONE_API_TOKEN` - Alias to CF_ZONE_API_TOKEN.
-
-* `CLOUDFLARE_HTTP_TIMEOUT` - API request timeout.
-* `CLOUDFLARE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CLOUDFLARE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CLOUDFLARE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-You may use `CF_API_EMAIL` and `CF_API_KEY` to authenticate, or `CF_DNS_API_TOKEN`, or `CF_DNS_API_TOKEN` and `CF_ZONE_API_TOKEN`.
-
-### API keys
-
-If using API keys (`CF_API_EMAIL` and `CF_API_KEY`), the Global API Key needs to be used, not the Origin CA Key.
-
-Please be aware, that this in principle allows Lego to read and change *everything* related to this account.
-
-### API tokens
-
-With API tokens (`CF_DNS_API_TOKEN`, and optionally `CF_ZONE_API_TOKEN`),
-very specific access can be granted to your resources at Cloudflare.
-See this [Cloudflare announcement](https://blog.cloudflare.com/api-tokens-general-availability/) for details.
-
-The main resources Lego cares for are the DNS entries for your Zones.
-It also needs to resolve a domain name to an internal Zone ID in order to manipulate DNS entries.
-
-Hence, you should create an API token with the following permissions:
-
-* Zone / Zone / Read
-* Zone / DNS / Edit
-
-You also need to scope the access to all your domains for this to work.
-Then pass the API token as `CF_DNS_API_TOKEN` to Lego.
-
-**Alternatively,** if you prefer a more strict set of privileges,
-you can split the access tokens:
-
-* Create one with *Zone / Zone / Read* permissions and scope it to all your zones.
-  This is needed to resolve domain names to Zone IDs and can be shared among multiple Lego installations.
-  Pass this API token as `CF_ZONE_API_TOKEN` to Lego.
-* Create another API token with *Zone / DNS / Edit* permissions and set the scope to the domains you want to manage with a single Lego installation.
-  Pass this token as `CF_DNS_API_TOKEN` to Lego.
-* Repeat the previous step for each host you want to run Lego on.
-
-This "paranoid" setup is mainly interesting for users who manage many zones/domains with a single Cloudflare account.
-It follows the principle of least privilege and limits the possible damage, should one of the hosts become compromised.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-cloudns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-cloudns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "cloudns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# ClouDNS DNS Challenge Provider
-
-The `cloudns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[ClouDNS](https://www.cloudns.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "cloudns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CLOUDNS_AUTH_ID` - The API user ID.
-* `CLOUDNS_AUTH_PASSWORD` - The password for API user ID.
-
-* `CLOUDNS_HTTP_TIMEOUT` - API request timeout.
-* `CLOUDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CLOUDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CLOUDNS_SUB_AUTH_ID` - The API sub user ID.
-* `CLOUDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-cloudru.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudru.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-cloudru.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudru.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "cloudru"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Cloud.ru DNS Challenge Provider
-
-The `cloudru` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Cloud.ru](https://cloud.ru).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "cloudru"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CLOUDRU_KEY_ID` - Key ID (login).
-* `CLOUDRU_SECRET` - Key Secret.
-* `CLOUDRU_SERVICE_INSTANCE_ID` - Service Instance ID (parentId).
-
-* `CLOUDRU_HTTP_TIMEOUT` - API request timeout.
-* `CLOUDRU_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CLOUDRU_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CLOUDRU_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `CLOUDRU_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-cloudxns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudxns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-cloudxns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cloudxns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "cloudxns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# CloudXNS DNS Challenge Provider
-
-The `cloudxns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[CloudXNS](https://www.cloudxns.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "cloudxns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CLOUDXNS_API_KEY` - The API key.
-* `CLOUDXNS_SECRET_KEY` - The API secret key.
-
-* `CLOUDXNS_HTTP_TIMEOUT` - API request timeout.
-* `CLOUDXNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CLOUDXNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CLOUDXNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-conoha.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-conoha.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-conoha.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-conoha.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "conoha"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# ConoHa DNS Challenge Provider
-
-The `conoha` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[ConoHa](https://www.conoha.jp/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "conoha"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CONOHA_API_PASSWORD` - The API password.
-* `CONOHA_API_USERNAME` - The API username.
-* `CONOHA_TENANT_ID` - Tenant ID.
-
-* `CONOHA_HTTP_TIMEOUT` - API request timeout.
-* `CONOHA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CONOHA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CONOHA_REGION` - The region.
-* `CONOHA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-constellix.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-constellix.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-constellix.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-constellix.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "constellix"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Constellix DNS Challenge Provider
-
-The `constellix` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Constellix](https://constellix.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "constellix"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CONSTELLIX_API_KEY` - User API key.
-* `CONSTELLIX_SECRET_KEY` - User secret key.
-
-* `CONSTELLIX_HTTP_TIMEOUT` - API request timeout.
-* `CONSTELLIX_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CONSTELLIX_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CONSTELLIX_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-cpanel.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cpanel.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-cpanel.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-cpanel.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "cpanel"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# CPanel/WHM DNS Challenge Provider
-
-The `cpanel` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[CPanel/WHM](https://cpanel.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "cpanel"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `CPANEL_BASE_URL` - API server URL.
-* `CPANEL_TOKEN` - API token.
-* `CPANEL_USERNAME` - username.
-
-* `CPANEL_HTTP_TIMEOUT` - API request timeout.
-* `CPANEL_MODE` - use cpanel API or WHM API (Default: cpanel).
-* `CPANEL_POLLING_INTERVAL` - Time between DNS propagation check.
-* `CPANEL_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `CPANEL_REGION` - The region.
-* `CPANEL_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-derak.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-derak.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-derak.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-derak.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "derak"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Derak Cloud DNS Challenge Provider
-
-The `derak` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Derak Cloud](https://derak.cloud/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "derak"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DERAK_API_KEY` - The API key.
-
-* `DERAK_HTTP_TIMEOUT` - API request timeout.
-* `DERAK_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DERAK_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DERAK_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `DERAK_WEBSITE_ID` - Force the zone/website ID.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-desec.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-desec.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-desec.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-desec.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "desec"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# deSEC.io DNS Challenge Provider
-
-The `desec` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[deSEC.io](https://desec.io).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "desec"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DESEC_TOKEN` - Domain token.
-
-* `DESEC_HTTP_TIMEOUT` - API request timeout.
-* `DESEC_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DESEC_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DESEC_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-designate.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-designate.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-designate.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-designate.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,85 +0,0 @@
----
-page_title: "designate"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Designate DNSaaS for Openstack DNS Challenge Provider
-
-The `designate` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Designate DNSaaS for Openstack](https://docs.openstack.org/designate/latest/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "designate"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `OS_APPLICATION_CREDENTIAL_ID` - Application credential ID.
-* `OS_APPLICATION_CREDENTIAL_NAME` - Application credential name.
-* `OS_APPLICATION_CREDENTIAL_SECRET` - Application credential secret.
-* `OS_AUTH_URL` - Identity endpoint URL.
-* `OS_PASSWORD` - Password.
-* `OS_PROJECT_NAME` - Project name.
-* `OS_REGION_NAME` - Region name.
-* `OS_USERNAME` - Username.
-* `OS_USER_ID` - User ID.
-
-* `DESIGNATE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DESIGNATE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DESIGNATE_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `OS_PROJECT_ID` - Project ID.
-* `OS_TENANT_NAME` - Tenant name (deprecated see OS_PROJECT_NAME and OS_PROJECT_ID).
-
-## Description
-
-There are three main ways of authenticating with Designate:
-
-1. The first one is by using the `OS_CLOUD` environment variable and a `clouds.yaml` file.
-2. The second one is using your username and password, via the `OS_USERNAME`, `OS_PASSWORD` and `OS_PROJECT_NAME` environment variables.
-3. The third one is by using an application credential, via the `OS_APPLICATION_CREDENTIAL_*` and `OS_USER_ID` environment variables.
-
-For the username/password and application methods, the `OS_AUTH_URL` and `OS_REGION_NAME` environment variables are required.
-
-For more information, you can read about the different methods of authentication with OpenStack in the Keystone's documentation and the gophercloud documentation:
-
-- [Keystone username/password](https://docs.openstack.org/keystone/latest/user/supported_clients.html)
-- [Keystone application credentials](https://docs.openstack.org/keystone/latest/user/application_credentials.html)
-
-Public cloud providers with support for Designate:
-
-- [Fuga Cloud](https://fuga.cloud/)
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-digitalocean.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-digitalocean.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-digitalocean.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-digitalocean.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "digitalocean"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Digital Ocean DNS Challenge Provider
-
-The `digitalocean` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Digital Ocean](https://www.digitalocean.com/docs/networking/dns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "digitalocean"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DO_AUTH_TOKEN` - Authentication token.
-
-* `DO_API_URL` - The URL of the API.
-* `DO_HTTP_TIMEOUT` - API request timeout.
-* `DO_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DO_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DO_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dnshomede.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnshomede.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dnshomede.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnshomede.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,54 +0,0 @@
----
-page_title: "dnshomede"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# dnsHome.de DNS Challenge Provider
-
-The `dnshomede` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[dnsHome.de](https://www.dnshome.de).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dnshomede"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DNSHOMEDE_CREDENTIALS` - Comma-separated list of domain:password credential pairs.
-
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dnsimple.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnsimple.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dnsimple.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnsimple.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,73 +0,0 @@
----
-page_title: "dnsimple"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# DNSimple DNS Challenge Provider
-
-The `dnsimple` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[DNSimple](https://dnsimple.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dnsimple"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DNSIMPLE_OAUTH_TOKEN` - OAuth token.
-
-* `DNSIMPLE_BASE_URL` - API endpoint URL.
-* `DNSIMPLE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DNSIMPLE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DNSIMPLE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-`DNSIMPLE_BASE_URL` is optional and must be set to production (https://api.dnsimple.com).
-if `DNSIMPLE_BASE_URL` is not defined or empty, the production URL is used by default.
-
-While you can manage DNS records in the [DNSimple Sandbox environment](https://developer.dnsimple.com/sandbox/),
-DNS records will not resolve, and you will not be able to satisfy the ACME DNS challenge.
-
-To authenticate you need to provide a valid API token.
-HTTP Basic Authentication is intentionally not supported.
-
-### API tokens
-
-You can [generate a new API token](https://support.dnsimple.com/articles/api-access-token/) from your account page.
-Only Account API tokens are supported, if you try to use a User API token you will receive an error message.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dnsmadeeasy.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnsmadeeasy.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dnsmadeeasy.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnsmadeeasy.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "dnsmadeeasy"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# DNS Made Easy DNS Challenge Provider
-
-The `dnsmadeeasy` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[DNS Made Easy](https://dnsmadeeasy.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dnsmadeeasy"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DNSMADEEASY_API_KEY` - The API key.
-* `DNSMADEEASY_API_SECRET` - The API Secret key.
-
-* `DNSMADEEASY_HTTP_TIMEOUT` - API request timeout.
-* `DNSMADEEASY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DNSMADEEASY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DNSMADEEASY_SANDBOX` - Activate the sandbox (boolean).
-* `DNSMADEEASY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dnspod.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnspod.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dnspod.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dnspod.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "dnspod"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# DNSPod (deprecated) DNS Challenge Provider
-
-The `dnspod` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[DNSPod (deprecated)](https://www.dnspod.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dnspod"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DNSPOD_API_KEY` - The user token.
-
-* `DNSPOD_HTTP_TIMEOUT` - API request timeout.
-* `DNSPOD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DNSPOD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DNSPOD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dode.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dode.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dode.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dode.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "dode"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Domain Offensive (do.de) DNS Challenge Provider
-
-The `dode` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Domain Offensive (do.de)](https://www.do.de/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dode"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DODE_TOKEN` - API token.
-
-* `DODE_HTTP_TIMEOUT` - API request timeout.
-* `DODE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DODE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DODE_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `DODE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-domeneshop.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-domeneshop.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-domeneshop.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-domeneshop.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "domeneshop"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Domeneshop DNS Challenge Provider
-
-The `domeneshop` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Domeneshop](https://domene.shop).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "domeneshop"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DOMENESHOP_API_SECRET` - API secret.
-* `DOMENESHOP_API_TOKEN` - API token.
-
-* `DOMENESHOP_HTTP_TIMEOUT` - API request timeout.
-* `DOMENESHOP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DOMENESHOP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-### API credentials
-
-Visit the following page for information on how to create API credentials with Domeneshop:
-
-  https://api.domeneshop.no/docs/#section/Authentication
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dreamhost.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dreamhost.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dreamhost.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dreamhost.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "dreamhost"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# DreamHost DNS Challenge Provider
-
-The `dreamhost` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[DreamHost](https://www.dreamhost.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dreamhost"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DREAMHOST_API_KEY` - The API key.
-
-* `DREAMHOST_HTTP_TIMEOUT` - API request timeout.
-* `DREAMHOST_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DREAMHOST_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DREAMHOST_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-duckdns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-duckdns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-duckdns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-duckdns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "duckdns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Duck DNS DNS Challenge Provider
-
-The `duckdns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Duck DNS](https://www.duckdns.org/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "duckdns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DUCKDNS_TOKEN` - Account token.
-
-* `DUCKDNS_HTTP_TIMEOUT` - API request timeout.
-* `DUCKDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DUCKDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DUCKDNS_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `DUCKDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dyn.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dyn.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dyn.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dyn.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "dyn"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Dyn DNS Challenge Provider
-
-The `dyn` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Dyn](https://dyn.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dyn"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DYN_CUSTOMER_NAME` - Customer name.
-* `DYN_PASSWORD` - Password.
-* `DYN_USER_NAME` - User name.
-
-* `DYN_HTTP_TIMEOUT` - API request timeout.
-* `DYN_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DYN_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DYN_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-dynu.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dynu.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-dynu.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-dynu.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "dynu"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Dynu DNS Challenge Provider
-
-The `dynu` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Dynu](https://www.dynu.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "dynu"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `DYNU_API_KEY` - API key.
-
-* `DYNU_HTTP_TIMEOUT` - API request timeout.
-* `DYNU_POLLING_INTERVAL` - Time between DNS propagation check.
-* `DYNU_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `DYNU_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-easydns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-easydns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-easydns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-easydns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "easydns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# EasyDNS DNS Challenge Provider
-
-The `easydns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[EasyDNS](https://easydns.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "easydns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `EASYDNS_KEY` - API Key.
-* `EASYDNS_TOKEN` - API Token.
-
-* `EASYDNS_ENDPOINT` - The endpoint URL of the API Server.
-* `EASYDNS_HTTP_TIMEOUT` - API request timeout.
-* `EASYDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `EASYDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `EASYDNS_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `EASYDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-To test with the sandbox environment set ```EASYDNS_ENDPOINT=https://sandbox.rest.easydns.net```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-edgedns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-edgedns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-edgedns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-edgedns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,88 +0,0 @@
----
-page_title: "edgedns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Akamai EdgeDNS DNS Challenge Provider
-
-The `edgedns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Akamai EdgeDNS](https://www.akamai.com/us/en/products/security/edge-dns.jsp).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "edgedns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AKAMAI_ACCESS_TOKEN` - Access token, managed by the Akamai EdgeGrid client.
-* `AKAMAI_CLIENT_SECRET` - Client secret, managed by the Akamai EdgeGrid client.
-* `AKAMAI_CLIENT_TOKEN` - Client token, managed by the Akamai EdgeGrid client.
-* `AKAMAI_EDGERC` - Path to the .edgerc file, managed by the Akamai EdgeGrid client.
-* `AKAMAI_EDGERC_SECTION` - Configuration section, managed by the Akamai EdgeGrid client.
-* `AKAMAI_HOST` - API host, managed by the Akamai EdgeGrid client.
-
-* `AKAMAI_POLLING_INTERVAL` - Time between DNS propagation check. Default: 15 seconds.
-* `AKAMAI_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation. Default: 3 minutes.
-* `AKAMAI_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-Akamai's credentials are automatically detected in the following locations and prioritized in the following order:
-
-1. Section-specific environment variables (where `{SECTION}` is specified using `AKAMAI_EDGERC_SECTION`):
-  - `AKAMAI_{SECTION}_HOST`
-  - `AKAMAI_{SECTION}_ACCESS_TOKEN`
-  - `AKAMAI_{SECTION}_CLIENT_TOKEN`
-  - `AKAMAI_{SECTION}_CLIENT_SECRET`
-2. If `AKAMAI_EDGERC_SECTION` is not defined or is set to `default`, environment variables:
-  - `AKAMAI_HOST`
-  - `AKAMAI_ACCESS_TOKEN`
-  - `AKAMAI_CLIENT_TOKEN`
-  - `AKAMAI_CLIENT_SECRET`
-3. `.edgerc` file located at `AKAMAI_EDGERC`
-  - defaults to `~/.edgerc`, sections can be specified using `AKAMAI_EDGERC_SECTION`
-4. Default environment variables:
-  - `AKAMAI_HOST`
-  - `AKAMAI_ACCESS_TOKEN`
-  - `AKAMAI_CLIENT_TOKEN`
-  - `AKAMAI_CLIENT_SECRET`
-
-See also:
-
-- [Setting up Akamai credentials](https://developer.akamai.com/api/getting-started)
-- [.edgerc Format](https://developer.akamai.com/legacy/introduction/Conf_Client.html#edgercformat)
-- [API Client Authentication](https://developer.akamai.com/legacy/introduction/Client_Auth.html)
-- [Config from Env](https://github.com/akamai/AkamaiOPEN-edgegrid-golang/blob/master/pkg/edgegrid/config.go#L118)
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-efficientip.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-efficientip.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-efficientip.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-efficientip.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "efficientip"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Efficient IP DNS Challenge Provider
-
-The `efficientip` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Efficient IP](https://efficientip.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "efficientip"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `EFFICIENTIP_DNS_NAME` - DNS name (ex: dns.smart).
-* `EFFICIENTIP_HOSTNAME` - Hostname (ex: foo.example.com).
-* `EFFICIENTIP_PASSWORD` - Password.
-* `EFFICIENTIP_USERNAME` - Username.
-
-* `EFFICIENTIP_HTTP_TIMEOUT` - API request timeout.
-* `EFFICIENTIP_INSECURE_SKIP_VERIFY` - Whether or not to verify EfficientIP API certificate.
-* `EFFICIENTIP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `EFFICIENTIP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `EFFICIENTIP_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `EFFICIENTIP_VIEW_NAME` - View name (ex: external).
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-epik.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-epik.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-epik.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-epik.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "epik"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Epik DNS Challenge Provider
-
-The `epik` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Epik](https://www.epik.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "epik"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `EPIK_SIGNATURE` - Epik API signature (https://registrar.epik.com/account/api-settings/).
-
-* `EPIK_HTTP_TIMEOUT` - API request timeout.
-* `EPIK_POLLING_INTERVAL` - Time between DNS propagation check.
-* `EPIK_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `EPIK_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-exec.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-exec.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-exec.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-exec.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,117 +0,0 @@
----
-page_title: "exec"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# External program DNS Challenge Provider
-
-The `exec` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-External program.
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "exec"
-  }
-}
-```
-
-## Base Configuration
-
-| Environment Variable Name | Description                           |
-|---------------------------|---------------------------------------|
-| `EXEC_MODE`               | `RAW`, none                           |
-| `EXEC_PATH`               | The path of the the external program. |
-
-
-## Additional Configuration
-
-| Environment Variable Name  | Description                               |
-|----------------------------|-------------------------------------------|
-| `EXEC_POLLING_INTERVAL`    | Time between DNS propagation check.       |
-| `EXEC_PROPAGATION_TIMEOUT` | Maximum waiting time for DNS propagation. |
-| `EXEC_SEQUENCE_INTERVAL`   | Time between sequential requests.         |
-
-
-## Description
-
-The file name of the external program is specified in the environment variable `EXEC_PATH`.
-
-When it is run by lego, three command-line parameters are passed to it:
-The action ("present" or "cleanup"), the fully-qualified domain name and the value for the record.
-
-For example, requesting a certificate for the domain 'my.example.org' can be achieved by calling lego as follows:
-
-```bash
-EXEC_PATH=./update-dns.sh \
-	lego --email you@example.com \
-	--dns exec \
-	--domains my.example.org run
-```
-
-It will then call the program './update-dns.sh' with like this:
-
-```bash
-./update-dns.sh "present" "_acme-challenge.my.example.org." "MsijOYZxqyjGnFGwhjrhfg-Xgbl5r68WPda0J9EgqqI"
-```
-
-The program then needs to make sure the record is inserted.
-When it returns an error via a non-zero exit code, lego aborts.
-
-When the record is to be removed again,
-the program is called with the first command-line parameter set to `cleanup` instead of `present`.
-
-If you want to use the raw domain, token, and keyAuth values with your program, you can set `EXEC_MODE=RAW`:
-
-```bash
-EXEC_MODE=RAW \
-EXEC_PATH=./update-dns.sh \
-	lego --email you@example.com \
-	--dns exec \
-	--domains my.example.org run
-```
-
-It will then call the program `./update-dns.sh` like this:
-
-```bash
-./update-dns.sh "present" "--" "my.example.org." "some-token" "KxAy-J3NwUmg9ZQuM-gP_Mq1nStaYSaP9tYQs5_-YsE.ksT-qywTd8058G-SHHWA3RAN72Pr0yWtPYmmY5UBpQ8"
-```
-
-## Commands
-
--> **NOTE**: The `--` is because the token MAY start with a `-`, and the called program may try and interpret a `-` as indicating a flag.
-In the case of urfave, which is commonly used,
-you can use the `--` delimiter to specify the start of positional arguments, and handle such a string safely.
-
-### Present
-
-| Mode    | Command                                            |
-|---------|----------------------------------------------------|
-| default | `myprogram present <FQDN> <record>`                |
-| `RAW`   | `myprogram present -- <domain> <token> <key_auth>` |
-
-### Cleanup
-
-| Mode    | Command                                            |
-|---------|----------------------------------------------------|
-| default | `myprogram cleanup <FQDN> <record>`                |
-| `RAW`   | `myprogram cleanup -- <domain> <token> <key_auth>` |
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-exoscale.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-exoscale.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-exoscale.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-exoscale.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "exoscale"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Exoscale DNS Challenge Provider
-
-The `exoscale` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Exoscale](https://www.exoscale.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "exoscale"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `EXOSCALE_API_KEY` - API key.
-* `EXOSCALE_API_SECRET` - API secret.
-
-* `EXOSCALE_API_ZONE` - API zone.
-* `EXOSCALE_ENDPOINT` - API endpoint URL.
-* `EXOSCALE_HTTP_TIMEOUT` - API request timeout.
-* `EXOSCALE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `EXOSCALE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `EXOSCALE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-freemyip.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-freemyip.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-freemyip.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-freemyip.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "freemyip"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# freemyip.com DNS Challenge Provider
-
-The `freemyip` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[freemyip.com](https://freemyip.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "freemyip"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `FREEMYIP_TOKEN` - Account token.
-
-* `FREEMYIP_HTTP_TIMEOUT` - API request timeout.
-* `FREEMYIP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `FREEMYIP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `FREEMYIP_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `FREEMYIP_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-gandi.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gandi.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-gandi.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gandi.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "gandi"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Gandi DNS Challenge Provider
-
-The `gandi` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Gandi](https://www.gandi.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "gandi"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GANDI_API_KEY` - API key.
-
-* `GANDI_HTTP_TIMEOUT` - API request timeout.
-* `GANDI_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GANDI_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GANDI_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-gandiv5.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gandiv5.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-gandiv5.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gandiv5.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "gandiv5"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Gandi Live DNS (v5) DNS Challenge Provider
-
-The `gandiv5` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Gandi Live DNS (v5)](https://www.gandi.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "gandiv5"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GANDIV5_API_KEY` - API key (Deprecated).
-* `GANDIV5_PERSONAL_ACCESS_TOKEN` - Personal Access Token.
-
-* `GANDIV5_HTTP_TIMEOUT` - API request timeout.
-* `GANDIV5_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GANDIV5_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GANDIV5_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-gcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-gcloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "gcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Google Cloud DNS Challenge Provider
-
-The `gcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Google Cloud](https://cloud.google.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "gcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `Application Default Credentials` - [Documentation](https://cloud.google.com/docs/authentication/production#providing_credentials_to_your_application).
-* `GCE_PROJECT` - Project name (by default, the project name is auto-detected by using the metadata service).
-* `GCE_SERVICE_ACCOUNT` - Account.
-* `GCE_SERVICE_ACCOUNT_FILE` - Account file path.
-
-* `GCE_ALLOW_PRIVATE_ZONE` - Allows requested domain to be in private DNS zone, works only with a private ACME server (by default: false).
-* `GCE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GCE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GCE_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `GCE_ZONE_ID` - Allows to skip the automatic detection of the zone.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-gcore.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gcore.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-gcore.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-gcore.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "gcore"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# G-Core DNS Challenge Provider
-
-The `gcore` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[G-Core](https://gcore.com/dns/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "gcore"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GCORE_PERMANENT_API_TOKEN` - Permanent API token (https://gcore.com/blog/permanent-api-token-explained/).
-
-* `GCORE_HTTP_TIMEOUT` - API request timeout.
-* `GCORE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GCORE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GCORE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-glesys.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-glesys.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-glesys.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-glesys.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "glesys"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Glesys DNS Challenge Provider
-
-The `glesys` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Glesys](https://glesys.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "glesys"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GLESYS_API_KEY` - API key.
-* `GLESYS_API_USER` - API user.
-
-* `GLESYS_HTTP_TIMEOUT` - API request timeout.
-* `GLESYS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GLESYS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GLESYS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-godaddy.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-godaddy.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-godaddy.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-godaddy.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "godaddy"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Go Daddy DNS Challenge Provider
-
-The `godaddy` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Go Daddy](https://godaddy.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "godaddy"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GODADDY_API_KEY` - API key.
-* `GODADDY_API_SECRET` - API secret.
-
-* `GODADDY_HTTP_TIMEOUT` - API request timeout.
-* `GODADDY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GODADDY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `GODADDY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-googledomains.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-googledomains.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-googledomains.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-googledomains.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,57 +0,0 @@
----
-page_title: "googledomains"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Google Domains DNS Challenge Provider
-
-The `googledomains` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Google Domains](https://domains.google).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "googledomains"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `GOOGLE_DOMAINS_ACCESS_TOKEN` - Access token.
-
-* `GOOGLE_DOMAINS_HTTP_TIMEOUT` - API request timeout.
-* `GOOGLE_DOMAINS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `GOOGLE_DOMAINS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-hetzner.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hetzner.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-hetzner.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hetzner.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "hetzner"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Hetzner DNS Challenge Provider
-
-The `hetzner` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Hetzner](https://hetzner.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "hetzner"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HETZNER_API_KEY` - API key.
-
-* `HETZNER_HTTP_TIMEOUT` - API request timeout.
-* `HETZNER_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HETZNER_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HETZNER_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-hostingde.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hostingde.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-hostingde.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hostingde.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "hostingde"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Hosting.de DNS Challenge Provider
-
-The `hostingde` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Hosting.de](https://www.hosting.de/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "hostingde"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HOSTINGDE_API_KEY` - API key.
-
-* `HOSTINGDE_HTTP_TIMEOUT` - API request timeout.
-* `HOSTINGDE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HOSTINGDE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HOSTINGDE_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `HOSTINGDE_ZONE_NAME` - Zone name in ACE format.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-hosttech.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hosttech.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-hosttech.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hosttech.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "hosttech"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Hosttech DNS Challenge Provider
-
-The `hosttech` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Hosttech](https://www.hosttech.eu/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "hosttech"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HOSTTECH_API_KEY` - API login.
-* `HOSTTECH_PASSWORD` - API password.
-
-* `HOSTTECH_HTTP_TIMEOUT` - API request timeout.
-* `HOSTTECH_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HOSTTECH_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HOSTTECH_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-httpnet.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-httpnet.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-httpnet.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-httpnet.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "httpnet"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# http.net DNS Challenge Provider
-
-The `httpnet` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[http.net](https://www.http.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "httpnet"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HTTPNET_API_KEY` - API key.
-
-* `HTTPNET_HTTP_TIMEOUT` - API request timeout.
-* `HTTPNET_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HTTPNET_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HTTPNET_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `HTTPNET_ZONE_NAME` - Zone name in ACE format.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-httpreq.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-httpreq.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-httpreq.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-httpreq.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,97 +0,0 @@
----
-page_title: "httpreq"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# HTTP request DNS Challenge Provider
-
-The `httpreq` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-HTTP request.
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "httpreq"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HTTPREQ_ENDPOINT` - The URL of the server.
-* `HTTPREQ_MODE` - `RAW`, none.
-
-* `HTTPREQ_HTTP_TIMEOUT` - API request timeout.
-* `HTTPREQ_PASSWORD` - Basic authentication password.
-* `HTTPREQ_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HTTPREQ_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HTTPREQ_USERNAME` - Basic authentication username.
-
-## Description
-
-The server must provide:
-
-- `POST` `/present`
-- `POST` `/cleanup`
-
-The URL of the server must be defined by `HTTPREQ_ENDPOINT`.
-
-### Mode
-
-There are 2 modes (`HTTPREQ_MODE`):
-
-- default mode:
-```json
-{
-  "fqdn": "_acme-challenge.domain.",
-  "value": "LHDhK3oGRvkiefQnx7OOczTY5Tic_xZ6HcMOc_gmtoM"
-}
-```
-
-- `RAW`
-```json
-{
-  "domain": "domain",
-  "token": "token",
-  "keyAuth": "key"
-}
-```
-
-### Authentication
-
-Basic authentication (optional) can be set with some environment variables:
-
-- `HTTPREQ_USERNAME` and `HTTPREQ_PASSWORD`
-- both values must be set, otherwise basic authentication is not defined.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-hurricane.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hurricane.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-hurricane.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hurricane.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,74 +0,0 @@
----
-page_title: "hurricane"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Hurricane Electric DNS DNS Challenge Provider
-
-The `hurricane` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Hurricane Electric DNS](https://dns.he.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "hurricane"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `HURRICANE_TOKENS` - TXT record names and tokens.
-
-
-Before using lego to request a certificate for a given domain or wildcard (such as `my.example.org` or `*.my.example.org`),
-create a TXT record named `_acme-challenge.my.example.org`, and enable dynamic updates on it.
-Generate a token for each URL with Hurricane Electric's UI, and copy it down.
-Stick to alphanumeric tokens for greatest reliability.
-
-To authenticate with the Hurricane Electric API,
-add each record name/token pair you want to update to the `HURRICANE_TOKENS` environment variable, as shown in the examples.
-Record names (without the `_acme-challenge.` component) and their tokens are separated with colons,
-while the credential pairs are concatenated into a comma-separated list, like so:
-
-```
-HURRICANE_TOKENS=my.example.org:token1,demo.example.org:token2
-```
-
-If you are issuing both a wildcard certificate and a standard certificate for a given subdomain,
-you should not have repeat entries for that name, as both will use the same credential.
-
-```
-HURRICANE_TOKENS=example.org:token
-```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-hyperone.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hyperone.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-hyperone.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-hyperone.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,84 +0,0 @@
----
-page_title: "hyperone"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# HyperOne DNS Challenge Provider
-
-The `hyperone` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[HyperOne](https://www.hyperone.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "hyperone"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-
-* `HYPERONE_API_URL` - Allows to pass custom API Endpoint to be used in the challenge (default https://api.hyperone.com/v2).
-* `HYPERONE_LOCATION_ID` - Specifies location (region) to be used in API calls. (default pl-waw-1).
-* `HYPERONE_PASSPORT_LOCATION` - Allows to pass custom passport file location (default ~/.h1/passport.json).
-* `HYPERONE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `HYPERONE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `HYPERONE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-Default configuration does not require any additional environment variables,
-just a passport file in `~/.h1/passport.json` location.
-
-### Generating passport file using H1 CLI
-
-To use this application you have to generate passport file for `sa`:
-
-```
-h1 iam project sa credential generate --name my-passport --project <project ID> --sa <sa ID> --passport-output-file ~/.h1/passport.json
-```
-
-### Required permissions
-
-The application requires following permissions:
--  `dns/zone/list`
--  `dns/zone.recordset/list`
--  `dns/zone.recordset/create`
--  `dns/zone.recordset/delete`
--  `dns/zone.record/create`
--  `dns/zone.record/list`
--  `dns/zone.record/delete`
-
-All required permissions are available via platform role `tool.lego`.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ibmcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ibmcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ibmcloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ibmcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "ibmcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# IBM Cloud (SoftLayer) DNS Challenge Provider
-
-The `ibmcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[IBM Cloud (SoftLayer)](https://www.ibm.com/cloud/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ibmcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SOFTLAYER_API_KEY` - Classic Infrastructure API key.
-* `SOFTLAYER_USERNAME` - Username (IBM Cloud is <accountID>_<emailAddress>).
-
-* `SOFTLAYER_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SOFTLAYER_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SOFTLAYER_TIMEOUT` - API request timeout.
-* `SOFTLAYER_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-iijdpf.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iijdpf.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-iijdpf.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iijdpf.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "iijdpf"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# IIJ DNS Platform Service DNS Challenge Provider
-
-The `iijdpf` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[IIJ DNS Platform Service](https://www.iij.ad.jp/en/biz/dns-pfm/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "iijdpf"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `IIJ_DPF_API_TOKEN` - API token.
-* `IIJ_DPF_DPM_SERVICE_CODE` - IIJ Managed DNS Service's service code.
-
-* `IIJ_DPF_API_ENDPOINT` - API endpoint URL, defaults to https://api.dns-platform.jp/dpf/v1.
-* `IIJ_DPF_POLLING_INTERVAL` - Time between DNS propagation check, defaults to 5 second.
-* `IIJ_DPF_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation, defaults to 660 second.
-* `IIJ_DPF_TTL` - The TTL of the TXT record used for the DNS challenge, default to 300.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-iij.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iij.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-iij.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iij.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "iij"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Internet Initiative Japan DNS Challenge Provider
-
-The `iij` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Internet Initiative Japan](https://www.iij.ad.jp/en/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "iij"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `IIJ_API_ACCESS_KEY` - API access key.
-* `IIJ_API_SECRET_KEY` - API secret key.
-* `IIJ_DO_SERVICE_CODE` - DO service code.
-
-* `IIJ_POLLING_INTERVAL` - Time between DNS propagation check.
-* `IIJ_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `IIJ_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-infoblox.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-infoblox.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-infoblox.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-infoblox.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,65 +0,0 @@
----
-page_title: "infoblox"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Infoblox DNS Challenge Provider
-
-The `infoblox` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Infoblox](https://www.infoblox.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "infoblox"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `INFOBLOX_HOST` - Host URI.
-* `INFOBLOX_PASSWORD` - Account Password.
-* `INFOBLOX_USERNAME` - Account Username.
-
-* `INFOBLOX_DNS_VIEW` - The view for the TXT records, default: External.
-* `INFOBLOX_HTTP_TIMEOUT` - HTTP request timeout.
-* `INFOBLOX_POLLING_INTERVAL` - Time between DNS propagation check.
-* `INFOBLOX_PORT` - The port for the infoblox grid manager, default: 443.
-* `INFOBLOX_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `INFOBLOX_SSL_VERIFY` - Whether or not to verify the TLS certificate, default: true.
-* `INFOBLOX_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `INFOBLOX_WAPI_VERSION` - The version of WAPI being used, default: 2.11.
-
-When creating an API's user ensure it has the proper permissions for the view you are working with.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-infomaniak.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-infomaniak.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-infomaniak.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-infomaniak.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "infomaniak"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Infomaniak DNS Challenge Provider
-
-The `infomaniak` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Infomaniak](https://www.infomaniak.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "infomaniak"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `INFOMANIAK_ACCESS_TOKEN` - Access token.
-
-* `INFOMANIAK_ENDPOINT` - https://api.infomaniak.com.
-* `INFOMANIAK_HTTP_TIMEOUT` - API request timeout.
-* `INFOMANIAK_POLLING_INTERVAL` - Time between DNS propagation check.
-* `INFOMANIAK_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `INFOMANIAK_TTL` - The TTL of the TXT record used for the DNS challenge in seconds.
-
-## Access token
-
-Access token can be created at the url https://manager.infomaniak.com/v3/infomaniak-api.
-You will need domain scope.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-internetbs.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-internetbs.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-internetbs.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-internetbs.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "internetbs"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Internet.bs DNS Challenge Provider
-
-The `internetbs` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Internet.bs](https://internetbs.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "internetbs"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `INTERNET_BS_API_KEY` - API key.
-* `INTERNET_BS_PASSWORD` - API password.
-
-* `INTERNET_BS_HTTP_TIMEOUT` - API request timeout.
-* `INTERNET_BS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `INTERNET_BS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `INTERNET_BS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-inwx.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-inwx.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-inwx.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-inwx.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "inwx"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# INWX DNS Challenge Provider
-
-The `inwx` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[INWX](https://www.inwx.de/en).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "inwx"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `INWX_PASSWORD` - Password.
-* `INWX_USERNAME` - Username.
-
-* `INWX_POLLING_INTERVAL` - Time between DNS propagation check.
-* `INWX_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation (default 360s).
-* `INWX_SANDBOX` - Activate the sandbox (boolean).
-* `INWX_SHARED_SECRET` - shared secret related to 2FA.
-* `INWX_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ionos.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ionos.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ionos.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ionos.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "ionos"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Ionos DNS Challenge Provider
-
-The `ionos` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Ionos](https://ionos.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ionos"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `IONOS_API_KEY` - API key `<prefix>.<secret>` https://developer.hosting.ionos.com/docs/getstarted.
-
-* `IONOS_HTTP_TIMEOUT` - API request timeout.
-* `IONOS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `IONOS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `IONOS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ipv64.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ipv64.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ipv64.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ipv64.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "ipv64"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# IPv64 DNS Challenge Provider
-
-The `ipv64` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[IPv64](https://ipv64.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ipv64"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `IPV64_API_KEY` - Account API Key.
-
-* `IPV64_HTTP_TIMEOUT` - API request timeout.
-* `IPV64_POLLING_INTERVAL` - Time between DNS propagation check.
-* `IPV64_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `IPV64_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-iwantmyname.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iwantmyname.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-iwantmyname.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-iwantmyname.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "iwantmyname"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# iwantmyname DNS Challenge Provider
-
-The `iwantmyname` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[iwantmyname](https://iwantmyname.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "iwantmyname"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `IWANTMYNAME_PASSWORD` - API password.
-* `IWANTMYNAME_USERNAME` - API username.
-
-* `IWANTMYNAME_HTTP_TIMEOUT` - API request timeout.
-* `IWANTMYNAME_POLLING_INTERVAL` - Time between DNS propagation check.
-* `IWANTMYNAME_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `IWANTMYNAME_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-joker.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-joker.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-joker.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-joker.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,78 +0,0 @@
----
-page_title: "joker"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Joker DNS Challenge Provider
-
-The `joker` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Joker](https://joker.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "joker"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `JOKER_API_KEY` - API key (only with DMAPI mode).
-* `JOKER_API_MODE` - 'DMAPI' or 'SVC'. DMAPI is for resellers accounts. (Default: DMAPI).
-* `JOKER_PASSWORD` - Joker.com password.
-* `JOKER_USERNAME` - Joker.com username.
-
-* `JOKER_HTTP_TIMEOUT` - API request timeout.
-* `JOKER_POLLING_INTERVAL` - Time between DNS propagation check.
-* `JOKER_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `JOKER_SEQUENCE_INTERVAL` - Time between sequential requests (only with 'SVC' mode).
-* `JOKER_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## SVC mode
-
-In the SVC mode, username and passsword are not your email and account passwords, but those displayed in Joker.com domain dashboard when enabling Dynamic DNS.
-
-As per [Joker.com documentation](https://joker.com/faq/content/6/496/en/let_s-encrypt-support.html):
-
-> 1. please log in at Joker.com, visit 'My Domains',
->    find the domain you want to add  Let's Encrypt certificate for, and chose "DNS" in the menu
->
-> 2. on the top right, you will find the setting for 'Dynamic DNS'.
->    If not already active, please activate it.
->    It will not affect any other already existing DNS records of this domain.
->
-> 3. please take a note of the credentials which are now shown as 'Dynamic DNS Authentication', consisting of a 'username' and a 'password'.
->
-> 4. this is all you have to do here - and only once per domain.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-liara.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-liara.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-liara.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-liara.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "liara"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Liara DNS Challenge Provider
-
-The `liara` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Liara](https://liara.ir).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "liara"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `LIARA_API_KEY` - The API key.
-
-* `LIARA_HTTP_TIMEOUT` - API request timeout.
-* `LIARA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LIARA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `LIARA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-lightsail.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-lightsail.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-lightsail.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-lightsail.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,95 +0,0 @@
----
-page_title: "lightsail"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Amazon Lightsail DNS Challenge Provider
-
-The `lightsail` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Amazon Lightsail](https://aws.amazon.com/lightsail/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "lightsail"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AWS_ACCESS_KEY_ID` - Managed by the AWS client. Access key ID (`AWS_ACCESS_KEY_ID_FILE` is not supported, use `AWS_SHARED_CREDENTIALS_FILE` instead).
-* `AWS_SECRET_ACCESS_KEY` - Managed by the AWS client. Secret access key (`AWS_SECRET_ACCESS_KEY_FILE` is not supported, use `AWS_SHARED_CREDENTIALS_FILE` instead).
-* `DNS_ZONE` - Domain name of the DNS zone.
-
-* `AWS_SHARED_CREDENTIALS_FILE` - Managed by the AWS client. Shared credentials file..
-* `LIGHTSAIL_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LIGHTSAIL_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-## Description
-
-AWS Credentials are automatically detected in the following locations and prioritized in the following order:
-
-1. Environment variables: `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, [`AWS_SESSION_TOKEN`]
-2. Shared credentials file (defaults to `~/.aws/credentials`, profiles can be specified using `AWS_PROFILE`)
-3. Amazon EC2 IAM role
-
-AWS region is not required to set as the Lightsail DNS zone is in global (us-east-1) region.
-
-## Policy
-
-The following AWS IAM policy document describes the minimum permissions required for lego to complete the DNS challenge.
-
-```json
-{
-  "Version": "2012-10-17",
-  "Statement": [
-    {
-      "Effect": "Allow",
-      "Action": [
-        "lightsail:DeleteDomainEntry",
-        "lightsail:CreateDomainEntry"
-      ],
-      "Resource": "<Lightsail DNS zone ARN>"
-    }
-  ]
-}
-```
-
-Replace the `Resource` value with your Lightsail DNS zone ARN.
-You can retrieve the ARN using aws cli by running `aws lightsail get-domains --region us-east-1` (Lightsail web console does not show the ARN, unfortunately).
-It should be in the format of `arn:aws:lightsail:global:<ACCOUNT ID>:Domain/<DOMAIN ID>`.
-You also need to replace the region in the ARN to `us-east-1` (instead of `global`).
-
-Alternatively, you can also set the `Resource` to `*` (wildcard), which allow to access all domain, but this is not recommended.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-linode.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-linode.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-linode.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-linode.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "linode"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Linode (v4) DNS Challenge Provider
-
-The `linode` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Linode (v4)](https://www.linode.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "linode"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `LINODE_TOKEN` - API token.
-
-* `LINODE_HTTP_TIMEOUT` - API request timeout.
-* `LINODE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LINODE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `LINODE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-liquidweb.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-liquidweb.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-liquidweb.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-liquidweb.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "liquidweb"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Liquid Web DNS Challenge Provider
-
-The `liquidweb` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Liquid Web](https://liquidweb.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "liquidweb"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `LWAPI_PASSWORD` - Liquid Web API Password.
-* `LWAPI_USERNAME` - Liquid Web API Username.
-
-* `LWAPI_HTTP_TIMEOUT` - Maximum waiting time for the DNS records to be created (not verified).
-* `LWAPI_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LWAPI_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `LWAPI_TTL` - The TTL of the TXT record used for the DNS challenge.
-* `LWAPI_URL` - Liquid Web API endpoint.
-* `LWAPI_ZONE` - DNS Zone.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-loopia.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-loopia.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-loopia.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-loopia.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,70 +0,0 @@
----
-page_title: "loopia"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Loopia DNS Challenge Provider
-
-The `loopia` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Loopia](https://loopia.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "loopia"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `LOOPIA_API_PASSWORD` - API password.
-* `LOOPIA_API_USER` - API username.
-
-* `LOOPIA_API_URL` - API endpoint. Ex: https://api.loopia.se/RPCSERV or https://api.loopia.rs/RPCSERV.
-* `LOOPIA_HTTP_TIMEOUT` - API request timeout.
-* `LOOPIA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LOOPIA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `LOOPIA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-### API user
-
-You can [generate a new API user](https://customerzone.loopia.com/api/) from your account page.
-
-It needs to have the following permissions:
-
-* addZoneRecord
-* getZoneRecords
-* removeZoneRecord
-* removeSubdomain
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-luadns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-luadns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-luadns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-luadns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "luadns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# LuaDNS DNS Challenge Provider
-
-The `luadns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[LuaDNS](https://luadns.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "luadns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `LUADNS_API_TOKEN` - API token.
-* `LUADNS_API_USERNAME` - Username (your email).
-
-* `LUADNS_HTTP_TIMEOUT` - API request timeout.
-* `LUADNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `LUADNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `LUADNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-mailinabox.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mailinabox.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-mailinabox.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mailinabox.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "mailinabox"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Mail-in-a-Box DNS Challenge Provider
-
-The `mailinabox` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Mail-in-a-Box](https://mailinabox.email).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "mailinabox"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `MAILINABOX_BASE_URL` - Base API URL (ex: https://box.example.com).
-* `MAILINABOX_EMAIL` - User email.
-* `MAILINABOX_PASSWORD` - User password.
-
-* `MAILINABOX_POLLING_INTERVAL` - Time between DNS propagation check.
-* `MAILINABOX_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-metaname.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-metaname.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-metaname.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-metaname.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "metaname"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Metaname DNS Challenge Provider
-
-The `metaname` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Metaname](https://metaname.net).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "metaname"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `METANAME_ACCOUNT_REFERENCE` - The four-digit reference of a Metaname account.
-* `METANAME_API_KEY` - API Key.
-
-* `METANAME_POLLING_INTERVAL` - Time between DNS propagation check.
-* `METANAME_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `METANAME_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-mydnsjp.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mydnsjp.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-mydnsjp.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mydnsjp.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "mydnsjp"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# MyDNS.jp DNS Challenge Provider
-
-The `mydnsjp` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[MyDNS.jp](https://www.mydns.jp).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "mydnsjp"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `MYDNSJP_MASTER_ID` - Master ID.
-* `MYDNSJP_PASSWORD` - Password.
-
-* `MYDNSJP_HTTP_TIMEOUT` - API request timeout.
-* `MYDNSJP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `MYDNSJP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `MYDNSJP_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-mythicbeasts.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mythicbeasts.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-mythicbeasts.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-mythicbeasts.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,64 +0,0 @@
----
-page_title: "mythicbeasts"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# MythicBeasts DNS Challenge Provider
-
-The `mythicbeasts` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[MythicBeasts](https://www.mythic-beasts.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "mythicbeasts"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `MYTHICBEASTS_PASSWORD` - Password.
-* `MYTHICBEASTS_USERNAME` - User name.
-
-* `MYTHICBEASTS_API_ENDPOINT` - The endpoint for the API (must implement v2).
-* `MYTHICBEASTS_AUTH_API_ENDPOINT` - The endpoint for Mythic Beasts' Authentication.
-* `MYTHICBEASTS_HTTP_TIMEOUT` - API request timeout.
-* `MYTHICBEASTS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `MYTHICBEASTS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `MYTHICBEASTS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-If you are using specific API keys, then the username is the API ID for your API key, and the password is the API secret.
-
-Your API key name is not needed to operate lego.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-namecheap.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namecheap.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-namecheap.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namecheap.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "namecheap"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Namecheap DNS Challenge Provider
-
-The `namecheap` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Namecheap](https://www.namecheap.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "namecheap"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NAMECHEAP_API_KEY` - API key.
-* `NAMECHEAP_API_USER` - API user.
-
-* `NAMECHEAP_HTTP_TIMEOUT` - API request timeout.
-* `NAMECHEAP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NAMECHEAP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NAMECHEAP_SANDBOX` - Activate the sandbox (boolean).
-* `NAMECHEAP_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-namedotcom.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namedotcom.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-namedotcom.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namedotcom.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "namedotcom"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Name.com DNS Challenge Provider
-
-The `namedotcom` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Name.com](https://www.name.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "namedotcom"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NAMECOM_API_TOKEN` - API token.
-* `NAMECOM_USERNAME` - Username.
-
-* `NAMECOM_HTTP_TIMEOUT` - API request timeout.
-* `NAMECOM_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NAMECOM_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NAMECOM_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-namesilo.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namesilo.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-namesilo.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-namesilo.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,57 +0,0 @@
----
-page_title: "namesilo"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Namesilo DNS Challenge Provider
-
-The `namesilo` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Namesilo](https://www.namesilo.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "namesilo"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NAMESILO_API_KEY` - Client ID.
-
-* `NAMESILO_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NAMESILO_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation, it is better to set larger than 15m.
-* `NAMESILO_TTL` - The TTL of the TXT record used for the DNS challenge, should be in [3600, 2592000].
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-nearlyfreespeech.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nearlyfreespeech.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-nearlyfreespeech.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nearlyfreespeech.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "nearlyfreespeech"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# NearlyFreeSpeech.NET DNS Challenge Provider
-
-The `nearlyfreespeech` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[NearlyFreeSpeech.NET](https://nearlyfreespeech.net/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "nearlyfreespeech"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NEARLYFREESPEECH_API_KEY` - API Key for API requests.
-* `NEARLYFREESPEECH_LOGIN` - Username for API requests.
-
-* `NEARLYFREESPEECH_HTTP_TIMEOUT` - API request timeout.
-* `NEARLYFREESPEECH_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NEARLYFREESPEECH_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NEARLYFREESPEECH_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `NEARLYFREESPEECH_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-netcup.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-netcup.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-netcup.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-netcup.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "netcup"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Netcup DNS Challenge Provider
-
-The `netcup` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Netcup](https://www.netcup.eu/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "netcup"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NETCUP_API_KEY` - API key.
-* `NETCUP_API_PASSWORD` - API password.
-* `NETCUP_CUSTOMER_NUMBER` - Customer number.
-
-* `NETCUP_HTTP_TIMEOUT` - API request timeout.
-* `NETCUP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NETCUP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NETCUP_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-netlify.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-netlify.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-netlify.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-netlify.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "netlify"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Netlify DNS Challenge Provider
-
-The `netlify` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Netlify](https://www.netlify.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "netlify"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NETLIFY_TOKEN` - Token.
-
-* `NETLIFY_HTTP_TIMEOUT` - API request timeout.
-* `NETLIFY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NETLIFY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NETLIFY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-nicmanager.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nicmanager.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-nicmanager.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nicmanager.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,67 +0,0 @@
----
-page_title: "nicmanager"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Nicmanager DNS Challenge Provider
-
-The `nicmanager` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Nicmanager](https://www.nicmanager.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "nicmanager"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NICMANAGER_API_EMAIL` - Email-based login.
-* `NICMANAGER_API_LOGIN` - Login, used for Username-based login.
-* `NICMANAGER_API_PASSWORD` - Password, always required.
-* `NICMANAGER_API_USERNAME` - Username, used for Username-based login.
-
-* `NICMANAGER_API_MODE` - mode: 'anycast' or 'zone' (default: 'anycast').
-* `NICMANAGER_API_OTP` - TOTP Secret (optional).
-* `NICMANAGER_HTTP_TIMEOUT` - API request timeout.
-* `NICMANAGER_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NICMANAGER_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NICMANAGER_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-You can log in using your account name + username or using your email address.
-Optionally if TOTP is configured for your account, set `NICMANAGER_API_OTP`.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-nifcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nifcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-nifcloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nifcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "nifcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# NIFCloud DNS Challenge Provider
-
-The `nifcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[NIFCloud](https://www.nifcloud.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "nifcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NIFCLOUD_ACCESS_KEY_ID` - Access key.
-* `NIFCLOUD_SECRET_ACCESS_KEY` - Secret access key.
-
-* `NIFCLOUD_HTTP_TIMEOUT` - API request timeout.
-* `NIFCLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NIFCLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NIFCLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-njalla.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-njalla.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-njalla.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-njalla.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "njalla"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Njalla DNS Challenge Provider
-
-The `njalla` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Njalla](https://njal.la).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "njalla"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NJALLA_TOKEN` - API token.
-
-* `NJALLA_HTTP_TIMEOUT` - API request timeout.
-* `NJALLA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NJALLA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NJALLA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-nodion.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nodion.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-nodion.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-nodion.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "nodion"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Nodion DNS Challenge Provider
-
-The `nodion` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Nodion](https://www.nodion.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "nodion"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NODION_API_TOKEN` - The API token.
-
-* `NODION_HTTP_TIMEOUT` - API request timeout.
-* `NODION_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NODION_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NODION_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ns1.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ns1.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ns1.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ns1.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "ns1"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# NS1 DNS Challenge Provider
-
-The `ns1` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[NS1](https://ns1.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ns1"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `NS1_API_KEY` - API key.
-
-* `NS1_HTTP_TIMEOUT` - API request timeout.
-* `NS1_POLLING_INTERVAL` - Time between DNS propagation check.
-* `NS1_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `NS1_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-oraclecloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-oraclecloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-oraclecloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-oraclecloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "oraclecloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Oracle Cloud DNS Challenge Provider
-
-The `oraclecloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Oracle Cloud](https://cloud.oracle.com/home).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "oraclecloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `OCI_COMPARTMENT_OCID` - Compartment OCID.
-* `OCI_PRIVKEY_FILE` - Private key file.
-* `OCI_PRIVKEY_PASS` - Private key password.
-* `OCI_PUBKEY_FINGERPRINT` - Public key fingerprint.
-* `OCI_REGION` - Region.
-* `OCI_TENANCY_OCID` - Tenancy OCID.
-* `OCI_USER_OCID` - User OCID.
-
-* `OCI_POLLING_INTERVAL` - Time between DNS propagation check.
-* `OCI_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `OCI_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-otc.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-otc.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-otc.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-otc.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "otc"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Open Telekom Cloud DNS Challenge Provider
-
-The `otc` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Open Telekom Cloud](https://cloud.telekom.de/en).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "otc"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `OTC_DOMAIN_NAME` - Domain name.
-* `OTC_IDENTITY_ENDPOINT` - Identity endpoint URL.
-* `OTC_PASSWORD` - Password.
-* `OTC_PROJECT_NAME` - Project name.
-* `OTC_USER_NAME` - User name.
-
-* `OTC_HTTP_TIMEOUT` - API request timeout.
-* `OTC_POLLING_INTERVAL` - Time between DNS propagation check.
-* `OTC_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `OTC_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `OTC_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ovh.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ovh.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ovh.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ovh.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,81 +0,0 @@
----
-page_title: "ovh"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# OVH DNS Challenge Provider
-
-The `ovh` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[OVH](https://www.ovh.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ovh"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `OVH_APPLICATION_KEY` - Application key.
-* `OVH_APPLICATION_SECRET` - Application secret.
-* `OVH_CONSUMER_KEY` - Consumer key.
-* `OVH_ENDPOINT` - Endpoint URL (ovh-eu or ovh-ca).
-
-* `OVH_HTTP_TIMEOUT` - API request timeout.
-* `OVH_POLLING_INTERVAL` - Time between DNS propagation check.
-* `OVH_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `OVH_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Application Key and Secret
-
-Application key and secret can be created by following the [OVH guide](https://docs.ovh.com/gb/en/customer/first-steps-with-ovh-api/).
-
-When requesting the consumer key, the following configuration can be used to define access rights:
-
-```json
-{
-  "accessRules": [
-    {
-      "method": "POST",
-      "path": "/domain/zone/*"
-    },
-    {
-      "method": "DELETE",
-      "path": "/domain/zone/*"
-    }
-  ]
-}
-```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-pdns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-pdns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-pdns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-pdns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,69 +0,0 @@
----
-page_title: "pdns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# PowerDNS DNS Challenge Provider
-
-The `pdns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[PowerDNS](https://www.powerdns.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "pdns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `PDNS_API_KEY` - API key.
-* `PDNS_API_URL` - API URL.
-
-* `PDNS_API_VERSION` - Skip API version autodetection and use the provided version number..
-* `PDNS_HTTP_TIMEOUT` - API request timeout.
-* `PDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `PDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `PDNS_SERVER_NAME` - Name of the server in the URL, 'localhost' by default.
-* `PDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Information
-
-Tested and confirmed to work with PowerDNS authoritative server 3.4.8 and 4.0.1. Refer to [PowerDNS documentation](https://doc.powerdns.com/md/httpapi/README/) instructions on how to enable the built-in API interface.
-
-PowerDNS Notes:
-- PowerDNS API does not currently support SSL, therefore you should take care to ensure that traffic between lego and the PowerDNS API is over a trusted network, VPN etc.
-- In order to have the SOA serial automatically increment each time the `_acme-challenge` record is added/modified via the API, set `SOA-EDIT-API` to `INCEPTION-INCREMENT` for the zone in the `domainmetadata` table
-- Some PowerDNS servers doesn't have root API endpoints enabled and API version autodetection will not work. In that case version number can be defined using `PDNS_API_VERSION`.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-plesk.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-plesk.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-plesk.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-plesk.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "plesk"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# plesk.com DNS Challenge Provider
-
-The `plesk` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[plesk.com](https://www.plesk.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "plesk"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `PLESK_PASSWORD` - API password.
-* `PLESK_SERVER_BASE_URL` - Base URL of the server (ex: https://plesk.myserver.com:8443).
-* `PLESK_USERNAME` - API username.
-
-* `PLESK_HTTP_TIMEOUT` - API request timeout.
-* `PLESK_POLLING_INTERVAL` - Time between DNS propagation check.
-* `PLESK_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `PLESK_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-porkbun.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-porkbun.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-porkbun.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-porkbun.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "porkbun"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Porkbun DNS Challenge Provider
-
-The `porkbun` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Porkbun](https://porkbun.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "porkbun"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `PORKBUN_API_KEY` - API key.
-* `PORKBUN_SECRET_API_KEY` - secret API key.
-
-* `PORKBUN_HTTP_TIMEOUT` - API request timeout.
-* `PORKBUN_POLLING_INTERVAL` - Time between DNS propagation check.
-* `PORKBUN_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `PORKBUN_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-rackspace.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rackspace.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-rackspace.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rackspace.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "rackspace"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Rackspace DNS Challenge Provider
-
-The `rackspace` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Rackspace](https://www.rackspace.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "rackspace"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `RACKSPACE_API_KEY` - API key.
-* `RACKSPACE_USER` - API user.
-
-* `RACKSPACE_HTTP_TIMEOUT` - API request timeout.
-* `RACKSPACE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `RACKSPACE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `RACKSPACE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-rcodezero.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rcodezero.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-rcodezero.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rcodezero.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,65 +0,0 @@
----
-page_title: "rcodezero"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# RcodeZero DNS Challenge Provider
-
-The `rcodezero` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[RcodeZero](https://www.rcodezero.at/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "rcodezero"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `RCODEZERO_API_TOKEN` - API token.
-
-* `RCODEZERO_HTTP_TIMEOUT` - API request timeout.
-* `RCODEZERO_POLLING_INTERVAL` - Time between DNS propagation check.
-* `RCODEZERO_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `RCODEZERO_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-Generate your API Token via https://my.rcodezero.at with the `ACME` permissions.
-These are special tokens with limited access for ACME requests only.
-
-RcodeZero is an Anycast Network so the distribution of the DNS01-Challenge can take up to 2 minutes.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-regru.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-regru.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-regru.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-regru.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "regru"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# reg.ru DNS Challenge Provider
-
-The `regru` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[reg.ru](https://www.reg.ru/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "regru"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `REGRU_PASSWORD` - API password.
-* `REGRU_USERNAME` - API username.
-
-* `REGRU_HTTP_TIMEOUT` - API request timeout.
-* `REGRU_POLLING_INTERVAL` - Time between DNS propagation check.
-* `REGRU_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `REGRU_TLS_CERT` - authentication certificate.
-* `REGRU_TLS_KEY` - authentication private key.
-* `REGRU_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-rfc2136.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rfc2136.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-rfc2136.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rfc2136.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "rfc2136"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# RFC2136 DNS Challenge Provider
-
-The `rfc2136` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[RFC2136](https://www.rfc-editor.org/rfc/rfc2136.html).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "rfc2136"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `RFC2136_NAMESERVER` - Network address in the form "host" or "host:port".
-* `RFC2136_TSIG_ALGORITHM` - TSIG algorithm. See [miekg/dns#tsig.go](https://github.com/miekg/dns/blob/master/tsig.go) for supported values. To disable TSIG authentication, leave the `RFC2136_TSIG*` variables unset..
-* `RFC2136_TSIG_KEY` - Name of the secret key as defined in DNS server configuration. To disable TSIG authentication, leave the `RFC2136_TSIG*` variables unset..
-* `RFC2136_TSIG_SECRET` - Secret key payload. To disable TSIG authentication, leave the` RFC2136_TSIG*` variables unset..
-
-* `RFC2136_DNS_TIMEOUT` - API request timeout.
-* `RFC2136_POLLING_INTERVAL` - Time between DNS propagation check.
-* `RFC2136_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `RFC2136_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `RFC2136_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-rimuhosting.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rimuhosting.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-rimuhosting.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-rimuhosting.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "rimuhosting"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# RimuHosting DNS Challenge Provider
-
-The `rimuhosting` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[RimuHosting](https://rimuhosting.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "rimuhosting"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `RIMUHOSTING_API_KEY` - User API key.
-
-* `RIMUHOSTING_HTTP_TIMEOUT` - API request timeout.
-* `RIMUHOSTING_POLLING_INTERVAL` - Time between DNS propagation check.
-* `RIMUHOSTING_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `RIMUHOSTING_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-route53.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-route53.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-route53.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-route53.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,172 +0,0 @@
----
-page_title: "route53"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Amazon Route 53 DNS Challenge Provider
-
-The `route53` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Amazon Route 53](https://aws.amazon.com/route53/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "route53"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `AWS_ACCESS_KEY_ID` - Managed by the AWS client. Access key ID (`AWS_ACCESS_KEY_ID_FILE` is not supported, use `AWS_SHARED_CREDENTIALS_FILE` instead).
-* `AWS_ASSUME_ROLE_ARN` - Managed by the AWS Role ARN (`AWS_ASSUME_ROLE_ARN_FILE` is not supported).
-* `AWS_EXTERNAL_ID` - Managed by STS AssumeRole API operation (`AWS_EXTERNAL_ID_FILE` is not supported).
-* `AWS_HOSTED_ZONE_ID` - Override the hosted zone ID..
-* `AWS_PROFILE` - Managed by the AWS client (`AWS_PROFILE_FILE` is not supported).
-* `AWS_REGION` - Managed by the AWS client (`AWS_REGION_FILE` is not supported).
-* `AWS_SDK_LOAD_CONFIG` - Managed by the AWS client. Retrieve the region from the CLI config file (`AWS_SDK_LOAD_CONFIG_FILE` is not supported).
-* `AWS_SECRET_ACCESS_KEY` - Managed by the AWS client. Secret access key (`AWS_SECRET_ACCESS_KEY_FILE` is not supported, use `AWS_SHARED_CREDENTIALS_FILE` instead).
-
-* `AWS_MAX_RETRIES` - The number of maximum returns the service will use to make an individual API request.
-* `AWS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `AWS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `AWS_SHARED_CREDENTIALS_FILE` - Managed by the AWS client. Shared credentials file..
-* `AWS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Description
-
-AWS Credentials are automatically detected in the following locations and prioritized in the following order:
-
-1. Environment variables: `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`, [`AWS_SESSION_TOKEN`]
-2. Shared credentials file (defaults to `~/.aws/credentials`, profiles can be specified using `AWS_PROFILE`)
-3. Amazon EC2 IAM role
-
-The AWS Region is automatically detected in the following locations and prioritized in the following order:
-
-1. Environment variables: `AWS_REGION`
-2. Shared configuration file if `AWS_SDK_LOAD_CONFIG` is set (defaults to `~/.aws/config`, profiles can be specified using `AWS_PROFILE`)
-
-If `AWS_HOSTED_ZONE_ID` is not set, Lego tries to determine the correct public hosted zone via the FQDN.
-
-See also:
-
-- [sessions](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/sessions.html)
-- [Setting AWS Credentials](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials)
-- [Setting AWS Region](https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-the-region)
-
-## IAM Policy Examples
-
-### Broad privileges for testing purposes
-
-The following [IAM policy](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html) document grants access to the required APIs needed by lego to complete the DNS challenge.
-A word of caution:
-These permissions grant write access to any DNS record in any hosted zone,
-so it is recommended to narrow them down as much as possible if you are using this policy in production.
-
-```json
-{
-  "Version": "2012-10-17",
-  "Statement": [
-    {
-      "Effect": "Allow",
-      "Action": [
-        "route53:GetChange",
-        "route53:ChangeResourceRecordSets",
-        "route53:ListResourceRecordSets"
-      ],
-      "Resource": [
-        "arn:aws:route53:::hostedzone/*",
-        "arn:aws:route53:::change/*"
-      ]
-    },
-    {
-      "Effect": "Allow",
-      "Action": "route53:ListHostedZonesByName",
-      "Resource": "*"
-    }
-  ]
-}
-```
-
-### Least privilege policy for production purposes
-
-The following AWS IAM policy document describes the least privilege permissions required for lego to complete the DNS challenge.
-Write access is limited to a specified hosted zone's DNS TXT records with a key of `_acme-challenge.example.com`.
-Replace `Z11111112222222333333` with your hosted zone ID and `example.com` with your domain name to use this policy.
-
-```json
-{
-  "Version": "2012-10-17",
-  "Statement": [
-    {
-      "Effect": "Allow",
-      "Action": "route53:GetChange",
-      "Resource": "arn:aws:route53:::change/*"
-    },
-    {
-      "Effect": "Allow",
-      "Action": "route53:ListHostedZonesByName",
-      "Resource": "*"
-    },
-    {
-      "Effect": "Allow",
-      "Action": [
-        "route53:ListResourceRecordSets"
-      ],
-      "Resource": [
-        "arn:aws:route53:::hostedzone/Z11111112222222333333"
-      ]
-    },
-    {
-      "Effect": "Allow",
-      "Action": [
-        "route53:ChangeResourceRecordSets"
-      ],
-      "Resource": [
-        "arn:aws:route53:::hostedzone/Z11111112222222333333"
-      ],
-      "Condition": {
-        "ForAllValues:StringEquals": {
-          "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
-            "_acme-challenge.example.com"
-          ],
-          "route53:ChangeResourceRecordSetsRecordTypes": [
-            "TXT"
-          ]
-        }
-      }
-    }
-  ]
-}
-```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-safedns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-safedns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-safedns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-safedns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "safedns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# UKFast SafeDNS DNS Challenge Provider
-
-The `safedns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[UKFast SafeDNS](https://www.ukfast.co.uk/dns-hosting.html).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "safedns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SAFEDNS_AUTH_TOKEN` - Authentication token.
-
-* `SAFEDNS_HTTP_TIMEOUT` - API request timeout.
-* `SAFEDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SAFEDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SAFEDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-sakuracloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-sakuracloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-sakuracloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-sakuracloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "sakuracloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Sakura Cloud DNS Challenge Provider
-
-The `sakuracloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Sakura Cloud](https://cloud.sakura.ad.jp/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "sakuracloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SAKURACLOUD_ACCESS_TOKEN` - Access token.
-* `SAKURACLOUD_ACCESS_TOKEN_SECRET` - Access token secret.
-
-* `SAKURACLOUD_HTTP_TIMEOUT` - API request timeout.
-* `SAKURACLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SAKURACLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SAKURACLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-scaleway.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-scaleway.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-scaleway.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-scaleway.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "scaleway"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Scaleway DNS Challenge Provider
-
-The `scaleway` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Scaleway](https://developers.scaleway.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "scaleway"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SCALEWAY_API_TOKEN` - API token.
-* `SCALEWAY_PROJECT_ID` - Project to use (optional).
-
-* `SCALEWAY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SCALEWAY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SCALEWAY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-selectel.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-selectel.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-selectel.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-selectel.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "selectel"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Selectel DNS Challenge Provider
-
-The `selectel` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Selectel](https://kb.selectel.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "selectel"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SELECTEL_API_TOKEN` - API token.
-
-* `SELECTEL_BASE_URL` - API endpoint URL.
-* `SELECTEL_HTTP_TIMEOUT` - API request timeout.
-* `SELECTEL_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SELECTEL_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SELECTEL_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-servercow.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-servercow.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-servercow.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-servercow.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "servercow"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Servercow DNS Challenge Provider
-
-The `servercow` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Servercow](https://servercow.de/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "servercow"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SERVERCOW_PASSWORD` - API password.
-* `SERVERCOW_USERNAME` - API username.
-
-* `SERVERCOW_HTTP_TIMEOUT` - API request timeout.
-* `SERVERCOW_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SERVERCOW_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SERVERCOW_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-shellrent.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-shellrent.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-shellrent.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-shellrent.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "shellrent"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Shellrent DNS Challenge Provider
-
-The `shellrent` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Shellrent](https://www.shellrent.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "shellrent"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SHELLRENT_TOKEN` - Token.
-* `SHELLRENT_USERNAME` - Username.
-
-* `SHELLRENT_HTTP_TIMEOUT` - API request timeout.
-* `SHELLRENT_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SHELLRENT_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SHELLRENT_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-simply.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-simply.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-simply.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-simply.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "simply"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Simply.com DNS Challenge Provider
-
-The `simply` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Simply.com](https://www.simply.com/en/domains/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "simply"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SIMPLY_ACCOUNT_NAME` - Account name.
-* `SIMPLY_API_KEY` - API key.
-
-* `SIMPLY_HTTP_TIMEOUT` - API request timeout.
-* `SIMPLY_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SIMPLY_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SIMPLY_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-sonic.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-sonic.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-sonic.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-sonic.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,76 +0,0 @@
----
-page_title: "sonic"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Sonic DNS Challenge Provider
-
-The `sonic` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Sonic](https://www.sonic.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "sonic"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SONIC_API_KEY` - API Key.
-* `SONIC_USER_ID` - User ID.
-
-* `SONIC_HTTP_TIMEOUT` - API request timeout.
-* `SONIC_POLLING_INTERVAL` - Time between DNS propagation check.
-* `SONIC_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `SONIC_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `SONIC_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## API keys
-
-The API keys must be generated by calling the `dyndns/api_key` endpoint.
-
-Example:
-
-```bash
-$ curl -X POST -H "Content-Type: application/json" --data '{"username":"notarealuser","password":"notarealpassword","hostname":"example.com"}' https://public-api.sonic.net/dyndns/api_key
-{"userid":"12345","apikey":"4d6fbf2f9ab0fa11697470918d37625851fc0c51","result":200,"message":"OK"}
-```
-
-See https://public-api.sonic.net/dyndns/#requesting_an_api_key for additional details.
-
-This `userid` and `apikey` combo allow modifications to any DNS entries connected to the managed domain (hostname).
-
-Hostname should be the toplevel domain managed e.g. `example.com` not `www.example.com`.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-stackpath.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-stackpath.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-stackpath.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-stackpath.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "stackpath"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Stackpath DNS Challenge Provider
-
-The `stackpath` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Stackpath](https://www.stackpath.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "stackpath"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `STACKPATH_CLIENT_ID` - Client ID.
-* `STACKPATH_CLIENT_SECRET` - Client secret.
-* `STACKPATH_STACK_ID` - Stack ID.
-
-* `STACKPATH_POLLING_INTERVAL` - Time between DNS propagation check.
-* `STACKPATH_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `STACKPATH_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-tencentcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-tencentcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-tencentcloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-tencentcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "tencentcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Tencent Cloud DNS DNS Challenge Provider
-
-The `tencentcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Tencent Cloud DNS](https://cloud.tencent.com/product/cns).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "tencentcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `TENCENTCLOUD_SECRET_ID` - Access key ID.
-* `TENCENTCLOUD_SECRET_KEY` - Access Key secret.
-
-* `TENCENTCLOUD_HTTP_TIMEOUT` - API request timeout.
-* `TENCENTCLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `TENCENTCLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `TENCENTCLOUD_REGION` - Region.
-* `TENCENTCLOUD_SESSION_TOKEN` - Access Key token.
-* `TENCENTCLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-transip.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-transip.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-transip.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-transip.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "transip"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# TransIP DNS Challenge Provider
-
-The `transip` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[TransIP](https://www.transip.nl/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "transip"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `TRANSIP_ACCOUNT_NAME` - Account name.
-* `TRANSIP_PRIVATE_KEY_PATH` - Private key path.
-
-* `TRANSIP_POLLING_INTERVAL` - Time between DNS propagation check.
-* `TRANSIP_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `TRANSIP_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-ultradns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ultradns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-ultradns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-ultradns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "ultradns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Ultradns DNS Challenge Provider
-
-The `ultradns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Ultradns](https://vercara.com/authoritative-dns).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "ultradns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ULTRADNS_PASSWORD` - API Password.
-* `ULTRADNS_USERNAME` - API Username.
-
-* `ULTRADNS_ENDPOINT` - API endpoint URL, defaults to https://api.ultradns.com/.
-* `ULTRADNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ULTRADNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `ULTRADNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-variomedia.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-variomedia.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-variomedia.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-variomedia.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "variomedia"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Variomedia DNS Challenge Provider
-
-The `variomedia` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Variomedia](https://www.variomedia.de/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "variomedia"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VARIOMEDIA_API_TOKEN` - API token.
-
-* `DODE_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `VARIOMEDIA_HTTP_TIMEOUT` - API request timeout.
-* `VARIOMEDIA_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VARIOMEDIA_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VARIOMEDIA_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vegadns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vegadns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vegadns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vegadns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "vegadns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# VegaDNS DNS Challenge Provider
-
-The `vegadns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[VegaDNS](https://github.com/shupp/VegaDNS-API).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vegadns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `SECRET_VEGADNS_KEY` - API key.
-* `SECRET_VEGADNS_SECRET` - API secret.
-* `VEGADNS_URL` - API endpoint URL.
-
-* `VEGADNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VEGADNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VEGADNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vercel.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vercel.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vercel.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vercel.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "vercel"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Vercel DNS Challenge Provider
-
-The `vercel` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Vercel](https://vercel.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vercel"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VERCEL_API_TOKEN` - Authentication token.
-
-* `VERCEL_HTTP_TIMEOUT` - API request timeout.
-* `VERCEL_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VERCEL_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VERCEL_TEAM_ID` - Team ID (ex: team_xxxxxxxxxxxxxxxxxxxxxxxx).
-* `VERCEL_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-versio.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-versio.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-versio.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-versio.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,62 +0,0 @@
----
-page_title: "versio"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Versio.[nl|eu|uk] DNS Challenge Provider
-
-The `versio` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Versio.[nl|eu|uk]](https://www.versio.nl/domeinnamen).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "versio"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VERSIO_PASSWORD` - Basic authentication password.
-* `VERSIO_USERNAME` - Basic authentication username.
-
-* `VERSIO_ENDPOINT` - The endpoint URL of the API Server.
-* `VERSIO_HTTP_TIMEOUT` - API request timeout.
-* `VERSIO_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VERSIO_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VERSIO_SEQUENCE_INTERVAL` - Time between sequential requests, default 60s.
-* `VERSIO_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-To test with the sandbox environment set ```VERSIO_ENDPOINT=https://www.versio.nl/testapi/v1/```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vinyldns.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vinyldns.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vinyldns.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vinyldns.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
----
-page_title: "vinyldns"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# VinylDNS DNS Challenge Provider
-
-The `vinyldns` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[VinylDNS](https://www.vinyldns.io).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vinyldns"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VINYLDNS_ACCESS_KEY` - The VinylDNS API key.
-* `VINYLDNS_HOST` - The VinylDNS API URL.
-* `VINYLDNS_SECRET_KEY` - The VinylDNS API Secret key.
-
-* `VINYLDNS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VINYLDNS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VINYLDNS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-The vinyldns integration makes use of dotted hostnames to ease permission management.
-Users are required to have DELETE ACL level or zone admin permissions on the VinylDNS zone containing the target host.
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vkcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vkcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vkcloud.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vkcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,72 +0,0 @@
----
-page_title: "vkcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# VK Cloud DNS Challenge Provider
-
-The `vkcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[VK Cloud](https://mcs.mail.ru/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vkcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VK_CLOUD_PASSWORD` - Password for VK Cloud account.
-* `VK_CLOUD_PROJECT_ID` - String ID of project in VK Cloud.
-* `VK_CLOUD_USERNAME` - Email of VK Cloud account.
-
-* `VK_CLOUD_DNS_ENDPOINT` - URL of DNS API. Defaults to https://mcs.mail.ru/public-dns but can be changed for usage with private clouds.
-* `VK_CLOUD_DOMAIN_NAME` - Openstack users domain name. Defaults to `users` but can be changed for usage with private clouds.
-* `VK_CLOUD_IDENTITY_ENDPOINT` - URL of OpenStack Auth API, Defaults to https://infra.mail.ru:35357/v3/ but can be changed for usage with private clouds.
-* `VK_CLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VK_CLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VK_CLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## Credential information
-
-You can find all required and additional information on ["Project/Keys" page](https://mcs.mail.ru/app/en/project/keys) of your cloud.
-
-| ENV Variable               | Parameter from page |
-|----------------------------|---------------------|
-| VK_CLOUD_PROJECT_ID        | Project ID          |
-| VK_CLOUD_USERNAME          | Username            |
-| VK_CLOUD_DOMAIN_NAME       | User Domain Name    |
-| VK_CLOUD_IDENTITY_ENDPOINT | Identity endpoint   |
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vscale.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vscale.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vscale.md	2024-04-26 18:07:21.597802945 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vscale.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "vscale"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Vscale DNS Challenge Provider
-
-The `vscale` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Vscale](https://vscale.io/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vscale"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VSCALE_API_TOKEN` - API token.
-
-* `VSCALE_BASE_URL` - API endpoint URL.
-* `VSCALE_HTTP_TIMEOUT` - API request timeout.
-* `VSCALE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VSCALE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VSCALE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-vultr.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vultr.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-vultr.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-vultr.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "vultr"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Vultr DNS Challenge Provider
-
-The `vultr` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Vultr](https://www.vultr.com/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "vultr"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `VULTR_API_KEY` - API key.
-
-* `VULTR_HTTP_TIMEOUT` - API request timeout.
-* `VULTR_POLLING_INTERVAL` - Time between DNS propagation check.
-* `VULTR_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `VULTR_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-webnames.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-webnames.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-webnames.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-webnames.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,63 +0,0 @@
----
-page_title: "webnames"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Webnames DNS Challenge Provider
-
-The `webnames` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Webnames](https://www.webnames.ru/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "webnames"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `WEBNAMES_API_KEY` - Domain API key.
-
-* `WEBNAMES_HTTP_TIMEOUT` - API request timeout.
-* `WEBNAMES_POLLING_INTERVAL` - Time between DNS propagation check.
-* `WEBNAMES_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `WEBNAMES_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## API Key
-
-To obtain the key, you need to change the DNS server to `*.nameself.com`: Personal account / My domains and services / Select the required domain / DNS servers
-
-The API key can be found: Personal account / My domains and services / Select the required domain / Zone management / acme.sh or certbot settings
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-websupport.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-websupport.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-websupport.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-websupport.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "websupport"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Websupport DNS Challenge Provider
-
-The `websupport` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Websupport](https://websupport.sk).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "websupport"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `WEBSUPPORT_API_KEY` - API key.
-* `WEBSUPPORT_SECRET` - API secret.
-
-* `WEBSUPPORT_HTTP_TIMEOUT` - API request timeout.
-* `WEBSUPPORT_POLLING_INTERVAL` - Time between DNS propagation check.
-* `WEBSUPPORT_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `WEBSUPPORT_SEQUENCE_INTERVAL` - Time between sequential requests.
-* `WEBSUPPORT_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-wedos.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-wedos.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-wedos.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-wedos.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "wedos"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# WEDOS DNS Challenge Provider
-
-The `wedos` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[WEDOS](https://www.wedos.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "wedos"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `WEDOS_USERNAME` - Username is the same as for the admin account.
-* `WEDOS_WAPI_PASSWORD` - Password needs to be generated and IP allowed in the admin interface.
-
-* `WEDOS_HTTP_TIMEOUT` - API request timeout.
-* `WEDOS_POLLING_INTERVAL` - Time between DNS propagation check.
-* `WEDOS_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `WEDOS_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-yandex360.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandex360.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-yandex360.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandex360.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,59 +0,0 @@
----
-page_title: "yandex360"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Yandex 360 DNS Challenge Provider
-
-The `yandex360` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Yandex 360](https://360.yandex.ru).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "yandex360"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `YANDEX360_OAUTH_TOKEN` - The OAuth Token.
-* `YANDEX360_ORG_ID` - The organization ID.
-
-* `YANDEX360_HTTP_TIMEOUT` - API request timeout.
-* `YANDEX360_POLLING_INTERVAL` - Time between DNS propagation check.
-* `YANDEX360_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `YANDEX360_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-yandexcloud.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandexcloud.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-yandexcloud.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandexcloud.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,67 +0,0 @@
----
-page_title: "yandexcloud"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Yandex Cloud DNS Challenge Provider
-
-The `yandexcloud` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Yandex Cloud](https://cloud.yandex.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "yandexcloud"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `YANDEX_CLOUD_FOLDER_ID` - The string id of folder (aka project) in Yandex Cloud.
-* `YANDEX_CLOUD_IAM_TOKEN` - The base64 encoded json which contains information about iam token of service account with `dns.admin` permissions.
-
-* `YANDEX_CLOUD_POLLING_INTERVAL` - Time between DNS propagation check.
-* `YANDEX_CLOUD_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `YANDEX_CLOUD_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-## IAM Token
-
-The simplest way to retrieve IAM access token is usage of yc-cli,
-follow [docs](https://cloud.yandex.ru/docs/iam/operations/iam-token/create-for-sa) to get it
-
-```bash
-yc iam key create --service-account-name my-robot --output key.json
-cat key.json | base64
-```
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-yandex.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandex.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-yandex.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-yandex.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "yandex"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Yandex PDD DNS Challenge Provider
-
-The `yandex` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Yandex PDD](https://pdd.yandex.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "yandex"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `YANDEX_PDD_TOKEN` - Basic authentication username.
-
-* `YANDEX_HTTP_TIMEOUT` - API request timeout.
-* `YANDEX_POLLING_INTERVAL` - Time between DNS propagation check.
-* `YANDEX_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `YANDEX_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-zoneee.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-zoneee.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-zoneee.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-zoneee.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
----
-page_title: "zoneee"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Zone.ee DNS Challenge Provider
-
-The `zoneee` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Zone.ee](https://www.zone.ee/).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "zoneee"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ZONEEE_API_KEY` - API key.
-* `ZONEEE_API_USER` - API user.
-
-* `ZONEEE_ENDPOINT` - API endpoint URL.
-* `ZONEEE_HTTP_TIMEOUT` - API request timeout.
-* `ZONEEE_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ZONEEE_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `ZONEEE_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/guides/dns-providers-zonomi.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-zonomi.md
--- ./vancluever/v2.21.0/docs/guides/dns-providers-zonomi.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/guides/dns-providers-zonomi.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
----
-page_title: "zonomi"
-subcategory: "DNS Providers"
----
-
--> The following documentation is auto-generated from the ACME
-provider's API library [lego](https://go-acme.github.io/lego/).  Some
-sections may refer to lego directly - in most cases, these sections
-apply to the Terraform provider as well.
-
-# Zonomi DNS Challenge Provider
-
-The `zonomi` DNS challenge provider can be used to perform DNS challenges for
-the [`acme_certificate`][resource-acme-certificate] resource with
-[Zonomi](https://zonomi.com).
-
-[resource-acme-certificate]: ../resources/certificate.md
-
-For complete information on how to use this provider with the `acme_certifiate`
-resource, see [here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenges]: ../resources/certificate.md#using-dns-challenges
-
-## Example
-
-```hcl
-resource "acme_certificate" "certificate" {
-  ...
-
-  dns_challenge {
-    provider = "zonomi"
-  }
-}
-```
-## Argument Reference
-
-The following arguments can be either passed as environment variables, or
-directly through the `config` block in the
-[`dns_challenge`][resource-acme-certificate-dns-challenge-arg] argument in the
-[`acme_certificate`][resource-acme-certificate] resource. For more details, see
-[here][resource-acme-certificate-dns-challenges].
-
-[resource-acme-certificate-dns-challenge-arg]: ../resources/certificate.md#dns_challenge
-
-In addition, arguments can also be stored in a local file, with the path
-supplied by supplying the argument with the `_FILE` suffix. See
-[here][acme-certificate-file-arg-example] for more information.
-
-[acme-certificate-file-arg-example]: ../resources/certificate.md#using-variable-files-for-provider-arguments
-
-* `ZONOMI_API_KEY` - User API key.
-
-* `ZONOMI_HTTP_TIMEOUT` - API request timeout.
-* `ZONOMI_POLLING_INTERVAL` - Time between DNS propagation check.
-* `ZONOMI_PROPAGATION_TIMEOUT` - Maximum waiting time for DNS propagation.
-* `ZONOMI_TTL` - The TTL of the TXT record used for the DNS challenge.
-
-
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/index.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/index.md
--- ./vancluever/v2.21.0/docs/index.md	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/index.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,93 +0,0 @@
-# ACME Certificate and Account Provider
-
-The Automated Certificate Management Environment (ACME) is an evolving standard
-for the automation of a domain-validated certificate authority. Clients register
-themselves on an authority using a private key and contact information, and
-answer challenges for domains that they own by supplying response data issued by
-the authority via either HTTP or DNS. Via this process, they prove that they own
-the domains in question, and can then request certificates for them via the CA.
-No part of this process requires user interaction, a traditional blocker in
-obtaining a domain validated certificate.
-
-Currently the major ACME CA is [Let's Encrypt][lets-encrypt], but the ACME
-support in Terraform can be configured to use any ACME CA, including an
-internal one that is set up using [Boulder][boulder-gh], or another CA
-that implements the ACME standard with Let's Encrypt's
-[divergences][lets-encrypt-divergences].
-
-[lets-encrypt]: https://letsencrypt.org
-[boulder-gh]: https://github.com/letsencrypt/boulder
-[lets-encrypt-divergences]: https://github.com/letsencrypt/boulder/blob/master/docs/acme-divergences.md
-
-For more detail on the ACME process, see [here][lets-encrypt-how-it-works]. For
-the ACME spec, click [here][about-acme]. Note that as mentioned in the last
-paragraph, the ACME provider may [diverge][lets-encrypt-divergences] from the
-current ACME spec to account for the real-world divergences that are made by
-CAs such as Let's Encrypt.
-
-[lets-encrypt-how-it-works]: https://letsencrypt.org/how-it-works/
-[about-acme]: https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html
-
-## Basic Example
-
-The following example can be used to create an account using the
-[`acme_registration`][resource-acme-registration] resource, and a certificate
-using the [`acme_certificate`][resource-acme-certificate] resource. The
-initial private key is created using the
-[`tls_private_key`][resource-tls-private-key] resource, but can be supplied via
-other means. DNS validation is performed by using [Amazon Route 53][aws-route-53],
-for which appropriate credentials are assumed to be in your environment.
-
-[resource-acme-registration]: ./resources/registration.md
-[resource-acme-certificate]: ./resources/certificate.md
-[resource-tls-private-key]: https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/private_key
-[aws-route-53]: https://aws.amazon.com/route53/
-
--> The directory URLs in all examples in this provider reference Let's Encrypt's
-staging server endpoint. For production use, change the directory URLs to the
-production endpoints, which can be found [here][lets-encrypt-endpoints].
-
-[lets-encrypt-endpoints]: https://letsencrypt.org/docs/acme-protocol-updates/
-
-```hcl
-terraform {
-  required_providers {
-    acme = {
-      source  = "Kid-debug/acme"
-      version = "~> 2.0"
-    }
-  }
-}
-
-provider "acme" {
-  server_url = "https://acme-staging-v02.api.letsencrypt.org/directory"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = tls_private_key.private_key.private_key_pem
-  email_address   = "nobody@example.com"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = acme_registration.reg.account_key_pem
-  common_name               = "www.example.com"
-  subject_alternative_names = ["www2.example.com"]
-
-  dns_challenge {
-    provider = "route53"
-  }
-}
-```
-
-## Argument Reference
-
-The following arguments are required:
-
-* `server_url` - (Required) The URL to the ACME endpoint's directory.
-
--> Note that the account key is not a provider-level config value at this time
-to allow the management of accounts and certificates within the same provider.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/lego.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/lego.md
--- ./vancluever/v2.21.0/docs/lego.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/lego.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,31 +0,0 @@
-# Submitting a lego Issue
-
-This provider integrates [lego](https://github.com/go-acme/lego) and ultimately
-uses its exported primitives in a Terraform context. A large number of the
-issues submitted to the Terraform ACME provider are actually issues related to
-lego, particularly its DNS providers.
-
-Before you submit an issue, especially if it is DNS provider related, please
-attempt to reproduce the issue with lego's CLI tool. DNS provider-related issues
-that are not very specifically related to how this provider interacts with lego
-will more than likely be closed with a referral
-back to lego.
-
-## Installing and Using lego
-
-You can view lego's installation instructions at
-https://go-acme.github.io/lego/installation/. See
-https://go-acme.github.io/lego/usage/cli/ for instructions on how to use the CLI
-tool itself.
-
-## Submitting an Issue to lego
-
-[lego's issue tracker](https://github.com/go-acme/lego/issues)
-
-You should also read their [contributing
-guidelines](https://github.com/go-acme/lego/blob/master/CONTRIBUTING.md) before
-submitting an issue.
-
-Remember that the lego maintainers are not responsible for this provider, as
-such it's important (and considerate!) that questions are framed in a
-lego-specific context.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/resources/certificate.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/resources/certificate.md
--- ./vancluever/v2.21.0/docs/resources/certificate.md	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/resources/certificate.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,634 +0,0 @@
-# acme_certificate
-
-The `acme_certificate` resource can be used to create and manage an ACME TLS
-certificate.
-
-## Example
-
-The below example creates both an account and certificate within the same
-configuration. The account is created using the
-[`acme_registration`][resource-registration] resource.
-
--> When creating accounts and certificates within the same configuration, ensure
-that you reference the
-[`account_key_pem`][resource-registration-account-key-pem] argument in the
-`acme_registration` resource as the corresponding
-[`account_key_pem`](#account_key_pem) argument in the `acme_certificate`
-resource. This will ensure that the account gets created before the certificate
-and avoid errors.
-
-[resource-registration]: ./registration.md
-[resource-registration-account-key-pem]: ./registration.md#account_key_pem
-
-```hcl
-provider "acme" {
-  server_url = "https://acme-staging-v02.api.letsencrypt.org/directory"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = tls_private_key.private_key.private_key_pem
-  email_address   = "nobody@example.com"
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem           = acme_registration.reg.account_key_pem
-  common_name               = "www.example.com"
-  subject_alternative_names = ["www2.example.com"]
-
-  dns_challenge {
-    provider = "route53"
-  }
-}
-```
-
-### Using an external CSR
-
-The `acme_certificate` resource can also take an external CSR. In this example,
-we create one using [`tls_cert_request`][tls-cert-request] first, before
-supplying it to the [`certificate_request_pem`](#certificate_request_pem)
-argument.
-
-[tls-cert-request]: https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/cert_request
-
--> **NOTE:** Some current ACME CA implementations (including Let's Encrypt)
-strip most of the organization information out of a certificate request
-subject.  You may wish to confirm with the CA what behavior to expect when
-using the `certificate_request_pem` argument with this resource.
-
-~> **NOTE:** It is not a good practice to use the same private key for both
-your account and your certificate. Make sure you use different keys.
-
-```hcl
-provider "acme" {
-  server_url = "https://acme-staging-v02.api.letsencrypt.org/directory"
-}
-
-resource "tls_private_key" "reg_private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = tls_private_key.reg_private_key.private_key_pem
-  email_address   = "nobody@example.com"
-}
-
-resource "tls_private_key" "cert_private_key" {
-  algorithm = "RSA"
-}
-
-resource "tls_cert_request" "req" {
-  key_algorithm   = "RSA"
-  private_key_pem = tls_private_key.cert_private_key.private_key_pem
-  dns_names       = ["www.example.com", "www2.example.com"]
-
-  subject {
-    common_name = "www.example.com"
-  }
-}
-
-resource "acme_certificate" "certificate" {
-  account_key_pem         = acme_registration.reg.account_key_pem
-  certificate_request_pem = tls_cert_request.req.cert_request_pem
-
-  dns_challenge {
-    provider = "route53"
-  }
-}
-```
-
-## Argument Reference
-
-The resource takes the following arguments:
-
--> At least one challenge type (`dns_challenge`, `http_challenge`,
-`http_webroot_challenge`, `http_memcached_challenge`, or `tls_challenge`) must
-be specified. It's recommended you use `dns_challenge` whenever possible).
-
-* `account_key_pem` (Required) - The private key of the account that is
-  requesting the certificate. Forces a new resource when changed.
-* `common_name` - The certificate's common name, the primary domain that the
-  certificate will be recognized for. Required when not specifying a CSR. Forces
-  a new resource when changed.
-* `subject_alternative_names` - The certificate's subject alternative names,
-  domains that this certificate will also be recognized for. Only valid when not
-  specifying a CSR. Forces a new resource when changed.
-* `key_type` - The key type for the certificate's private key. Can be one of:
-  `P256` and `P384` (for ECDSA keys of respective length) or `2048`, `4096`, and
-  `8192` (for RSA keys of respective length). Required when not specifying a
-  CSR. The default is `2048` (RSA key of 2048 bits). Forces a new resource when
-  changed.
-* `certificate_request_pem` - A pre-created certificate request, such as one
-  from [`tls_cert_request`][tls-cert-request], or one from an external source,
-  in PEM format.  Either this, or the in-resource request options
-  (`common_name`, `key_type`, and optionally `subject_alternative_names`) need
-  to be specified. Forces a new resource when changed.
-* `dns_challenge` (Optional) - The [DNS challenges](#using-dns-challenges) to
-  use in fulfilling the request.
-* `recursive_nameservers` (Optional) - The recursive nameservers that will be
-  used to check for propagation of DNS challenge records, in addition to some
-  in-provider checks such as zone detection. Defaults to your system-configured
-  DNS resolvers.
-* `disable_complete_propagation` (Optional) - Disable the requirement for full
-  propagation of the TXT challenge records before proceeding with validation.
-  Defaults to `false`.
-
--> See [About DNS propagation checks](#about-dns-propagation-checks) for details
-on the `recursive_nameservers` and `disable_complete_propagation` settings.
-
-* `pre_check_delay` (Optional) - Insert a delay after _every_ DNS challenge
-  record to allow for extra time for DNS propagation before the certificate is
-  requested. Use this option if you observe issues with requesting certificates
-  even when DNS challenge records get added successfully. Units are in seconds.
-  Defaults to 0 (no delay).
-
--> Be careful with `pre_check_delay` since the delay is executed _per-domain_.
-Take your expected delay and divide it by the number of domains you have
-configured (`common_name` + `subject_alternative_names`).
-
-* `http_challenge` (Optional) - Defines an HTTP challenge to use in fulfilling
-  the request.
-* `http_webroot_challenge` (Optional) - Defines an alternate type of HTTP
-  challenge that can be used to place a file at a location that can be served by
-  an out-of-band webserver.
-* `http_memcached_challenge` (Optional) - Defines an alternate type of HTTP
-  challenge that can be used to serve up challenges to a
-  [Memcached](https://memcached.org/) cluster.
-* `http_s3_challenge` (Optional) - Defines an alternate type of HTTP
-  challenge that can be used to serve up challenges to a
-  [S3](https://aws.amazon.com/s3/) bucket.
-* `tls_challenge` (Optional) - Defines a TLS challenge to use in fulfilling the
-  request.
-
--> Only one of `http_challenge`, `http_webroot_challenge`, `http_s3_challenge`
-and `http_memcached_challenge` can be defined at once. See the section on
-[Using HTTP and TLS challenges](#using-http-and-tls-challenges) for more
-details on using these and `tls_challenge`.
-
-* `must_staple` (Optional) Enables the [OCSP Stapling Required][ocsp-stapling]
-  TLS Security Policy extension. Certificates with this extension must include a
-  valid OCSP Staple in the TLS handshake for the connection to succeed.
-  Defaults to `false`. Note that this option has no effect when using an
-  external CSR - it must be enabled in the CSR itself. Forces a new resource
-  when changed.
-
-[ocsp-stapling]: https://letsencrypt.org/docs/integration-guide/#implement-ocsp-stapling
-
--> OCSP stapling requires specific webserver configuration to support the
-downloading of the staple from the CA's OCSP endpoints, and should be configured
-to tolerate prolonged outages of the OCSP service. Consider this when using
-`must_staple`, and only enable it if you are sure your webserver or service
-provider can be configured correctly.
-
-* `min_days_remaining` (Optional) - The minimum amount of days remaining on the
-  expiration of a certificate before a renewal is attempted. The default is
-  `30`. A value of less than `0` means that the certificate will never be
-  renewed.
-* `certificate_p12_password` - (Optional) Password to be used when generating
-  the PFX file stored in [`certificate_p12`](#certificate_p12). Defaults to an
-  empty string.
-* `preferred_chain` - (Optional) The common name of the root of a preferred
-  alternate certificate chain offered by the CA. The certificates in
-  `issuer_pem` will reflect the chain requested, if available, otherwise the
-  default chain will be provided. Forces a new resource when changed.
-
--> `preferred_chain` can be used to request alternate chains on Let's Encrypt
-during the transition away from their old cross-signed intermediates. See [this
-article for more
-details](https://letsencrypt.org/2020/12/21/extending-android-compatibility.html).
-In their example titled **"What about the alternate chain?"**, the root you
-would put in to the `preferred_chain` field would be `ISRG Root X1`. The
-equivalent in the [staging
-environment](https://letsencrypt.org/docs/staging-environment/) is `(STAGING)
-Pretend Pear X1`.
-
-* `revoke_certificate_on_destroy` - Enables revocation of a certificate upon destroy,
-which includes when a resource is re-created. Default is `true`.
-
-* `revoke_certificate_reason` - Some CA's require a reason for revocation to be provided.
-Use this reason (from [RFC 5280, section 5.3.1](https://www.rfc-editor.org/rfc/rfc5280#section-5.3.1).
-By default, no reason provided in revocation requests. The reason is a string, when provided should be one of:
-  * unspecified
-  * key-compromise
-  * ca-compromise
-  * affiliation-changed
-  * superseded
-  * cessation-of-operation
-  * certificate-hold
-  * remove-from-crl
-  * privilege-withdrawn
-  * aa-compromise
-
-* `cert_timeout` - Controls the timeout in seconds for certificate requests
-  that are made after challenges are complete. Defaults to 30 seconds.
-
--> As mentioned, `cert_timeout` does nothing until all challenges are complete.
-If you are looking to control timeouts related to a particular challenge (such
-as a DNS challenge), see that challenge provider's specific options.
-
-### Using DNS challenges
-
-This method authenticates certificate domains by requiring the requester to
-place a TXT record on the FQDNs in the certificate.
-
--> The ACME provider will automatically follow CNAME records when working to
-automatically resolve where to put the challenge record. For more details on
-this, you can look at the [lego page on the
-matter](https://go-acme.github.io/lego/usage/cli/options/#dns-resolvers-and-challenge-verification),
-for which the same logic applies.
-
-The ACME provider responds to DNS challenges automatically by utilizing one of
-the supported DNS challenge providers. Most providers take credentials as
-environment variables, but if you would rather use configuration for this
-purpose, you can by specifying `config` blocks within a
-[`dns_challenge`](#dns_challenge) block, along with the `provider` parameter.
-
-See the DNS providers subcategory for a full list of DNS providers.
-
-```hcl
-resource "acme_certificate" "certificate" {
-  #...
-
-  dns_challenge {
-    provider = "route53"
-
-    config = {
-      AWS_ACCESS_KEY_ID     = var.aws_access_key
-      AWS_SECRET_ACCESS_KEY = var.aws_secret_key
-      AWS_SESSION_TOKEN     = var.aws_security_token
-      AWS_DEFAULT_REGION    = "us-east-1"  # OPTIONAL
-    }
-  }
-
-  #...
-}
-```
-
-#### Using Variable Files for Provider Arguments
-
-Most provider arguments can be suffixed with `_FILE` to specify that you wish to
-store that value in a local file. This can be useful if local storage for these
-values is desired over configuration as variables or within the environment.
-
-```hcl
-resource "acme_certificate" "certificate" {
-  #...
-
-  dns_challenge {
-    provider = "route53"
-
-    config = {
-      AWS_ACCESS_KEY_ID_FILE     = "/data/secrets/aws_access_key_id"
-      AWS_SECRET_ACCESS_KEY_FILE = "/data/secrets/aws_secret_access_key"
-      AWS_DEFAULT_REGION         = "us-east-1"
-    }
-  }
-
-  #...
-}
-```
-
-#### About DNS propagation checks
-
-There are two parts to the DNS propagation check:
-
-* A check using your system resolvers, or the settings specified in
-  `recursive_nameservers`.
-* A check against your domain's authoritative DNS servers.
-
--> The authoritative part of the DNS propagation check will almost always
-require access to the outside internet. Make sure you allow the required access
-accordingly, particularly in restricted networks. You can also use the
-`disable_complete_propagation` setting to bypass this check altogether (see
-below).
-
-The ACME provider will normally use your system-configured DNS resolvers to
-check for propagation of the TXT records before proceeding with the certificate
-request. In split horizon scenarios, this check may never succeed, as the
-machine running Terraform may not have visibility into these public DNS
-records.
-
-To override this default behavior, supply the `recursive_nameservers` to use as
-a list in the format `host:port`:
-
-```hcl
-resource "acme_certificate" "certificate" {
-  #...
-
-  recursive_nameservers = ["8.8.8.8:53"]
-
-  dns_challenge {
-    provider = "route53"
-  }
-
-  #...
-}
-```
-
-Additionally, in air-gapped scenarios, internet access to DNS servers may not be
-available at all to the machine running Terraform. In this case, you can use
-`disable_complete_propagation` to bypass this authoritative DNS check, ensuring
-that the only propagation check being done is on the system resolver or the
-resolver you configure with `recursive_nameservers`.
-
-```hcl
-resource "acme_certificate" "certificate" {
-  #...
-
-  recursive_nameservers        = ["8.8.8.8:53"]
-  disable_complete_propagation = true
-
-  dns_challenge {
-    provider = "route53"
-  }
-
-  #...
-}
-```
-
-~> **NOTE:** When `disable_complete_propagation` is used, you can encounter
-situations where the propagation check will pass before your platform has
-provisioned the DNS records on their name servers. Use this setting with care,
-such as in the aforementioned air-gapped scenario where the system running
-Terraform has no outbound DNS access, or for testing purposes. If you encounter
-problems using this setting, consider removing it and moving your Terraform
-operations to a system that can access your domain's authoritative DNS servers.
-
-#### Using multiple primary DNS providers
-
-The ACME provider will allow you to configure multiple DNS challenges in the
-event that you have more than one primary DNS provider.
-
-```hcl
-resource "acme_certificate" "certificate" {
-  #...
-
-  dns_challenge {
-    provider = "azure"
-  }
-
-  dns_challenge {
-    provider = "gcloud"
-  }
-
-  dns_challenge {
-    provider = "route53"
-  }
-
-  #...
-}
-```
-
-Some considerations need to be kept in mind when using multiple providers:
-
-* You cannot use more than one provider of the same type at once.
-* Your NS records must be correctly configured so that each DNS challenge
-  provider can correctly discover the appropriate zone to update.
-* DNS propagation checks are conducted once per configured common name and
-  subject alternative name, using the highest configured or default propagation
-  timeout (`*_PROPAGATION_TIMEOUT`) and polling interval (`*_POLLING_INTERVAL`)
-  settings.
-
-#### Relation to Terraform provider configuration
-
-The DNS provider configuration specified in the `acme_certificate` resource is
-separate from any that you supply in a corresponding provider whose
-functionality overlaps with the certificate's DNS providers.  This ensures that
-there are no hard dependencies between any of these providers and the ACME
-provider, but it is important to note so that configuration is supplied
-correctly.
-
-As an example, if you specify manual configuration for the [AWS
-provider][tf-provider-aws] via the [`provider`][tf-providers] block instead of
-the environment, you will still need to supply the configuration explicitly as
-per above.
-
-[tf-provider-aws]: https://registry.terraform.io/providers/hashicorp/aws/latest
-[tf-providers]: https://www.terraform.io/docs/configuration/providers.html
-
-Some of these providers have environment variable settings that overlap with
-the ones found here, generally depending on whether or not these variables are
-supported by the corresponding provider's SDK.
-
-Check the documentation of a specific DNS provider for more details on exactly
-what variables are supported.
-
-### Using HTTP and TLS Challenges
-
--> It's recommended that you use [DNS challenges](#using-dns-challenges)
-whenever possible to generate certificates with `acme_certificate`. Only use the
-HTTP and TLS challenge types if you don't have access to do DNS challenges, and
-can ensure that you can direct traffic for all domains being authorized to the
-machine running Terraform, or the locations served by the
-`http_webroot_challenge`, `http_s3_challenge` and `http_memcached_challenge` types.
-Additionally, these challenge types do not support wildcard domains. See the
-[Let's Encrypt page on challenge types](https://letsencrypt.org/docs/challenge-types/)
-for more details. These challenges have requirements that almost always exclude them from
-being used on [Terraform Cloud](https://www.terraform.io/docs/cloud/) unless you
-are using the [Cloud
-Agents](https://www.terraform.io/docs/cloud/agents/index.html) feature.
-
-`acme_certificate` supports HTTP and TLS challenges. The provider accomplishes
-this by running a small HTTP or TLS service to serve records using the HTTP-01
-or TLS-ALPN-01 challenge types. Additionally, two alternate HTTP challenge
-providers exist that allow HTTP challenges to be satisfied by publishing the
-challenge records either to an arbitrary filesystem location or a
-[Memcached](https://memcached.org/) cluster.
-
-#### Network Requirements for Using `http_challenge` and `tls_challenge`
-
-`http_challenge` and `tls_challenge` by default will listen on their respective
-ports (port 80 for HTTP and port 443 for TLS). These ports are _privileged_ and
-will likely not be accessible by the machine running Terraform.
-
-You can work around this by doing the following:
-
-* On Linux, use [`setcap`](https://man7.org/linux/man-pages/man8/setcap.8.html)
-  to grant escalated network privileges to either Terraform (`setcap
-  'cap_net_bind_service=+eip' "$(which terraform)"`), or the provider (`setcap
-  'cap_net_bind_service=+ep'
-  .terraform/providers/registry.terraform.io/Kid-debug/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
-  Both have drawbacks: granting capabilites to Terraform itself will mean that
-  Terraform core and any provider launched by it will also have the capability,
-  while capabilities granted to the provider will be lost every time the
-  provider is updated, or the repository is initialized with `terraform init`.
-* Use proxies to direct traffic to the ports defined with the `port` option in
-  the challenge clauses. If necessary, use the `proxy_header` option of
-  `http_challenge` to set the header to match the host of the current FQDN being
-  solved.
-
-~> Never run Terraform (or the plugin) as root! If you cannot satisfy the
-networking requirements for `http_challenge` or `tls_challenge`, consider using
-the other challenge types or use [DNS challenges](#using-dns-challenges).
-
-#### `http_challenge`
-
-The `http_challenge` type supports standard HTTP-01 challenges.
-
-```
-resource "acme_certificate" "certificate" {
-  #...
-
-  http_challenge {
-    port         = "5002"
-    proxy_header = "Forwarded"
-  }
-
-  #...
-}
-```
-
-The options are as follows:
-
-* `port` (Optional) - The port that the challenge server listens on. Default: `80`.
-* `proxy_header` (Optional) - The proxy header to match against. Default:
-  `Host`.
-
-The `proxy_header` option behaves differently depending on its definition:
-
-* When set to `Host`, standard host header validation is used.
-* When set to `Forwarded`, the server looks in the `Forwarded` header for a
-  section matching `host=DOMAIN` where `DOMAIN` is the domain currently being
-  resolved by the challenge. See [RFC 7239](https://tools.ietf.org/html/rfc7239)
-  for more details.
-* When set to an arbitrary header (example: `X-Forwarded-Host`), that header is
-  checked for the host entry in the same way the host header would normally be
-  checked.
-
-#### `http_webroot_challenge`
-
-Use `http_webroot_challenge` to publish a record to a location on the file
-system. The record is published to `DIRECTORY/.well-known/acme-challenge/`. The
-resource will request an HTTP-01 challenge for which an out-of-band process must
-use this data to answer.
-
-```
-resource "acme_certificate" "certificate" {
-  #...
-
-  http_webroot_challenge {
-    directory = "/a/webserver/path"
-  }
-
-  #...
-}
-```
-
-The options are as follows:
-
-* `directory` (Required) - The directory to publish the record to.
-
-#### `http_memcached_challenge`
-
-Use `http_memcached_challenge` to publish challenge records to a
-[Memcached](https://memcached.org/) cluster. The record is published to
-`/.well-known/acme-challenge/KEY`. The resource will request an HTTP-01
-challenge for which an out-of-band process must use this data to answer.
-
-See the [README.md on
-lego](https://github.com/go-acme/lego/blob/4bb8bea031eb805f361c04ca222f266b9e7feced/providers/http/memcached/README.md)
-for an example using Nginx.
-
-```
-resource "acme_certificate" "certificate" {
-  #...
-
-  http_memcached_challenge {
-    hosts = ["127.0.0.1:11211"]
-  }
-
-  #...
-}
-```
-
-#### `http_s3_challenge`
-
-Use `http_s3_challenge` to publish challenge records to a
-[S3](https://aws.amazon.com/s3/) bucket. The record is published to
-`/.well-known/acme-challenge/KEY` in the bucket. The domain will need to be configured
-to point to the s3 bucket, either with a reverse proxy or some application.
- The resource will request an HTTP-01
-challenge for which an out-of-band process must use this data to answer.
-
-See the [Documentation on
-lego](https://github.com/go-acme/lego/blob/master/providers/http/s3/s3.toml)
-
-```
-resource "acme_certificate" "certificate" {
-  #...
-
-  http_s3_challenge {
-    s3_bucket = "bucket_name"
-  }
-
-  #...
-}
-```
-
-The options are as follows:
-
-* `s3_bucket` (Required) - The s3_bucket to publish the record to.
-
-#### `tls_challenge`
-
-The `tls_challenge` type supports TLS-ALPN-01 challenges.
-
-```
-resource "acme_certificate" "certificate" {
-  #...
-
-  tls_challenge {
-    port = "5001"
-  }
-
-  #...
-}
-```
-
-The options are as follows:
-
-* `port` (Optional) - The port that the challenge server listens on. Default: `443`.
-
-## Certificate renewal
-
-The `acme_certificate` resource handles automatic certificate renewal so long
-as a plan or apply is done within the number of days specified in the
-[`min_days_remaining`](#min_days_remaining) resource parameter. During refresh,
-if Terraform detects that the certificate is within the expiry range specified
-in `min_days_remaining`, or is already expired, Terraform will mark the
-certificate to be renewed on the next apply.
-
-Note that a value less than `0` supplied to `min_days_remaining` will cause
-renewal checks to be bypassed, and the certificate will never renew.
-
-## Attribute Reference
-
-The following attributes are exported:
-
-* `id` - A UUID identifying the resource in Terraform state.
-
--> As of provider version 2.0, this is no longer the same as `certificate_url`.
-Refer to that field for the current URL of the certificate.
-
-* `certificate_url` - The full URL of the certificate within the ACME CA.
-* `certificate_domain` - The common name of the certificate.
-* `private_key_pem` - The certificate's private key, in PEM format, if the
-  certificate was generated from scratch and not with
-  [`certificate_request_pem`](#certificate_request_pem).  If
-  `certificate_request_pem` was used, this will be blank.
-* `certificate_pem` - The certificate in PEM format. This does not include the
-  `issuer_pem`. This certificate can be concatenated with `issuer_pem` to form
-  a full chain, e.g. `"${acme_certificate.certificate.certificate_pem}${acme_certificate.certificate.issuer_pem}"`
-* `issuer_pem` - The intermediate certificates of the issuer. Multiple
-  certificates are concatenated in this field when there is more than one
-  intermediate certificate in the chain.
-* `certificate_p12` - The certificate, any intermediates, and the private key
-  archived as a PFX file (PKCS12 format, generally used by Microsoft products).
-  The data is base64 encoded (including padding), and its password is
-  configurable via the [`certificate_p12_password`](#certificate_p12_password)
-  argument. This field is empty if creating a certificate from a CSR.
-* `certificate_not_after` - The expiry date of the certificate, laid out in
-  RFC3339 format (`2006-01-02T15:04:05Z07:00`).
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/docs/resources/registration.md ./vancluever/v2.21.0/vancluever/v2.21.0/docs/resources/registration.md
--- ./vancluever/v2.21.0/docs/resources/registration.md	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/docs/resources/registration.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,69 +0,0 @@
-# acme_registration
-
-The `acme_registration` resource can be used to create and manage accounts on an
-ACME server. Once registered, the same private key that has been used for
-registration can be used to request authorizations for certificates.
-
--> This resource is named `acme_registration` for historical reasons - in the
-ACME v1 spec, a _registration_ referred to the account entity.  This resource
-name is stable and more than likely will not change until a later major version
-of the provider, if at all.
-
--> Keep in mind that when using this resource along with
-[`acme_certificate`][resource-certificate] within the same configuration, a
-change in the provider-level `server_url` (example: from the Let's Encrypt
-staging to production environment) within the same Terraform state will result
-in a resource failure, as Terraform will attempt to look for the account in the
-wrong CA. Consider different workspaces per environment, and/or using [multiple
-provider instances][multiple-provider-instances].
-
-[multiple-provider-instances]: https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-configurations
-[resource-certificate]: ./certificate.md
-
-## Example
-
-The following creates an account off of a private key generated with the
-[`tls_private_key`][resource-tls-private-key] resource.
-
-[resource-tls-private-key]: https://registry.terraform.io/providers/hashicorp/tls/latest/docs/resources/private_key
-
-```hcl
-provider "acme" {
-  server_url = "https://acme-staging-v02.api.letsencrypt.org/directory"
-}
-
-resource "tls_private_key" "private_key" {
-  algorithm = "RSA"
-}
-
-resource "acme_registration" "reg" {
-  account_key_pem = tls_private_key.private_key.private_key_pem
-  email_address   = "nobody@example.com"
-}
-```
-
-#### Argument Reference
-
-~> **NOTE:** All arguments in `acme_registration` force a new resource if
-changed.
-
-The resource takes the following arguments:
-
-* `account_key_pem` (Required) - The private key used to identify the account.
-* `email_address` (Required) - The contact email address for the account.
-* `external_account_binding` (Optional) - An external account binding for the
-  registration, usually used to link the registration with an account in a
-  commercial CA. Sub-options are:
-    - `key_id` (Required): The key ID for the external account binding.
-    - `hmac_base64` (Required): The base64-encoded message authentication code
-      for the external account binding.
-
-#### Attribute Reference
-
-The following attributes are exported:
-
-* `id`: The original full URL of the account.
-* `registration_url`: The current full URL of the account.
-
--> `id` and `registration_url` will usually be the same and will usually only
-diverge when migrating protocols, ie: ACME v1 to v2.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/.envrc ./vancluever/v2.21.0/vancluever/v2.21.0/.envrc
--- ./vancluever/v2.21.0/.envrc	2024-04-26 18:07:21.589800106 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/.envrc	1970-01-01 07:30:00.000000000 +0730
@@ -1 +0,0 @@
-use flake
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/flake.lock ./vancluever/v2.21.0/vancluever/v2.21.0/flake.lock
--- ./vancluever/v2.21.0/flake.lock	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/flake.lock	1970-01-01 07:30:00.000000000 +0730
@@ -1,61 +0,0 @@
-{
-  "nodes": {
-    "flake-utils": {
-      "inputs": {
-        "systems": "systems"
-      },
-      "locked": {
-        "lastModified": 1705309234,
-        "narHash": "sha256-uNRRNRKmJyCRC/8y1RqBkqWBLM034y4qN7EprSdmgyA=",
-        "owner": "numtide",
-        "repo": "flake-utils",
-        "rev": "1ef2e671c3b0c19053962c07dbda38332dcebf26",
-        "type": "github"
-      },
-      "original": {
-        "owner": "numtide",
-        "repo": "flake-utils",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708847675,
-        "narHash": "sha256-RUZ7KEs/a4EzRELYDGnRB6i7M1Izii3JD/LyzH0c6Tg=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "2a34566b67bef34c551f204063faeecc444ae9da",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixpkgs-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "flake-utils": "flake-utils",
-        "nixpkgs": "nixpkgs"
-      }
-    },
-    "systems": {
-      "locked": {
-        "lastModified": 1681028828,
-        "narHash": "sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=",
-        "owner": "nix-systems",
-        "repo": "default",
-        "rev": "da67096a3b9bf56a91d16901293e51ba5b49a27e",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-systems",
-        "repo": "default",
-        "type": "github"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/flake.nix ./vancluever/v2.21.0/vancluever/v2.21.0/flake.nix
--- ./vancluever/v2.21.0/flake.nix	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/flake.nix	1970-01-01 07:30:00.000000000 +0730
@@ -1,24 +0,0 @@
-{
-  description = "terraform-provider-acme: project development environment";
-
-  inputs.nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
-  inputs.flake-utils.url = "github:numtide/flake-utils";
-
-  outputs = { self, nixpkgs, flake-utils }:
-    flake-utils.lib.eachDefaultSystem (system:
-      let pkgs = import nixpkgs { inherit system; };
-      in {
-        inherit pkgs;
-        devShell = pkgs.mkShell {
-          packages = [
-            pkgs.buf
-            pkgs.go_1_22
-            pkgs.golangci-lint
-            pkgs.golangci-lint-langserver
-            pkgs.gopls
-            pkgs.protoc-gen-go
-            pkgs.protoc-gen-go-grpc
-          ];
-        };
-      });
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/.github/workflows/release.yml ./vancluever/v2.21.0/vancluever/v2.21.0/.github/workflows/release.yml
--- ./vancluever/v2.21.0/.github/workflows/release.yml	2024-04-26 18:07:21.589800106 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/.github/workflows/release.yml	1970-01-01 07:30:00.000000000 +0730
@@ -1,102 +0,0 @@
-# This GitHub action can publish assets for release when a tag is created.
-# Currently its setup to run on any tag that matches the pattern "v*" (ie. v0.1.0).
-#
-# This uses an action (paultyng/ghaction-import-gpg) that assumes you set your 
-# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
-# secret. If you would rather own your own GPG handling, please fork this action
-# or use an alternative one for key handling.
-#
-# You will need to pass the `--batch` flag to `gpg` in your signing step 
-# in `goreleaser` to indicate this is being used in a non-interactive mode.
-#
-name: release
-on:
-  push:
-    tags:
-      - 'v*'
-jobs:
-  test:
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: actions/setup-go@v5
-        with:
-          go-version: '^1.17.5'
-          check-latest: true
-      - name: Cache (Go Modules)
-        uses: actions/cache@v4
-        env:
-          cache-name: go-mod-cache
-        with:
-          path: /home/runner/go/pkg/mod
-          key: ${{ env.cache-name}}-${{ hashFiles('go.sum') }}
-          restore-keys: |
-            ${{ env.cache-name}}-
-      - name: Cache (Go Build)
-        uses: actions/cache@v4
-        env:
-          cache-name: go-build-cache
-          cache-dir: /home/runner/.cache/go-build
-        with:
-          path: ${{ env.cache-dir }}
-          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
-          restore-keys: |
-            ${{ env.cache-name}}-
-      - name: Cache (Pebble)
-        uses: actions/cache@v4
-        env:
-          cache-name: pebble-cache
-          cache-dir: /home/runner/go/src/github.com/letsencrypt/pebble
-        with:
-          path: ${{ env.cache-dir }}
-          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
-          restore-keys: |
-            ${{ env.cache-name}}-
-      - name: Verify Modules
-        run: go mod verify
-      - name: Run Tests
-        run: make tools pebble-start memcached-start test
-
-  goreleaser:
-    needs: test
-    runs-on: ubuntu-latest
-    steps:
-      - uses: actions/checkout@v4
-      - uses: actions/setup-go@v5
-        with:
-          go-version: '^1.17.5'
-          check-latest: true
-      - name: Cache (Go Modules)
-        uses: actions/cache@v4
-        env:
-          cache-name: go-mod-cache
-        with:
-          path: /home/runner/go/pkg/mod
-          key: ${{ env.cache-name}}-${{ hashFiles('go.sum') }}
-          restore-keys: |
-            ${{ env.cache-name}}-
-      - name: Cache (Go Build)
-        uses: actions/cache@v4
-        env:
-          cache-name: go-build-cache
-          cache-dir: /home/runner/.cache/go-build
-        with:
-          path: ${{ env.cache-dir }}
-          key: ${{ env.cache-name}}-${{ hashFiles(format('{0}/**/*', env.cache-dir)) }}
-          restore-keys: |
-            ${{ env.cache-name}}-
-      - run: go mod verify
-      - name: Import GPG key
-        id: import_gpg
-        uses: paultyng/ghaction-import-gpg@v2.1.0
-        env:
-          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
-          PASSPHRASE: ${{ secrets.PASSPHRASE }}
-      - name: Run GoReleaser
-        uses: goreleaser/goreleaser-action@v5.0.0
-        with:
-          version: latest
-          args: release --clean --timeout 60m0s
-        env:
-          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
-          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/.gitignore ./vancluever/v2.21.0/vancluever/v2.21.0/.gitignore
--- ./vancluever/v2.21.0/.gitignore	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/.gitignore	1970-01-01 07:30:00.000000000 +0730
@@ -1,34 +0,0 @@
-*.dll
-*.exe
-.DS_Store
-example.tf
-terraform.tfplan
-terraform.tfstate
-bin/
-modules-dev/
-/pkg/
-website/.vagrant
-website/.bundle
-website/build
-website/node_modules
-.vagrant/
-*.backup
-./*.tfstate
-.terraform/
-*.log
-*.bak
-*~
-.*.swp
-.idea
-*.iml
-*.test
-*.iml
-/test/
-
-website/vendor
-
-terraform-provider-acme
-
-.direnv/
-
-coverage.out
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/GNUmakefile ./vancluever/v2.21.0/vancluever/v2.21.0/GNUmakefile
--- ./vancluever/v2.21.0/GNUmakefile	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/GNUmakefile	1970-01-01 07:30:00.000000000 +0730
@@ -1,91 +0,0 @@
-# Test all packages by default
-TEST ?= ./...
-
-ifeq ($(shell go env GOOS),darwin)
-SEDOPTS = -i ''
-else
-SEDOPTS = -i
-endif
-
-GOWORKFLOWVERSION=$(shell go run ./build-support/go-version-for-workflow)
-
-.PHONY: default
-default: build
-
-.PHONY: tools
-tools:
-	cd $(shell go env GOROOT) && go install github.com/hashicorp/go-bindata/go-bindata@latest && go install gotest.tools/gotestsum@latest
-
-.PHONY: pebble-start-install
-pebble-start-install: pebble-stop
-	build-support/scripts/pebble-start.sh --install
-
-.PHONY: pebble-start
-pebble-start: pebble-stop
-	build-support/scripts/pebble-start.sh
-
-.PHONY: pebble-stop
-pebble-stop:
-	build-support/scripts/pebble-stop.sh
-
-.PHONY: memcached-start
-memcached-start: memcached-stop
-	build-support/scripts/memcached-start.sh
-
-.PHONY: memcached-stop
-memcached-stop:
-	build-support/scripts/memcached-stop.sh
-
-.PHONY: stop-services
-stop-services: memcached-stop pebble-stop
-
-.PHONY: template-generate
-template-generate:
-	@echo "==> Re-generating templates..."
-	@go generate ./build-support/generate-dns-providers
-
-.PHONY: provider-generate
-provider-generate:
-	@echo "==> Re-generating Go DNS provider factory in ./acme..."
-	@go generate ./acme/dnsplugin
-	@go build ./acme/dnsplugin
-	@go mod tidy
-	@echo "==> Re-genrating documentation..."
-	@rm -f docs/guides/dns-providers-*.md
-	@go run ./build-support/generate-dns-providers doc docs/guides/
-
-.PHONY: provider-generate-update
-provider-generate-update: provider-generate
-	test -z "$$(git diff acme docs)" || \
-		{ git add acme docs && \
-		git commit -m "re-generate lego DNS provider data"; }
-
-.PHONY: proto
-proto:
-	cd proto/ && buf generate
-
-.PHONY: build
-build:
-	go install
-
-.PHONY: release
-release:
-	build-support/scripts/release.sh
-
-.PHONY: build-pre-release
-build-pre-release:
-	mkdir -p /tmp/terraform-provider-acme/
-	go build -o /tmp/terraform-provider-acme/terraform-provider-acme
-
-.PHONY: clean-pre-release
-clean-pre-release:
-	rm -rf /tmp/terraform-provider-acme/
-
-.PHONY: test
-test:
-	TF_LOG=debug TF_ACC=1 gotestsum --format=short-verbose $(TEST) $(TESTARGS)
-
-.PHONY: go-version-sync
-go-version-sync:
-	sed $(SEDOPTS) -e "s/go-version:.*\$$/go-version: '^$(GOWORKFLOWVERSION)'/g" .github/workflows/*.yml
-	git add .github/workflows/*.yml && git commit -m "workflows: update Go to version $(GOWORKFLOWVERSION)"
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/go.mod ./vancluever/v2.21.0/vancluever/v2.21.0/go.mod
--- ./vancluever/v2.21.0/go.mod	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/go.mod	1970-01-01 07:30:00.000000000 +0730
@@ -1,20 +0,0 @@
-module github.com/Kid-debug/terraform-provider-acme/v2
-
-go 1.21.0
-
-require (
-	github.com/BurntSushi/toml v1.3.2
-	github.com/cenkalti/backoff/v4 v4.2.1
-	github.com/davecgh/go-spew v1.1.1
-	github.com/go-acme/lego/v4 v4.16.1
-	github.com/google/go-cmp v0.6.0
-	github.com/hashicorp/go-multierror v1.1.1
-	github.com/hashicorp/go-plugin v1.6.0
-	github.com/hashicorp/go-uuid v1.0.3
-	github.com/hashicorp/terraform-plugin-sdk/v2 v2.33.0
-	github.com/mitchellh/copystructure v1.2.0
-	github.com/rainycape/memcache v0.0.0-20150622160815-1031fa0ce2f2
-	google.golang.org/grpc v1.63.2
-	google.golang.org/protobuf v1.33.0
-	software.sslmate.com/src/go-pkcs12 v0.4.0
-)
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/.goreleaser.yml ./vancluever/v2.21.0/vancluever/v2.21.0/.goreleaser.yml
--- ./vancluever/v2.21.0/.goreleaser.yml	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/.goreleaser.yml	1970-01-01 07:30:00.000000000 +0730
@@ -1,60 +0,0 @@
-# Visit https://goreleaser.com for documentation on how to customize this
-# behavior.
-before:
-  hooks:
-    # this is just an example and not a requirement for provider building/publishing
-    - go mod tidy
-builds:
-  - env:
-      # goreleaser does not work with CGO, it could also complicate
-      # usage by users in CI/CD systems like Terraform Cloud where
-      # they are unable to install libraries.
-      - CGO_ENABLED=0
-    mod_timestamp: "{{ .CommitTimestamp }}"
-    flags:
-      - -trimpath
-    ldflags:
-      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
-    goos:
-      - freebsd
-      - windows
-      - linux
-      - darwin
-    goarch:
-      - amd64
-      - "386"
-      - arm
-      - arm64
-    ignore:
-      - goos: darwin
-        goarch: "386"
-    binary: "{{ .ProjectName }}_v{{ .Version }}"
-archives:
-  - format: zip
-    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
-checksum:
-  extra_files:
-    - glob: "terraform-registry-manifest.json"
-      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
-  algorithm: sha256
-signs:
-  - artifacts: checksum
-    args:
-      # if you are using this is a GitHub action or some other automated pipeline, you
-      # need to pass the batch flag to indicate its not interactive.
-      - "--batch"
-      - "--local-user"
-      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
-      - "--output"
-      - "${signature}"
-      - "--detach-sign"
-      - "${artifact}"
-release:
-  extra_files:
-    - glob: "terraform-registry-manifest.json"
-      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
-  # If you want to manually examine the release before its live, uncomment this line:
-  # draft: true
-changelog:
-  skip: true
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/go.sum ./vancluever/v2.21.0/vancluever/v2.21.0/go.sum
--- ./vancluever/v2.21.0/go.sum	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/go.sum	1970-01-01 07:30:00.000000000 +0730
@@ -1,1086 +0,0 @@
-cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
-cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
-cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=
-cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=
-cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=
-cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=
-cloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=
-cloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=
-cloud.google.com/go/compute v1.24.0 h1:phWcR2eWzRJaL/kOiJwfFsPs4BaKq1j6vnpZrc1YlVg=
-cloud.google.com/go/compute v1.24.0/go.mod h1:kw1/T+h/+tK2LJK0wiPPx1intgdAM3j/g3hFDlscY40=
-cloud.google.com/go/compute/metadata v0.2.3 h1:mg4jlk7mCAj6xXp9UJ4fjI9VUI5rubuGBW5aJ7UnBMY=
-cloud.google.com/go/compute/metadata v0.2.3/go.mod h1:VAV5nSsACxMJvgaAuX6Pk2AawlZn8kiOGuCv6gTkwuA=
-cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=
-cloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=
-cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=
-cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=
-dario.cat/mergo v1.0.0 h1:AGCNq9Evsj31mOgNPcLyXc+4PNABt905YmuqPYYpBWk=
-dario.cat/mergo v1.0.0/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=
-dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=
-github.com/AdamSLevy/jsonrpc2/v14 v14.1.0 h1:Dy3M9aegiI7d7PF1LUdjbVigJReo+QOceYsMyFh9qoE=
-github.com/AdamSLevy/jsonrpc2/v14 v14.1.0/go.mod h1:ZakZtbCXxCz82NJvq7MoREtiQesnDfrtF6RFUGzQfLo=
-github.com/Azure/azure-sdk-for-go v68.0.0+incompatible h1:fcYLmCpyNYRnvJbPerq7U0hS+6+I79yEDJBqVNcqUzU=
-github.com/Azure/azure-sdk-for-go v68.0.0+incompatible/go.mod h1:9XXNKU+eRnpl9moKnB4QOLf1HestfXbmab5FXxiDBjc=
-github.com/Azure/azure-sdk-for-go/sdk/azcore v1.6.0 h1:8kDqDngH+DmVBiCtIjCFTGa7MBnsIOkF9IccInFEbjk=
-github.com/Azure/azure-sdk-for-go/sdk/azcore v1.6.0/go.mod h1:bjGvMhVMb+EEm3VRNQawDMUyMMjo+S5ewNjflkep/0Q=
-github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.3.0 h1:vcYCAze6p19qBW7MhZybIsqD8sMV8js0NyQM8JDnVtg=
-github.com/Azure/azure-sdk-for-go/sdk/azidentity v1.3.0/go.mod h1:OQeznEEkTZ9OrhHJoDD8ZDq51FHgXjqtP9z6bEwBq9U=
-github.com/Azure/azure-sdk-for-go/sdk/internal v1.3.0 h1:sXr+ck84g/ZlZUOZiNELInmMgOsuGwdjjVkEIde0OtY=
-github.com/Azure/azure-sdk-for-go/sdk/internal v1.3.0/go.mod h1:okt5dMMTOFjX/aovMlrjvvXoPMBVSPzk9185BT0+eZM=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns v1.1.0 h1:8iR6OLffWWorFdzL2JFCab5xpD8VKEE2DUBBl+HNTDY=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/dns/armdns v1.1.0/go.mod h1:copqlcjMWc/wgQ1N2fzsJFQxDdqKGg1EQt8T5wJMOGE=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal v1.1.2 h1:mLY+pNLjCUeKhgnAJWAKhEUQM+RJQo2H1fuGSw1Ky1E=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal v1.1.2/go.mod h1:FbdwsQ2EzwvXxOPcMFYO8ogEc9uMMIj3YkmCdXdAFmk=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns v1.1.0 h1:rR8ZW79lE/ppfXTfiYSnMFv5EzmVuY4pfZWIkscIJ64=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/privatedns/armprivatedns v1.1.0/go.mod h1:y2zXtLSMM/X5Mfawq0lOftpWn3f4V6OCsRdINsvWBPI=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources v1.0.0 h1:ECsQtyERDVz3NP3kvDOTLvbQhqWp/x9EsGKtb4ogUr8=
-github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources v1.0.0/go.mod h1:s1tW/At+xHqjNFvWU4G0c0Qv33KOhvbGNj0RCTQDV8s=
-github.com/Azure/go-autorest v14.2.0+incompatible h1:V5VMDjClD3GiElqLWO7mz2MxNAK/vTfRHdAubSIPRgs=
-github.com/Azure/go-autorest v14.2.0+incompatible/go.mod h1:r+4oMnoxhatjLLJ6zxSWATqVooLgysK6ZNox3g/xq24=
-github.com/Azure/go-autorest/autorest v0.11.24/go.mod h1:G6kyRlFnTuSbEYkQGawPfsCswgme4iYf6rfSKUDzbCc=
-github.com/Azure/go-autorest/autorest v0.11.29 h1:I4+HL/JDvErx2LjyzaVxllw2lRDB5/BT2Bm4g20iqYw=
-github.com/Azure/go-autorest/autorest v0.11.29/go.mod h1:ZtEzC4Jy2JDrZLxvWs8LrBWEBycl1hbT1eknI8MtfAs=
-github.com/Azure/go-autorest/autorest/adal v0.9.18/go.mod h1:XVVeme+LZwABT8K5Lc3hA4nAe8LDBVle26gTrguhhPQ=
-github.com/Azure/go-autorest/autorest/adal v0.9.22 h1:/GblQdIudfEM3AWWZ0mrYJQSd7JS4S/Mbzh6F0ov0Xc=
-github.com/Azure/go-autorest/autorest/adal v0.9.22/go.mod h1:XuAbAEUv2Tta//+voMI038TrJBqjKam0me7qR+L8Cmk=
-github.com/Azure/go-autorest/autorest/azure/auth v0.5.12 h1:wkAZRgT/pn8HhFyzfe9UnqOjJYqlembgCTi72Bm/xKk=
-github.com/Azure/go-autorest/autorest/azure/auth v0.5.12/go.mod h1:84w/uV8E37feW2NCJ08uT9VBfjfUHpgLVnG2InYD6cg=
-github.com/Azure/go-autorest/autorest/azure/cli v0.4.5 h1:0W/yGmFdTIT77fvdlGZ0LMISoLHFJ7Tx4U0yeB+uFs4=
-github.com/Azure/go-autorest/autorest/azure/cli v0.4.5/go.mod h1:ADQAXrkgm7acgWVUNamOgh8YNrv4p27l3Wc55oVfpzg=
-github.com/Azure/go-autorest/autorest/date v0.3.0 h1:7gUk1U5M/CQbp9WoqinNzJar+8KY+LPI6wiWrP/myHw=
-github.com/Azure/go-autorest/autorest/date v0.3.0/go.mod h1:BI0uouVdmngYNUzGWeSYnokU+TrmwEsOqdt8Y6sso74=
-github.com/Azure/go-autorest/autorest/mocks v0.4.1/go.mod h1:LTp+uSrOhSkaKrUy935gNZuuIPPVsHlr9DSOxSayd+k=
-github.com/Azure/go-autorest/autorest/mocks v0.4.2 h1:PGN4EDXnuQbojHbU0UWoNvmu9AGVwYHG9/fkDYhtAfw=
-github.com/Azure/go-autorest/autorest/mocks v0.4.2/go.mod h1:Vy7OitM9Kei0i1Oj+LvyAWMXJHeKH1MVlzFugfVrmyU=
-github.com/Azure/go-autorest/autorest/to v0.4.0 h1:oXVqrxakqqV1UZdSazDOPOLvOIz+XA683u8EctwboHk=
-github.com/Azure/go-autorest/autorest/to v0.4.0/go.mod h1:fE8iZBn7LQR7zH/9XU2NcPR4o9jEImooCeWJcYV/zLE=
-github.com/Azure/go-autorest/logger v0.2.1 h1:IG7i4p/mDa2Ce4TRyAO8IHnVhAVF3RFU+ZtXWSmf4Tg=
-github.com/Azure/go-autorest/logger v0.2.1/go.mod h1:T9E3cAhj2VqvPOtCYAvby9aBXkZmbF5NWuPV8+WeEW8=
-github.com/Azure/go-autorest/tracing v0.6.0 h1:TYi4+3m5t6K48TGI9AUdb+IzbnSxvnvUMfuitfgcfuo=
-github.com/Azure/go-autorest/tracing v0.6.0/go.mod h1:+vhtPC754Xsa23ID7GlGsrdKBpUA79WCAKPPZVC2DeU=
-github.com/AzureAD/microsoft-authentication-library-for-go v1.0.0 h1:OBhqkivkhkMqLPymWEppkm7vgPQY2XsHoEkaMQ0AdZY=
-github.com/AzureAD/microsoft-authentication-library-for-go v1.0.0/go.mod h1:kgDmCTgBzIEPFElEF+FK0SdjAor06dRq2Go927dnQ6o=
-github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
-github.com/BurntSushi/toml v1.3.2 h1:o7IhLm0Msx3BaB+n3Ag7L8EVlByGnpq14C4YWiu/gL8=
-github.com/BurntSushi/toml v1.3.2/go.mod h1:CxXYINrC8qIiEnFrOxCa7Jy5BFHlXnUU2pbicEuybxQ=
-github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=
-github.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=
-github.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=
-github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=
-github.com/OpenDNS/vegadns2client v0.0.0-20180418235048-a3fa4a771d87 h1:xPMsUicZ3iosVPSIP7bW5EcGUzjiiMl1OYTe14y/R24=
-github.com/OpenDNS/vegadns2client v0.0.0-20180418235048-a3fa4a771d87/go.mod h1:iGLljf5n9GjT6kc0HBvyI1nOKnGQbNB66VzSNbK5iks=
-github.com/ProtonMail/go-crypto v1.1.0-alpha.0 h1:nHGfwXmFvJrSR9xu8qL7BkO4DqTHXE9N5vPhgY2I+j0=
-github.com/ProtonMail/go-crypto v1.1.0-alpha.0/go.mod h1:rA3QumHc/FZ8pAHreoekgiAbzpNsfQAosU5td4SnOrE=
-github.com/agext/levenshtein v1.2.2 h1:0S/Yg6LYmFJ5stwQeRp6EeOcCbj7xiqQSdNelsXvaqE=
-github.com/agext/levenshtein v1.2.2/go.mod h1:JEDfjyjHDjOF/1e4FlBE/PkbqA9OfWu2ki2W0IB5558=
-github.com/akamai/AkamaiOPEN-edgegrid-golang v1.2.2 h1:F1j7z+/DKEsYqZNoxC6wvfmaiDneLsQOFQmuq9NADSY=
-github.com/akamai/AkamaiOPEN-edgegrid-golang v1.2.2/go.mod h1:QlXr/TrICfQ/ANa76sLeQyhAJyNR9sEcfNuZBkY9jgY=
-github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=
-github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=
-github.com/aliyun/alibaba-cloud-sdk-go v1.61.1755 h1:J45/QHgrzUdqe/Vco/Vxk0wRvdS2nKUxmf/zLgvfass=
-github.com/aliyun/alibaba-cloud-sdk-go v1.61.1755/go.mod h1:RcDobYh8k5VP6TNybz9m++gL3ijVI5wueVr0EM10VsU=
-github.com/andres-erbsen/clock v0.0.0-20160526145045-9e14626cd129 h1:MzBOUgng9orim59UnfUTLRjMpd09C5uEVQ6RPGeCaVI=
-github.com/andres-erbsen/clock v0.0.0-20160526145045-9e14626cd129/go.mod h1:rFgpPQZYZ8vdbc+48xibu8ALc3yeyd64IhHS+PU6Yyg=
-github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=
-github.com/apparentlymart/go-textseg/v12 v12.0.0/go.mod h1:S/4uRK2UtaQttw1GenVJEynmyUenKwP++x/+DdGV/Ec=
-github.com/apparentlymart/go-textseg/v15 v15.0.0 h1:uYvfpb3DyLSCGWnctWKGj857c6ew1u1fNQOlOtuGxQY=
-github.com/apparentlymart/go-textseg/v15 v15.0.0/go.mod h1:K8XmNZdhEBkdlyDdvbmmsvpAG721bKi0joRfFdHIWJ4=
-github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=
-github.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=
-github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=
-github.com/aws/aws-sdk-go-v2 v1.24.1 h1:xAojnj+ktS95YZlDf0zxWBkbFtymPeDP+rvUQIH3uAU=
-github.com/aws/aws-sdk-go-v2 v1.24.1/go.mod h1:LNh45Br1YAkEKaAqvmE1m8FUx6a5b/V0oAKV7of29b4=
-github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4 h1:OCs21ST2LrepDfD3lwlQiOqIGp6JiEUqG84GzTDoyJs=
-github.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.5.4/go.mod h1:usURWEKSNNAcAZuzRn/9ZYPT8aZQkR7xcCtunK/LkJo=
-github.com/aws/aws-sdk-go-v2/config v1.26.6 h1:Z/7w9bUqlRI0FFQpetVuFYEsjzE3h7fpU6HuGmfPL/o=
-github.com/aws/aws-sdk-go-v2/config v1.26.6/go.mod h1:uKU6cnDmYCvJ+pxO9S4cWDb2yWWIH5hra+32hVh1MI4=
-github.com/aws/aws-sdk-go-v2/credentials v1.16.16 h1:8q6Rliyv0aUFAVtzaldUEcS+T5gbadPbWdV1WcAddK8=
-github.com/aws/aws-sdk-go-v2/credentials v1.16.16/go.mod h1:UHVZrdUsv63hPXFo1H7c5fEneoVo9UXiz36QG1GEPi0=
-github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 h1:c5I5iH+DZcH3xOIMlz3/tCKJDaHFwYEmxvlh2fAcFo8=
-github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11/go.mod h1:cRrYDYAMUohBJUtUnOhydaMHtiK/1NZ0Otc9lIb6O0Y=
-github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 h1:vF+Zgd9s+H4vOXd5BMaPWykta2a6Ih0AKLq/X6NYKn4=
-github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10/go.mod h1:6BkRjejp/GR4411UGqkX8+wFMbFbqsUIimfK4XjOKR4=
-github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 h1:nYPe006ktcqUji8S2mqXf9c/7NdiKriOwMvWQHgYztw=
-github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10/go.mod h1:6UV4SZkVvmODfXKql4LCbaZUpF7HO2BX38FgBf9ZOLw=
-github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 h1:n3GDfwqF2tzEkXlv5cuy4iy7LpKDtqDMcNLfZDu9rls=
-github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3/go.mod h1:6fQQgfuGmw8Al/3M2IgIllycxV7ZW7WCdVSqfBeUiCY=
-github.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10 h1:5oE2WzJE56/mVveuDZPJESKlg/00AaS2pY2QZcnxg4M=
-github.com/aws/aws-sdk-go-v2/internal/v4a v1.2.10/go.mod h1:FHbKWQtRBYUz4vO5WBWjzMD2by126ny5y/1EoaWoLfI=
-github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 h1:/b31bi3YVNlkzkBrm9LfpaKoaYZUxIAj4sHfOTmLfqw=
-github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4/go.mod h1:2aGXHFmbInwgP9ZfpmdIfOELL79zhdNYNmReK8qDfdQ=
-github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10 h1:L0ai8WICYHozIKK+OtPzVJBugL7culcuM4E4JOpIEm8=
-github.com/aws/aws-sdk-go-v2/service/internal/checksum v1.2.10/go.mod h1:byqfyxJBshFk0fF9YmK0M0ugIO8OWjzH2T3bPG4eGuA=
-github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 h1:DBYTXwIGQSGs9w4jKm60F5dmCQ3EEruxdc0MFh+3EY4=
-github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10/go.mod h1:wohMUQiFdzo0NtxbBg0mSRGZ4vL3n0dKjLTINdcIino=
-github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10 h1:KOxnQeWy5sXyS37fdKEvAsGHOr9fa/qvwxfJurR/BzE=
-github.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.16.10/go.mod h1:jMx5INQFYFYB3lQD9W0D8Ohgq6Wnl7NYOJ2TQndbulI=
-github.com/aws/aws-sdk-go-v2/service/lightsail v1.34.0 h1:LvWkxBi/bsWHqj3bFTUuDLl4OAlbaM1HDZ9YPhj5+jg=
-github.com/aws/aws-sdk-go-v2/service/lightsail v1.34.0/go.mod h1:35MKNS46RX7Lb9EIFP2bPy3WrJu+bxU6QgLis8K1aa4=
-github.com/aws/aws-sdk-go-v2/service/route53 v1.37.0 h1:f3hBZWtpn9clZGXJoqahQeec9ZPZnu22g8pg+zNyif0=
-github.com/aws/aws-sdk-go-v2/service/route53 v1.37.0/go.mod h1:8qqfpG4mug2JLlEyWPSFhEGvJiaZ9iPmMDDMYc5Xtas=
-github.com/aws/aws-sdk-go-v2/service/s3 v1.48.1 h1:5XNlsBsEvBZBMO6p82y+sqpWg8j5aBCe+5C2GBFgqBQ=
-github.com/aws/aws-sdk-go-v2/service/s3 v1.48.1/go.mod h1:4qXHrG1Ne3VGIMZPCB8OjH/pLFO94sKABIusjh0KWPU=
-github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 h1:eajuO3nykDPdYicLlP3AGgOyVN3MOlFmZv7WGTuJPow=
-github.com/aws/aws-sdk-go-v2/service/sso v1.18.7/go.mod h1:+mJNDdF+qiUlNKNC3fxn74WWNN+sOiGOEImje+3ScPM=
-github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 h1:QPMJf+Jw8E1l7zqhZmMlFw6w1NmfkfiSK8mS4zOx3BA=
-github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7/go.mod h1:ykf3COxYI0UJmxcfcxcVuz7b6uADi1FkiUz6Eb7AgM8=
-github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 h1:NzO4Vrau795RkUdSHKEwiR01FaGzGOH1EETJ+5QHnm0=
-github.com/aws/aws-sdk-go-v2/service/sts v1.26.7/go.mod h1:6h2YuIoxaMSCFf5fi1EgZAwdfkGMgDY+DVfa61uLe4U=
-github.com/aws/smithy-go v1.19.0 h1:KWFKQV80DpP3vJrrA9sVAHQ5gc2z8i4EzrLhLlWXcBM=
-github.com/aws/smithy-go v1.19.0/go.mod h1:NukqUGpCZIILqqiV0NIjeFh24kd/FAa4beRb6nbIUPE=
-github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=
-github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=
-github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=
-github.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
-github.com/bketelsen/crypt v0.0.3-0.20200106085610-5cbc8cc4026c/go.mod h1:MKsuJmJgSg28kpZDP6UIiPt0e0Oz0kqKNGyRaWEPv84=
-github.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=
-github.com/boombuler/barcode v1.0.1 h1:NDBbPmhS+EqABEs5Kg3n/5ZNjy73Pz7SIV+KCeqyXcs=
-github.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=
-github.com/bufbuild/protocompile v0.4.0 h1:LbFKd2XowZvQ/kajzguUp2DC9UEIQhIq77fZZlaQsNA=
-github.com/bufbuild/protocompile v0.4.0/go.mod h1:3v93+mbWn/v3xzN+31nwkJfrEpAUwp+BagBSZWx+TP8=
-github.com/c-bata/go-prompt v0.2.5/go.mod h1:vFnjEGDIIA/Lib7giyE4E9c50Lvl8j0S+7FVlAwDAVw=
-github.com/c2h5oh/datasize v0.0.0-20200112174442-28bbd4740fee/go.mod h1:S/7n9copUssQ56c7aAgHqftWO4LTf4xY6CGWt8Bc+3M=
-github.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=
-github.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
-github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
-github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=
-github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=
-github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=
-github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=
-github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=
-github.com/civo/civogo v0.3.11 h1:mON/fyrV946Sbk6paRtOSGsN+asCgCmHCgArf5xmGxM=
-github.com/civo/civogo v0.3.11/go.mod h1:7+GeeFwc4AYTULaEshpT2vIcl3Qq8HPoxA17viX3l6g=
-github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
-github.com/cloudflare/circl v1.3.7 h1:qlCDlTPz2n9fu58M0Nh1J/JzcFpfgkFHHX3O35r5vcU=
-github.com/cloudflare/circl v1.3.7/go.mod h1:sRTcRWXGLrKw6yIGJ+l7amYJFfAXbZG0kBSc8r4zxgA=
-github.com/cloudflare/cloudflare-go v0.86.0 h1:jEKN5VHNYNYtfDL2lUFLTRo+nOVNPFxpXTstVx0rqHI=
-github.com/cloudflare/cloudflare-go v0.86.0/go.mod h1:wYW/5UP02TUfBToa/yKbQHV+r6h1NnJ1Je7XjuGM4Jw=
-github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=
-github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
-github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
-github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
-github.com/coreos/bbolt v1.3.2/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=
-github.com/coreos/etcd v3.3.13+incompatible/go.mod h1:uF7uidLiAD3TWHmW31ZFd/JWoc32PjwdhPthX9715RE=
-github.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=
-github.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=
-github.com/coreos/pkg v0.0.0-20180928190104-399ea9e2e55f/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=
-github.com/cpu/goacmedns v0.1.1 h1:DM3H2NiN2oam7QljgGY5ygy4yDXhK5Z4JUnqaugs2C4=
-github.com/cpu/goacmedns v0.1.1/go.mod h1:MuaouqEhPAHxsbqjgnck5zeghuwBP1dLnPoobeGqugQ=
-github.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=
-github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=
-github.com/cyberdelia/templates v0.0.0-20141128023046-ca7fffd4298c/go.mod h1:GyV+0YP4qX0UQ7r2MoYZ+AvYDp12OF5yg4q8rGnyNh4=
-github.com/cyphar/filepath-securejoin v0.2.4 h1:Ugdm7cg7i6ZK6x3xDF1oEu1nfkyfH53EtKeQYTC3kyg=
-github.com/cyphar/filepath-securejoin v0.2.4/go.mod h1:aPGpWjXOXUn2NCNjFvBE6aRxGGx79pTxQpKOJNYHHl4=
-github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
-github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/decred/dcrd/crypto/blake256 v1.0.0/go.mod h1:sQl2p6Y26YV+ZOcSTP6thNdn47hh8kt6rqSlvmrXFAc=
-github.com/decred/dcrd/dcrec/secp256k1/v4 v4.0.0-20210816181553-5444fa50b93d/go.mod h1:tmAIfUFEirG/Y8jhZ9M+h36obRZAk/1fcSpXwAVlfqE=
-github.com/deepmap/oapi-codegen v1.9.1 h1:yHmEnA7jSTUMQgV+uN02WpZtwHnz2CBW3mZRIxr1vtI=
-github.com/deepmap/oapi-codegen v1.9.1/go.mod h1:PLqNAhdedP8ttRpBBkzLKU3bp+Fpy+tTgeAMlztR2cw=
-github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=
-github.com/dgryski/go-sip13 v0.0.0-20181026042036-e10d5fee7954/go.mod h1:vAd38F8PWV+bWy6jNmig1y/TA+kYO4g3RSRF0IAv0no=
-github.com/dimchansky/utfbom v1.1.1 h1:vV6w1AhK4VMnhBno/TPVCoK9U/LP0PkLCS9tbxHdi/U=
-github.com/dimchansky/utfbom v1.1.1/go.mod h1:SxdoEBH5qIqFocHMyGOXVAybYJdr71b1Q/j0mACtrfE=
-github.com/dnaeon/go-vcr v1.2.0 h1:zHCHvJYTMh1N7xnV7zf1m1GPBF9Ad0Jk/whtQ1663qI=
-github.com/dnaeon/go-vcr v1.2.0/go.mod h1:R4UdLID7HZT3taECzJs4YgbbH6PIGXB6W/sc5OLb6RQ=
-github.com/dnsimple/dnsimple-go v1.2.0 h1:ddTGyLVKly5HKb5L65AkLqFqwZlWo3WnR0BlFZlIddM=
-github.com/dnsimple/dnsimple-go v1.2.0/go.mod h1:z/cs26v/eiRvUyXsHQBLd8lWF8+cD6GbmkPH84plM4U=
-github.com/emirpasic/gods v1.18.1 h1:FXtiHYKDGKCW2KzwZKx0iC0PQmdlorYgdFG9jPXJ1Bc=
-github.com/emirpasic/gods v1.18.1/go.mod h1:8tpGGwCnJ5H4r6BWwaV6OrWmMoPhUl5jm/FMNAnJvWQ=
-github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
-github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
-github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=
-github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
-github.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=
-github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=
-github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
-github.com/exoscale/egoscale v0.102.3 h1:DYqN2ipoLKpiFoprRGQkp2av/Ze7sUYYlGhi1N62tfY=
-github.com/exoscale/egoscale v0.102.3/go.mod h1:RPf2Gah6up+6kAEayHTQwqapzXlm93f0VQas/UEGU5c=
-github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=
-github.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=
-github.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=
-github.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=
-github.com/fatih/structs v1.1.0 h1:Q7juDM0QtcnhCpeyLGQKyg4TOIghuNXrkL32pHAUMxo=
-github.com/fatih/structs v1.1.0/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=
-github.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=
-github.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=
-github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=
-github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=
-github.com/fsnotify/fsnotify v1.5.1/go.mod h1:T3375wBYaZdLLcVNkcVbzGHY7f1l/uK5T5Ai1i3InKU=
-github.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=
-github.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=
-github.com/getkin/kin-openapi v0.87.0/go.mod h1:660oXbgy5JFMKreazJaQTw7o+X00qeSyhcnluiMv+Xg=
-github.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=
-github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=
-github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=
-github.com/gin-gonic/gin v1.7.4/go.mod h1:jD2toBW3GZUr5UMcdrwQA10I7RuaFOl/SGeDjXkfUtY=
-github.com/go-acme/lego/v4 v4.16.1 h1:JxZ93s4KG0jL27rZ30UsIgxap6VGzKuREsSkkyzeoCQ=
-github.com/go-acme/lego/v4 v4.16.1/go.mod h1:AVvwdPned/IWpD/ihHhMsKnveF7HHYAz/CmtXi7OZoE=
-github.com/go-chi/chi/v5 v5.0.0/go.mod h1:BBug9lr0cqtdAhsu6R4AAdvufI0/XBzAQSsUqJpoZOs=
-github.com/go-cmd/cmd v1.0.5/go.mod h1:y8q8qlK5wQibcw63djSl/ntiHUHXHGdCkPk0j4QeW4s=
-github.com/go-errors/errors v1.0.1 h1:LUHzmkK3GUKUrL/1gfBUxAHzcev3apQlezX/+O7ma6w=
-github.com/go-errors/errors v1.0.1/go.mod h1:f4zRHt4oKfwPJE5k8C9vpYG+aDHdBFUsgrm6/TyX73Q=
-github.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376 h1:+zs/tPmkDkHx3U66DAb0lQFJrpS6731Oaa12ikc+DiI=
-github.com/go-git/gcfg v1.5.1-0.20230307220236-3a3c6141e376/go.mod h1:an3vInlBmSxCcxctByoQdvwPiA7DTK7jaaFDBTtu0ic=
-github.com/go-git/go-billy/v5 v5.5.0 h1:yEY4yhzCDuMGSv83oGxiBotRzhwhNr8VZyphhiu+mTU=
-github.com/go-git/go-billy/v5 v5.5.0/go.mod h1:hmexnoNsr2SJU1Ju67OaNz5ASJY3+sHgFRpCtpDCKow=
-github.com/go-git/go-git/v5 v5.11.0 h1:XIZc1p+8YzypNr34itUfSvYJcv+eYdTnTvOZ2vD3cA4=
-github.com/go-git/go-git/v5 v5.11.0/go.mod h1:6GFcX2P3NM7FPBfpePbpLd21XxsgdAt+lKqXmCUiUCY=
-github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=
-github.com/go-jose/go-jose/v4 v4.0.1 h1:QVEPDE3OluqXBQZDcnNvQrInro2h0e4eqNbnZSWqS6U=
-github.com/go-jose/go-jose/v4 v4.0.1/go.mod h1:WVf9LFMHh/QVrmqrOfqun0C45tMe3RoiKJMPvgWwLfY=
-github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=
-github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=
-github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=
-github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
-github.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=
-github.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
-github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
-github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
-github.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=
-github.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=
-github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=
-github.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=
-github.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=
-github.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=
-github.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=
-github.com/go-playground/validator/v10 v10.4.1/go.mod h1:nlOn6nFhuKACm19sB/8EGNn9GlaMV7XkbRSipzJ0Ii4=
-github.com/go-playground/validator/v10 v10.9.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=
-github.com/go-resty/resty/v2 v2.11.0 h1:i7jMfNOJYMp69lq7qozJP+bjgzfAzeOhuGlyDrqxT/8=
-github.com/go-resty/resty/v2 v2.11.0/go.mod h1:iiP/OpA0CkcL3IGt1O0+/SIItFUbkkyw5BGXiVdTu+A=
-github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=
-github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=
-github.com/go-test/deep v1.0.3 h1:ZrJSEWsXzPOxaZnFteGEfooLba+ju3FYIbOrS+rQd68=
-github.com/go-test/deep v1.0.3/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=
-github.com/go-viper/mapstructure/v2 v2.0.0-alpha.1 h1:TQcrn6Wq+sKGkpyPvppOz99zsMBaUOKXq6HSv655U1c=
-github.com/go-viper/mapstructure/v2 v2.0.0-alpha.1/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=
-github.com/gobs/pretty v0.0.0-20180724170744-09732c25a95b h1:/vQ+oYKu+JoyaMPDsv5FzwuL2wwWBgBbtj/YLCi4LuA=
-github.com/gobs/pretty v0.0.0-20180724170744-09732c25a95b/go.mod h1:Xo4aNUOrJnVruqWQJBtW6+bTBDTniY8yZum5rF3b5jw=
-github.com/goccy/go-json v0.7.8/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=
-github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=
-github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=
-github.com/gofrs/uuid v4.4.0+incompatible h1:3qXRTX8/NbyulANqlc0lchS1gqAVxRgsuW1YrTJupqA=
-github.com/gofrs/uuid v4.4.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=
-github.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=
-github.com/gogo/protobuf v1.2.1/go.mod h1:hp+jE20tsWTFYpLwKvXlhS1hjn+gTNwPg2I6zVXpSg4=
-github.com/goji/httpauth v0.0.0-20160601135302-2da839ab0f4d/go.mod h1:nnjvkQ9ptGaCkuDUx6wNykzzlUixGxvkme+H/lnzb+A=
-github.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=
-github.com/golang-jwt/jwt/v4 v4.0.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=
-github.com/golang-jwt/jwt/v4 v4.1.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=
-github.com/golang-jwt/jwt/v4 v4.2.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=
-github.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=
-github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=
-github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
-github.com/golang/groupcache v0.0.0-20190129154638-5b532d6fd5ef/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
-github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
-github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=
-github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
-github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
-github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
-github.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=
-github.com/golang/protobuf v1.1.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
-github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
-github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
-github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
-github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
-github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
-github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
-github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
-github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
-github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
-github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
-github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=
-github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=
-github.com/golangci/lint-1 v0.0.0-20181222135242-d2cdd8c08219/go.mod h1:/X8TswGSh1pIozq4ZwCfxS0WA5JGXguxk94ar/4c87Y=
-github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
-github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
-github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
-github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
-github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
-github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=
-github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=
-github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
-github.com/google/go-github/v32 v32.1.0/go.mod h1:rIEpZD9CTDQwDK9GDrtMTycQNA4JU3qBsCizh3q2WCI=
-github.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=
-github.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=
-github.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=
-github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
-github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=
-github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
-github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
-github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
-github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=
-github.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=
-github.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=
-github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
-github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
-github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
-github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
-github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
-github.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=
-github.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=
-github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=
-github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=
-github.com/googleapis/gax-go/v2 v2.12.0 h1:A+gCJKdRfqXkr+BIRGtZLibNXf0m1f9E4HG56etFpas=
-github.com/googleapis/gax-go/v2 v2.12.0/go.mod h1:y+aIqrI5eb1YGMVJfuV3185Ts/D7qKpsEkdD5+I6QGU=
-github.com/gophercloud/gophercloud v0.15.1-0.20210202035223-633d73521055/go.mod h1:wRtmUelyIIv3CSSDI47aUwbs075O6i+LY+pXsKCBsb4=
-github.com/gophercloud/gophercloud v1.0.0 h1:9nTGx0jizmHxDobe4mck89FyQHVyA3CaXLIUSGJjP9k=
-github.com/gophercloud/gophercloud v1.0.0/go.mod h1:Q8fZtyi5zZxPS/j9aj3sSxtvj41AdQMDwyo1myduD5c=
-github.com/gophercloud/utils v0.0.0-20210216074907-f6de111f2eae h1:Hi3IgB9RQDE15Kfovd8MTZrcana+UlQqNbOif8dLpA0=
-github.com/gophercloud/utils v0.0.0-20210216074907-f6de111f2eae/go.mod h1:wx8HMD8oQD0Ryhz6+6ykq75PJ79iPyEqYHfwZ4l7OsA=
-github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=
-github.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=
-github.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=
-github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
-github.com/grpc-ecosystem/go-grpc-middleware v1.0.0/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=
-github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=
-github.com/grpc-ecosystem/grpc-gateway v1.9.0/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=
-github.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=
-github.com/h2non/parth v0.0.0-20190131123155-b4df798d6542 h1:2VTzZjLZBgl62/EtslCrtky5vbi9dd7HrQPQIx6wqiw=
-github.com/h2non/parth v0.0.0-20190131123155-b4df798d6542/go.mod h1:Ow0tF8D4Kplbc8s8sSb3V2oUCygFHVp8gC3Dn6U4MNI=
-github.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=
-github.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=
-github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=
-github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=
-github.com/hashicorp/go-checkpoint v0.5.0 h1:MFYpPZCnQqQTE18jFwSII6eUQrD/oxMFp3mlgcqk5mU=
-github.com/hashicorp/go-checkpoint v0.5.0/go.mod h1:7nfLNL10NsxqO4iWuW6tWW0HjZuDrwkBuEQsVcpCOgg=
-github.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
-github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
-github.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=
-github.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=
-github.com/hashicorp/go-cty v1.4.1-0.20200414143053-d3edf31b6320 h1:1/D3zfFHttUKaCaGKZ/dR2roBXv0vKbSCnssIldfQdI=
-github.com/hashicorp/go-cty v1.4.1-0.20200414143053-d3edf31b6320/go.mod h1:EiZBMaudVLy8fmjf9Npq1dq9RalhveqZG5w/yz3mHWs=
-github.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=
-github.com/hashicorp/go-hclog v1.5.0 h1:bI2ocEMgcVlz55Oj1xZNBsVi900c7II+fWDyV9o+13c=
-github.com/hashicorp/go-hclog v1.5.0/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=
-github.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=
-github.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=
-github.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=
-github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=
-github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=
-github.com/hashicorp/go-plugin v1.6.0 h1:wgd4KxHJTVGGqWBq4QPB1i5BZNEx9BR8+OFmHDmTk8A=
-github.com/hashicorp/go-plugin v1.6.0/go.mod h1:lBS5MtSSBZk0SHc66KACcjjlU6WzEVP/8pwz68aMkCI=
-github.com/hashicorp/go-retryablehttp v0.7.5 h1:bJj+Pj19UZMIweq/iie+1u5YCdGrnxCT9yvm0e+Nd5M=
-github.com/hashicorp/go-retryablehttp v0.7.5/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=
-github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=
-github.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=
-github.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=
-github.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
-github.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
-github.com/hashicorp/go-uuid v1.0.2/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
-github.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=
-github.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
-github.com/hashicorp/go-version v1.6.0 h1:feTTfFNnjP967rlCxM/I9g701jU+RN74YKx2mOkIeek=
-github.com/hashicorp/go-version v1.6.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
-github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=
-github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
-github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
-github.com/hashicorp/hc-install v0.6.3 h1:yE/r1yJvWbtrJ0STwScgEnCanb0U9v7zp0Gbkmcoxqs=
-github.com/hashicorp/hc-install v0.6.3/go.mod h1:KamGdbodYzlufbWh4r9NRo8y6GLHWZP2GBtdnms1Ln0=
-github.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=
-github.com/hashicorp/hcl/v2 v2.19.1 h1://i05Jqznmb2EXqa39Nsvyan2o5XyMowW5fnCKW5RPI=
-github.com/hashicorp/hcl/v2 v2.19.1/go.mod h1:ThLC89FV4p9MPW804KVbe/cEXoQ8NZEh+JtMeeGErHE=
-github.com/hashicorp/logutils v1.0.0 h1:dLEQVugN8vlakKOUE3ihGLTZJRB4j+M2cdTm/ORI65Y=
-github.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=
-github.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=
-github.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=
-github.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=
-github.com/hashicorp/terraform-exec v0.20.0 h1:DIZnPsqzPGuUnq6cH8jWcPunBfY+C+M8JyYF3vpnuEo=
-github.com/hashicorp/terraform-exec v0.20.0/go.mod h1:ckKGkJWbsNqFKV1itgMnE0hY9IYf1HoiekpuN0eWoDw=
-github.com/hashicorp/terraform-json v0.21.0 h1:9NQxbLNqPbEMze+S6+YluEdXgJmhQykRyRNd+zTI05U=
-github.com/hashicorp/terraform-json v0.21.0/go.mod h1:qdeBs11ovMzo5puhrRibdD6d2Dq6TyE/28JiU4tIQxk=
-github.com/hashicorp/terraform-plugin-go v0.22.0 h1:1OS1Jk5mO0f5hrziWJGXXIxBrMe2j/B8E+DVGw43Xmc=
-github.com/hashicorp/terraform-plugin-go v0.22.0/go.mod h1:mPULV91VKss7sik6KFEcEu7HuTogMLLO/EvWCuFkRVE=
-github.com/hashicorp/terraform-plugin-log v0.9.0 h1:i7hOA+vdAItN1/7UrfBqBwvYPQ9TFvymaRGZED3FCV0=
-github.com/hashicorp/terraform-plugin-log v0.9.0/go.mod h1:rKL8egZQ/eXSyDqzLUuwUYLVdlYeamldAHSxjUFADow=
-github.com/hashicorp/terraform-plugin-sdk/v2 v2.33.0 h1:qHprzXy/As0rxedphECBEQAh3R4yp6pKksKHcqZx5G8=
-github.com/hashicorp/terraform-plugin-sdk/v2 v2.33.0/go.mod h1:H+8tjs9TjV2w57QFVSMBQacf8k/E1XwLXGCARgViC6A=
-github.com/hashicorp/terraform-registry-address v0.2.3 h1:2TAiKJ1A3MAkZlH1YI/aTVcLZRu7JseiXNRHbOAyoTI=
-github.com/hashicorp/terraform-registry-address v0.2.3/go.mod h1:lFHA76T8jfQteVfT7caREqguFrW3c4MFSPhZB7HHgUM=
-github.com/hashicorp/terraform-svchost v0.1.1 h1:EZZimZ1GxdqFRinZ1tpJwVxxt49xc/S52uzrw4x0jKQ=
-github.com/hashicorp/terraform-svchost v0.1.1/go.mod h1:mNsjQfZyf/Jhz35v6/0LWcv26+X7JPS+buii2c9/ctc=
-github.com/hashicorp/yamux v0.1.1 h1:yrQxtgseBDrq9Y652vSRDvsKCJKOUD+GzTS4Y0Y8pvE=
-github.com/hashicorp/yamux v0.1.1/go.mod h1:CtWFDAQgb7dxtzFs4tWbplKIe2jSi3+5vKbgIO0SLnQ=
-github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=
-github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=
-github.com/iij/doapi v0.0.0-20190504054126-0bbf12d6d7df h1:MZf03xP9WdakyXhOWuAD5uPK3wHh96wCsqe3hCMKh8E=
-github.com/iij/doapi v0.0.0-20190504054126-0bbf12d6d7df/go.mod h1:QMZY7/J/KSQEhKWFeDesPjMj+wCHReeknARU3wqlyN4=
-github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=
-github.com/infobloxopen/infoblox-go-client v1.1.1 h1:728A6LbLjptj/7kZjHyIxQnm768PWHfGFm0HH8FnbtU=
-github.com/infobloxopen/infoblox-go-client v1.1.1/go.mod h1:BXiw7S2b9qJoM8MS40vfgCNB2NLHGusk1DtO16BD9zI=
-github.com/jarcoal/httpmock v1.0.8/go.mod h1:ATjnClrvW/3tijVmpL/va5Z3aAyGvqU3gCT8nX0Txik=
-github.com/jarcoal/httpmock v1.3.0 h1:2RJ8GP0IIaWwcC9Fp2BmVi8Kog3v2Hn7VXM3fTd+nuc=
-github.com/jarcoal/httpmock v1.3.0/go.mod h1:3yb8rc4BI7TCBhFY8ng0gjuLKJNquuDNiPaZjnENuYg=
-github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=
-github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=
-github.com/jhump/protoreflect v1.15.1 h1:HUMERORf3I3ZdX05WaQ6MIpd/NJ434hTp5YiKgfCL6c=
-github.com/jhump/protoreflect v1.15.1/go.mod h1:jD/2GMKKE6OqX8qTjhADU1e6DShO+gavG9e0Q693nKo=
-github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af/go.mod h1:Nht3zPeWKUH0NzdCt2Blrr5ys8VGpn0CEB0cQHVjt7k=
-github.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=
-github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=
-github.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=
-github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=
-github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=
-github.com/json-iterator/go v1.1.5/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=
-github.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=
-github.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
-github.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
-github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=
-github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=
-github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=
-github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=
-github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=
-github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213 h1:qGQQKEcAR99REcMpsXCp3lJ03zYT1PkRd3kQGPn9GVg=
-github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213/go.mod h1:vNUNkEQ1e29fT/6vq2aBdFsgNPmy8qMdSay1npru+Sw=
-github.com/kevinburke/ssh_config v1.2.0 h1:x584FjTGwHzMwvHx18PXxbBVzfnxogHaAReU4gf13a4=
-github.com/kevinburke/ssh_config v1.2.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=
-github.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=
-github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=
-github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b h1:udzkj9S/zlT5X367kqJis0QP7YMxobob6zhzq6Yre00=
-github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b/go.mod h1:pcaDhQK0/NJZEvtCO0qQPPropqV0sJOJ6YW7X+9kRwM=
-github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
-github.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=
-github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
-github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
-github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
-github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
-github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
-github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
-github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
-github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
-github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
-github.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=
-github.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=
-github.com/labbsr0x/bindman-dns-webhook v1.0.2 h1:I7ITbmQPAVwrDdhd6dHKi+MYJTJqPCK0jE6YNBAevnk=
-github.com/labbsr0x/bindman-dns-webhook v1.0.2/go.mod h1:p6b+VCXIR8NYKpDr8/dg1HKfQoRHCdcsROXKvmoehKA=
-github.com/labbsr0x/goh v1.0.1 h1:97aBJkDjpyBZGPbQuOK5/gHcSFbcr5aRsq3RSRJFpPk=
-github.com/labbsr0x/goh v1.0.1/go.mod h1:8K2UhVoaWXcCU7Lxoa2omWnC8gyW8px7/lmO61c027w=
-github.com/labstack/echo/v4 v4.6.3/go.mod h1:Hk5OiHj0kDqmFq7aHe7eDqI7CUhuCrfpupQtLGGLm7A=
-github.com/labstack/gommon v0.3.1/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=
-github.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=
-github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=
-github.com/lestrrat-go/backoff/v2 v2.0.8/go.mod h1:rHP/q/r9aT27n24JQLa7JhSQZCKBBOiM/uP402WwN8Y=
-github.com/lestrrat-go/blackmagic v1.0.0/go.mod h1:TNgH//0vYSs8VXDCfkZLgIrVTTXQELZffUV0tz3MtdQ=
-github.com/lestrrat-go/codegen v1.0.2/go.mod h1:JhJw6OQAuPEfVKUCLItpaVLumDGWQznd1VaXrBk9TdM=
-github.com/lestrrat-go/httpcc v1.0.0/go.mod h1:tGS/u00Vh5N6FHNkExqGGNId8e0Big+++0Gf8MBnAvE=
-github.com/lestrrat-go/iter v1.0.1/go.mod h1:zIdgO1mRKhn8l9vrZJZz9TUMMFbQbLeTsbqPDrJ/OJc=
-github.com/lestrrat-go/jwx v1.2.7/go.mod h1:bw24IXWbavc0R2RsOtpXL7RtMyP589yZ1+L7kd09ZGA=
-github.com/lestrrat-go/option v1.0.0/go.mod h1:5ZHFbivi4xwXxhxY9XHDe2FHo6/Z7WWmtT7T5nBBp3I=
-github.com/linode/linodego v1.28.0 h1:lzxxJebsYg5cCWRNDLyL2StW3sfMyAwf/FYfxFjFrlk=
-github.com/linode/linodego v1.28.0/go.mod h1:5oAsx+uinHtVo6U77nXXXtox7MWzUW6aEkTOKXxA9uo=
-github.com/liquidweb/go-lwApi v0.0.0-20190605172801-52a4864d2738/go.mod h1:0sYF9rMXb0vlG+4SzdiGMXHheCZxjguMq+Zb4S2BfBs=
-github.com/liquidweb/liquidweb-cli v0.6.9 h1:acbIvdRauiwbxIsOCEMXGwF75aSJDbDiyAWPjVnwoYM=
-github.com/liquidweb/liquidweb-cli v0.6.9/go.mod h1:cE1uvQ+x24NGUL75D0QagOFCG8Wdvmwu8aL9TLmA/eQ=
-github.com/liquidweb/liquidweb-go v1.6.4 h1:6S0m3hHSpiLqGD7AFSb7lH/W/qr1wx+tKil9fgIbjMc=
-github.com/liquidweb/liquidweb-go v1.6.4/go.mod h1:B934JPIIcdA+uTq2Nz5PgOtG6CuCaEvQKe/Ge/5GgZ4=
-github.com/magiconair/properties v1.8.1/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=
-github.com/magiconair/properties v1.8.4/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=
-github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=
-github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=
-github.com/matryer/moq v0.0.0-20190312154309-6cfb0558e1bd/go.mod h1:9ELz6aaclSIGnZBoaSLZ3NAl1VTufbOrXBPvtcy6WiQ=
-github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=
-github.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=
-github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
-github.com/mattn/go-colorable v0.1.8/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
-github.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
-github.com/mattn/go-colorable v0.1.11/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=
-github.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=
-github.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=
-github.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=
-github.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
-github.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=
-github.com/mattn/go-isatty v0.0.10/go.mod h1:qgIWMr58cqv1PHHyhnkY9lrL7etaEgOFcMEpPG5Rm84=
-github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
-github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=
-github.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=
-github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=
-github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
-github.com/mattn/go-runewidth v0.0.6/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=
-github.com/mattn/go-runewidth v0.0.9/go.mod h1:H031xJmbD/WCDINGzjvQ9THkh0rPKHF+m2gUSrubnMI=
-github.com/mattn/go-tty v0.0.3/go.mod h1:ihxohKRERHTVzN+aSVRwACLCeqIoZAWpoICkkvrWyR0=
-github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=
-github.com/maxatome/go-testdeep v1.12.0 h1:Ql7Go8Tg0C1D/uMMX59LAoYK7LffeJQ6X2T04nTH68g=
-github.com/maxatome/go-testdeep v1.12.0/go.mod h1:lPZc/HAcJMP92l7yI6TRz1aZN5URwUBUAfUNvrclaNM=
-github.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=
-github.com/miekg/dns v1.1.47/go.mod h1:e3IlAVfNqAllflbibAZEWOXOQ+Ynzk/dDozDxY7XnME=
-github.com/miekg/dns v1.1.58 h1:ca2Hdkz+cDg/7eNF6V56jjzuZ4aCAE+DbVkILdQWG/4=
-github.com/miekg/dns v1.1.58/go.mod h1:Ypv+3b/KadlvW9vJfXOTf300O4UqaHFzFCuHz+rPkBY=
-github.com/mimuret/golang-iij-dpf v0.9.1 h1:Gj6EhHJkOhr+q2RnvRPJsPMcjuVnWPSccEHyoEehU34=
-github.com/mimuret/golang-iij-dpf v0.9.1/go.mod h1:sl9KyOkESib9+KRD3HaGpgi1xk7eoN2+d96LCLsME2M=
-github.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=
-github.com/mitchellh/copystructure v1.2.0 h1:vpKXTN4ewci03Vljg/q9QvCGUDttBOGBIa15WveJJGw=
-github.com/mitchellh/copystructure v1.2.0/go.mod h1:qLl+cE2AmVv+CoeAwDPye/v+N2HKCj9FbZEVFJRxO9s=
-github.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
-github.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=
-github.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
-github.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=
-github.com/mitchellh/go-testing-interface v1.14.1 h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=
-github.com/mitchellh/go-testing-interface v1.14.1/go.mod h1:gfgS7OtZj6MA4U1UrDRp04twqAjfvlZyCfX3sDjEym8=
-github.com/mitchellh/go-wordwrap v1.0.0 h1:6GlHJ/LTGMrIJbwgdqdl2eEH8o+Exx/0m8ir9Gns0u4=
-github.com/mitchellh/go-wordwrap v1.0.0/go.mod h1:ZXFpozHsX6DPmq2I0TCekCxypsnAUbP2oI0UX1GXzOo=
-github.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=
-github.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=
-github.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
-github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
-github.com/mitchellh/mapstructure v1.3.3/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=
-github.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=
-github.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=
-github.com/mitchellh/reflectwalk v1.0.2 h1:G2LzWKi524PWgd3mLHV8Y5k7s6XUvT0Gef6zxSIeXaQ=
-github.com/mitchellh/reflectwalk v1.0.2/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=
-github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
-github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=
-github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
-github.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
-github.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
-github.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=
-github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=
-github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=
-github.com/namedotcom/go v0.0.0-20180403034216-08470befbe04 h1:o6uBwrhM5C8Ll3MAAxrQxRHEu7FkapwTuI2WmL1rw4g=
-github.com/namedotcom/go v0.0.0-20180403034216-08470befbe04/go.mod h1:5sN+Lt1CaY4wsPvgQH/jsuJi4XO2ssZbdsIizr4CVC8=
-github.com/nbio/st v0.0.0-20140626010706-e9e8d9816f32/go.mod h1:9wM+0iRr9ahx58uYLpLIr5fm8diHn0JbqRycJi6w0Ms=
-github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=
-github.com/nrdcg/auroradns v1.1.0 h1:KekGh8kmf2MNwqZVVYo/fw/ZONt8QMEmbMFOeljteWo=
-github.com/nrdcg/auroradns v1.1.0/go.mod h1:O7tViUZbAcnykVnrGkXzIJTHoQCHcgalgAe6X1mzHfk=
-github.com/nrdcg/bunny-go v0.0.0-20230728143221-c9dda82568d9 h1:qpB3wZR4+MPK92cTC9zZPnndkJgDgPvQqPUAgVc1NXU=
-github.com/nrdcg/bunny-go v0.0.0-20230728143221-c9dda82568d9/go.mod h1:HUoHXDrFvidN1NK9Wb/mZKNOfDNutKkzF2Pg71M9hHA=
-github.com/nrdcg/desec v0.7.0 h1:iuGhi4pstF3+vJWwt292Oqe2+AsSPKDynQna/eu1fDs=
-github.com/nrdcg/desec v0.7.0/go.mod h1:e1uRqqKv1mJdd5+SQROAhmy75lKMphLzWIuASLkpeFY=
-github.com/nrdcg/dnspod-go v0.4.0 h1:c/jn1mLZNKF3/osJ6mz3QPxTudvPArXTjpkmYj0uK6U=
-github.com/nrdcg/dnspod-go v0.4.0/go.mod h1:vZSoFSFeQVm2gWLMkyX61LZ8HI3BaqtHZWgPTGKr6KQ=
-github.com/nrdcg/freemyip v0.2.0 h1:/GscavT4GVqAY13HExl5UyoB4wlchv6Cg5NYDGsUoJ8=
-github.com/nrdcg/freemyip v0.2.0/go.mod h1:HjF0Yz0lSb37HD2ihIyGz9esyGcxbCrrGFLPpKevbx4=
-github.com/nrdcg/goinwx v0.10.0 h1:6W630bjDxQD6OuXKqrFRYVpTt0G/9GXXm3CeOrN0zJM=
-github.com/nrdcg/goinwx v0.10.0/go.mod h1:mnMSTi7CXBu2io4DzdOBoGFA1XclD0sEPWJaDhNgkA4=
-github.com/nrdcg/mailinabox v0.2.0 h1:IKq8mfKiVwNW2hQii/ng1dJ4yYMMv3HAP3fMFIq2CFk=
-github.com/nrdcg/mailinabox v0.2.0/go.mod h1:0yxqeYOiGyxAu7Sb94eMxHPIOsPYXAjTeA9ZhePhGnc=
-github.com/nrdcg/namesilo v0.2.1 h1:kLjCjsufdW/IlC+iSfAqj0iQGgKjlbUUeDJio5Y6eMg=
-github.com/nrdcg/namesilo v0.2.1/go.mod h1:lwMvfQTyYq+BbjJd30ylEG4GPSS6PII0Tia4rRpRiyw=
-github.com/nrdcg/nodion v0.1.0 h1:zLKaqTn2X0aDuBHHfyA1zFgeZfiCpmu/O9DM73okavw=
-github.com/nrdcg/nodion v0.1.0/go.mod h1:inbuh3neCtIWlMPZHtEpe43TmRXxHV6+hk97iCZicms=
-github.com/nrdcg/porkbun v0.3.0 h1:jnRV7j2zd3hmh+tSDOGetJyy3+WklaMxbs7HtTTmWMs=
-github.com/nrdcg/porkbun v0.3.0/go.mod h1:jh1DKz96jGHW+NCdG3AmTbbnQeBlNUz1KeSgeN/cBVw=
-github.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=
-github.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=
-github.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=
-github.com/nzdjb/go-metaname v1.0.0 h1:sNASlZC1RM3nSudtBTE1a3ZVTDyTpjqI5WXRPrdZ9Hg=
-github.com/nzdjb/go-metaname v1.0.0/go.mod h1:0GR0LshZax1Lz4VrOrfNSE4dGvTp7HGjiemdczXT2H4=
-github.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=
-github.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=
-github.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=
-github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
-github.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=
-github.com/onsi/ginkgo v1.16.4 h1:29JGrr5oVBm5ulCWet69zQkzWipVXIol6ygQUe/EzNc=
-github.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=
-github.com/onsi/ginkgo/v2 v2.0.0/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=
-github.com/onsi/ginkgo/v2 v2.1.3/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=
-github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=
-github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
-github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
-github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=
-github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=
-github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
-github.com/oracle/oci-go-sdk v24.3.0+incompatible h1:x4mcfb4agelf1O4/1/auGlZ1lr97jXRSSN5MxTgG/zU=
-github.com/oracle/oci-go-sdk v24.3.0+incompatible/go.mod h1:VQb79nF8Z2cwLkLS35ukwStZIg5F66tcBccjip/j888=
-github.com/ovh/go-ovh v1.4.3 h1:Gs3V823zwTFpzgGLZNI6ILS4rmxZgJwJCz54Er9LwD0=
-github.com/ovh/go-ovh v1.4.3/go.mod h1:AkPXVtgwB6xlKblMjRKJJmjRp+ogrE7fz2lVgcQY8SY=
-github.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=
-github.com/patrickmn/go-cache v2.1.0+incompatible h1:HRMgzkcYKYpi3C8ajMPV8OFXaaRUnok+kx1WdO15EQc=
-github.com/patrickmn/go-cache v2.1.0+incompatible/go.mod h1:3Qf8kWWT7OJRJbdiICTKqZju1ZixQ/KpMGzzAfe6+WQ=
-github.com/pelletier/go-toml v1.2.0/go.mod h1:5z9KED0ma1S8pY6P1sdut58dfprrGBbd/94hg7ilaic=
-github.com/pelletier/go-toml v1.8.1/go.mod h1:T2/BmBdy8dvIRq1a/8aqjN41wvWlN4lrapLU/GW4pbc=
-github.com/pjbgf/sha1cd v0.3.0 h1:4D5XXmUUBUl/xQ6IjCkEAbqXskkq/4O7LmGn0AqMDs4=
-github.com/pjbgf/sha1cd v0.3.0/go.mod h1:nZ1rrWOcGJ5uZgEEVL1VUM9iRQiZvWdbZjkKyFzPPsI=
-github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8 h1:KoWmjvw+nsYOo29YJK9vDA65RGE3NrOnUtO7a+RF9HU=
-github.com/pkg/browser v0.0.0-20210911075715-681adbf594b8/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=
-github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=
-github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
-github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
-github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=
-github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
-github.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=
-github.com/pkg/term v1.1.0/go.mod h1:E25nymQcrSllhX42Ok8MRm1+hyBdHY0dCeiKZ9jpNGw=
-github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
-github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
-github.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=
-github.com/pquerna/otp v1.4.0 h1:wZvl1TIVxKRThZIBiwOOHOGP/1+nZyWBil9Y2XNEDzg=
-github.com/pquerna/otp v1.4.0/go.mod h1:dkJfzwRKNiegxyNb54X/3fLwhCynbMspSyWKnvi1AEg=
-github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=
-github.com/prometheus/client_golang v0.9.3/go.mod h1:/TN21ttK/J9q6uSwhBd54HahCDft0ttaMvbicHlPoso=
-github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=
-github.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=
-github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=
-github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
-github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
-github.com/prometheus/common v0.0.0-20181113130724-41aa239b4cce/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=
-github.com/prometheus/common v0.4.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
-github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
-github.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=
-github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=
-github.com/prometheus/procfs v0.0.0-20190507164030-5867b95ac084/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=
-github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=
-github.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=
-github.com/prometheus/tsdb v0.7.1/go.mod h1:qhTCs0VvXwvX/y3TZrWD7rabWM+ijKTux40TwIPHuXU=
-github.com/rainycape/memcache v0.0.0-20150622160815-1031fa0ce2f2 h1:dq90+d51/hQRaHEqRAsQ1rE/pC1GUS4sc2rCbbFsAIY=
-github.com/rainycape/memcache v0.0.0-20150622160815-1031fa0ce2f2/go.mod h1:7tZKcyumwBO6qip7RNQ5r77yrssm9bfCowcLEBcU5IA=
-github.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=
-github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=
-github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
-github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
-github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
-github.com/rogpeppe/go-internal v1.8.1 h1:geMPLpDpQOgVyCg5z5GoRwLHepNdb71NXb67XFkP+Eg=
-github.com/rogpeppe/go-internal v1.8.1/go.mod h1:JeRgkft04UBgHMgCIwADu4Pn6Mtm5d4nPKWu0nJ5d+o=
-github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
-github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
-github.com/sacloud/api-client-go v0.2.8 h1:tIY6PZNBX900K66TqEPa4d6UIbedUczfCBnPJkzi8kw=
-github.com/sacloud/api-client-go v0.2.8/go.mod h1:0CV/kWNYlS1hCNdnk6Wx7Wdg8DPFCnv0zOIzdXjeAeY=
-github.com/sacloud/go-http v0.1.6 h1:lJGXDt9xrxJiDszRPaN9NIP8MVj10YKMzmnyzdSfI8w=
-github.com/sacloud/go-http v0.1.6/go.mod h1:oLAHoDJRkptf8sq4fE8oERLkdCh0kJWfWu+paoJY7I0=
-github.com/sacloud/iaas-api-go v1.11.1 h1:2MsFZ4H1uRdRVx2nVXuERWQ3swoFc3XreIV5hJ3Nsws=
-github.com/sacloud/iaas-api-go v1.11.1/go.mod h1:uBDSa06F/V0OnoR66jGdbH0PVnCJw+NeE9RVbVgMfss=
-github.com/sacloud/packages-go v0.0.9 h1:GbinkBLC/eirFhHpLjoDW6JV7+95Rnd2d8RWj7Afeks=
-github.com/sacloud/packages-go v0.0.9/go.mod h1:k+EEUMF2LlncjbNIJNOqLyZ9wjTESPIWIk1OA7x9j2Q=
-github.com/scaleway/scaleway-sdk-go v1.0.0-beta.22 h1:wJrcTdddKOI8TFxs8cemnhKP2EmKy3yfUKHj3ZdfzYo=
-github.com/scaleway/scaleway-sdk-go v1.0.0-beta.22/go.mod h1:fCa7OJZ/9DRTnOKmxvT6pn+LPWUptQAmHF/SBJUGEcg=
-github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=
-github.com/sergi/go-diff v1.2.0 h1:XU+rvMAioB0UC3q1MFrIQy4Vo5/4VsRDQQXHsEya6xQ=
-github.com/sergi/go-diff v1.2.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=
-github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=
-github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=
-github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=
-github.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=
-github.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=
-github.com/skeema/knownhosts v1.2.1 h1:SHWdIUa82uGZz+F+47k8SY4QhhI291cXCpopT1lK2AQ=
-github.com/skeema/knownhosts v1.2.1/go.mod h1:xYbVRSPxqBZFrdmDyMmsOs+uX1UZC3nTN3ThzgDxUwo=
-github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=
-github.com/smartystreets/assertions v1.0.1 h1:voD4ITNjPL5jjBfgR/r8fPIIBrliWrWHeiJApdr3r4w=
-github.com/smartystreets/assertions v1.0.1/go.mod h1:kHHU4qYBaI3q23Pp3VPrmWhuIUrLW/7eUrw0BU5VaoM=
-github.com/smartystreets/go-aws-auth v0.0.0-20180515143844-0c1422d1fdb9 h1:hp2CYQUINdZMHdvTdXtPOY2ainKl4IoMcpAXEf2xj3Q=
-github.com/smartystreets/go-aws-auth v0.0.0-20180515143844-0c1422d1fdb9/go.mod h1:SnhjPscd9TpLiy1LpzGSKh3bXCfxxXuqd9xmQJy3slM=
-github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=
-github.com/smartystreets/gunit v1.0.4 h1:tpTjnuH7MLlqhoD21vRoMZbMIi5GmBsAJDFyF67GhZA=
-github.com/smartystreets/gunit v1.0.4/go.mod h1:EH5qMBab2UclzXUcpR8b93eHsIlp9u+pDQIRp5DZNzQ=
-github.com/softlayer/softlayer-go v1.1.3 h1:dfFzt5eOKIAyB/b78fHMyDu5ICx0ZtxL9NRhBlf831A=
-github.com/softlayer/softlayer-go v1.1.3/go.mod h1:Pc7F57OgUKaAam7TtpqkUeqL7QyKknfiUI4R49h41/U=
-github.com/softlayer/xmlrpc v0.0.0-20200409220501-5f089df7cb7e h1:3OgWYFw7jxCZPcvAg+4R8A50GZ+CCkARF10lxu2qDsQ=
-github.com/softlayer/xmlrpc v0.0.0-20200409220501-5f089df7cb7e/go.mod h1:fKZCUVdirrxrBpwd9wb+lSoVixvpwAu8eHzbQB2tums=
-github.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=
-github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
-github.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=
-github.com/spf13/afero v1.4.1/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=
-github.com/spf13/cast v1.3.0/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=
-github.com/spf13/cast v1.3.1 h1:nFm6S0SMdyzrzcmThSipiEubIDy8WEXKNZ0UOgiRpng=
-github.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=
-github.com/spf13/cobra v1.1.1/go.mod h1:WnodtKOvamDL/PwE2M4iKs8aMDBZ5Q5klgD3qfVJQMI=
-github.com/spf13/jwalterweatherman v1.0.0/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=
-github.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=
-github.com/spf13/pflag v1.0.3/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=
-github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=
-github.com/spf13/viper v1.7.0/go.mod h1:8WkrPz2fc9jxqZNCJI/76HCieCp4Q8HaLFoCha5qpdg=
-github.com/spf13/viper v1.7.1/go.mod h1:8WkrPz2fc9jxqZNCJI/76HCieCp4Q8HaLFoCha5qpdg=
-github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
-github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
-github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=
-github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=
-github.com/stretchr/objx v0.5.1 h1:4VhoImhV/Bm0ToFkXFi8hXNXwpDRZ/ynw3amt82mzq0=
-github.com/stretchr/objx v0.5.1/go.mod h1:/iHQpkQwBD6DLUmQ4pE+s1TXdob1mORJ4/UFdrifcy0=
-github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
-github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
-github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
-github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=
-github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
-github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
-github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
-github.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=
-github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
-github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=
-github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=
-github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=
-github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=
-github.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=
-github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.490 h1:mmz27tVi2r70JYnm5y0Zk8w0Qzsx+vfUw3oqSyrEfP8=
-github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common v1.0.490/go.mod h1:7sCQWVkxcsR38nffDW057DRGk8mUjK1Ing/EFOK8s8Y=
-github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod v1.0.490 h1:g9SWTaTy/rEuhMErC2jWq9Qt5ci+jBYSvXnJsLq4adg=
-github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod v1.0.490/go.mod h1:l9q4vc1QiawUB1m3RU+87yLvrrxe54jc0w/kEl4DbSQ=
-github.com/tmc/grpc-websocket-proxy v0.0.0-20190109142713-0ad062ec5ee5/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=
-github.com/transip/gotransip/v6 v6.23.0 h1:PsTdjortrEZ8IFFifEryzjVjOy9SgK4ahlnhKBBIQgA=
-github.com/transip/gotransip/v6 v6.23.0/go.mod h1:nzv9eN2tdsUrm5nG5ZX6AugYIU4qgsMwIn2c0EZLk8c=
-github.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=
-github.com/ugorji/go v1.2.6/go.mod h1:anCg0y61KIhDlPZmnH+so+RQbysYVyDko0IMgJv0Nn0=
-github.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=
-github.com/ugorji/go/codec v1.2.6/go.mod h1:V6TCNZ4PHqoHGFZuSG1W8nrCzzdgA2DozYxWFFpvxTw=
-github.com/ultradns/ultradns-go-sdk v1.6.1-20231103022937-8589b6a h1:w4PK5/N9kq8PfNxBv8a5t1bqlYRrVT7XzT7iTPTtiPk=
-github.com/ultradns/ultradns-go-sdk v1.6.1-20231103022937-8589b6a/go.mod h1:Xwz7o+ExFtxR/i0aJDnTXuiccQJlOxDgNe6FsZC4TzQ=
-github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=
-github.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=
-github.com/vinyldns/go-vinyldns v0.9.16 h1:GZJStDkcCk1F1AcRc64LuuMh+ENL8pHA0CVd4ulRMcQ=
-github.com/vinyldns/go-vinyldns v0.9.16/go.mod h1:5qIJOdmzAnatKjurI+Tl4uTus7GJKJxb+zitufjHs3Q=
-github.com/vmihailenco/msgpack v3.3.3+incompatible/go.mod h1:fy3FlTQTDXWkZ7Bh6AcGMlsjHatGryHQYUTf1ShIgkk=
-github.com/vmihailenco/msgpack v4.0.4+incompatible h1:dSLoQfGFAo3F6OoNhwUmLwVgaUXK79GlxNBwueZn0xI=
-github.com/vmihailenco/msgpack v4.0.4+incompatible/go.mod h1:fy3FlTQTDXWkZ7Bh6AcGMlsjHatGryHQYUTf1ShIgkk=
-github.com/vmihailenco/msgpack/v5 v5.4.1 h1:cQriyiUvjTwOHg8QZaPihLWeRAAVoCpE00IUPn0Bjt8=
-github.com/vmihailenco/msgpack/v5 v5.4.1/go.mod h1:GaZTsDaehaPpQVyxrf5mtQlH+pc21PIudVV/E3rRQok=
-github.com/vmihailenco/tagparser/v2 v2.0.0 h1:y09buUbR+b5aycVFQs/g70pqKVZNBmxwAhO7/IwNM9g=
-github.com/vmihailenco/tagparser/v2 v2.0.0/go.mod h1:Wri+At7QHww0WTrCBeu4J6bNtoV6mEfg5OIWRZA9qds=
-github.com/vultr/govultr/v2 v2.17.2 h1:gej/rwr91Puc/tgh+j33p/BLR16UrIPnSr+AIwYWZQs=
-github.com/vultr/govultr/v2 v2.17.2/go.mod h1:ZFOKGWmgjytfyjeyAdhQlSWwTjh2ig+X49cAp50dzXI=
-github.com/xanzy/ssh-agent v0.3.3 h1:+/15pJfg/RsTxqYcX6fHqOXZwwMP+2VyYWJeWM2qQFM=
-github.com/xanzy/ssh-agent v0.3.3/go.mod h1:6dzNDKs0J9rVPHPhaGCukekBHKqfl+L3KghI1Bc68Uw=
-github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=
-github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415/go.mod h1:GwrjFmJcFw6At/Gs6z4yjiIwzuJ1/+UwLxMQDVQXShQ=
-github.com/xeipuuv/gojsonschema v1.2.0/go.mod h1:anYRn/JVcOK2ZgGU+IjEV4nwlhoK5sQluxsYJ78Id3Y=
-github.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=
-github.com/yandex-cloud/go-genproto v0.0.0-20220805142335-27b56ddae16f h1:cG+ehPRJSlqljSufLf1KXeXpUd1dLNjnzA18mZcB/O0=
-github.com/yandex-cloud/go-genproto v0.0.0-20220805142335-27b56ddae16f/go.mod h1:HEUYX/p8966tMUHHT+TsS0hF/Ca/NYwqprC5WXSDMfE=
-github.com/yandex-cloud/go-sdk v0.0.0-20220805164847-cf028e604997 h1:2wzke3JH7OtN20WsNDZx2VH/TCmsbqtDEbXzjF+i05E=
-github.com/yandex-cloud/go-sdk v0.0.0-20220805164847-cf028e604997/go.mod h1:2CHKs/YGbCcNn/BPaCkEBwKz/FNCELi+MLILjR9RaTA=
-github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
-github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=
-github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=
-github.com/zclconf/go-cty v1.14.2 h1:kTG7lqmBou0Zkx35r6HJHUQTvaRPr5bIAf3AoHS0izI=
-github.com/zclconf/go-cty v1.14.2/go.mod h1:VvMs5i0vgZdhYawQNq5kePSpLAoz8u1xvZgrPIxfnZE=
-go.etcd.io/bbolt v1.3.2/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=
-go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=
-go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=
-go.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=
-go.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=
-go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0 h1:sv9kVfal0MK0wBMCOGr+HeJm9v803BkJxGrk2au7j08=
-go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.47.0/go.mod h1:SK2UL73Zy1quvRPonmOmRDiWk1KBV3LyIeeIxcEApWw=
-go.opentelemetry.io/otel v1.22.0 h1:xS7Ku+7yTFvDfDraDIJVpw7XPyuHlB9MCiqqX5mcJ6Y=
-go.opentelemetry.io/otel v1.22.0/go.mod h1:eoV4iAi3Ea8LkAEI9+GFT44O6T/D0GWAVFyZVCC6pMI=
-go.opentelemetry.io/otel/metric v1.22.0 h1:lypMQnGyJYeuYPhOM/bgjbFM6WE44W1/T45er4d8Hhg=
-go.opentelemetry.io/otel/metric v1.22.0/go.mod h1:evJGjVpZv0mQ5QBRJoBF64yMuOf4xCWdXjK8pzFvliY=
-go.opentelemetry.io/otel/trace v1.22.0 h1:Hg6pPujv0XG9QaVbGOBVHunyuLcCC3jN7WEhPx83XD0=
-go.opentelemetry.io/otel/trace v1.22.0/go.mod h1:RbbHXVqKES9QhzZq/fE5UnOSILqRt40a21sPw2He1xo=
-go.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=
-go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
-go.uber.org/atomic v1.7.0 h1:ADUqmZGgLDDfbSL9ZmPxKTybcoEYHgpYfELNoN+7hsw=
-go.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=
-go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=
-go.uber.org/ratelimit v0.2.0 h1:UQE2Bgi7p2B85uP5dC2bbRtig0C+OeNRnNEafLjsLPA=
-go.uber.org/ratelimit v0.2.0/go.mod h1:YYBV4e4naJvhpitQrWJu1vCpgB7CboMe0qhltKt6mUg=
-go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=
-golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
-golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
-golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
-golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
-golang.org/x/crypto v0.0.0-20201016220609-9e8e0b390897/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
-golang.org/x/crypto v0.0.0-20201217014255-9d1352758620/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=
-golang.org/x/crypto v0.0.0-20201221181555-eec23a3978ad/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=
-golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20211202192323-5770296d904e/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
-golang.org/x/crypto v0.0.0-20211215153901-e495a2d5b3d3/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
-golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
-golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=
-golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=
-golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=
-golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
-golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
-golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
-golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
-golang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=
-golang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=
-golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=
-golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=
-golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
-golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
-golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
-golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=
-golang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=
-golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=
-golang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=
-golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
-golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=
-golang.org/x/mod v0.15.0 h1:SernR4v+D55NyBH2QiEQrlBAnj1ECL6AGrA5+dPaMY8=
-golang.org/x/mod v0.15.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=
-golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=
-golang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
-golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
-golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
-golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
-golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
-golang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
-golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
-golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=
-golang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=
-golang.org/x/net v0.0.0-20210726213435-c6fcb2dbf985/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20210913180222-943fd674d43e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
-golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
-golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
-golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
-golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=
-golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=
-golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
-golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
-golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
-golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
-golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
-golang.org/x/oauth2 v0.17.0 h1:6m3ZPmLEFdVxKKWnKq4VqZ60gutO35zm+zrAHVmHyDQ=
-golang.org/x/oauth2 v0.17.0/go.mod h1:OzPDGQiuQMguemayvdylqddI7qcD9lnSDb+1FiwQ5HA=
-golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.6.0 h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=
-golang.org/x/sync v0.6.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
-golang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190801041406-cbf593c0f2f3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191008105621-543471e840be/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200909081042-eff7692f9009/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200918174421-af09f7315aff/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20201110211018-35f3e6cf4a65/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210616045830-e2b7044e8c71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=
-golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
-golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
-golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
-golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
-golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
-golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
-golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=
-golang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=
-golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
-golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
-golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
-golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
-golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
-golang.org/x/text v0.3.8/go.mod h1:E6s5w1FMmriuDzIBO73fBruAKo1PCIq6d2Q6DHfQ8WQ=
-golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
-golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=
-golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=
-golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=
-golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=
-golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
-golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
-golang.org/x/time v0.0.0-20201208040808-7e3f01d25324/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
-golang.org/x/time v0.0.0-20210220033141-f8bda1e9f3ba/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
-golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
-golang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=
-golang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=
-golang.org/x/tools v0.0.0-20180221164845-07fd8470d635/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
-golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
-golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
-golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
-golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
-golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
-golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
-golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
-golang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
-golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
-golang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
-golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20200918232735-d647fc253266/go.mod h1:z6u4i615ZeAfBE4XtMziQW1fSVJXACjjbWkB/mvPzlU=
-golang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
-golang.org/x/tools v0.0.0-20210114065538-d78b04bdf963/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
-golang.org/x/tools v0.1.6-0.20210726203631-07bc1bf47fb2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
-golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
-golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=
-golang.org/x/tools v0.17.0 h1:FvmRgNOcs3kOa+T20R1uhfP9F6HgG2mfxDv1vrx1Htc=
-golang.org/x/tools v0.17.0/go.mod h1:xsh6VxdV005rRVaS6SSAf9oiAqljS7UZUacMZ8Bnsps=
-golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=
-google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=
-google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
-google.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
-google.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
-google.golang.org/api v0.162.0 h1:Vhs54HkaEpkMBdgGdOT2P6F0csGG/vxDS0hWHJzmmps=
-google.golang.org/api v0.162.0/go.mod h1:6SulDkfoBIg4NFmCuZ39XeeAgSHCPecfSUuDyYlAHs0=
-google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
-google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
-google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
-google.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=
-google.golang.org/appengine v1.6.8 h1:IhEN5q69dyKagZPYMSdIjS2HqprW324FRQZJcGqPAsM=
-google.golang.org/appengine v1.6.8/go.mod h1:1jJ3jBArFh5pcgW8gCtRJnepW8FzD1V44FJffLiz/Ds=
-google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
-google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
-google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
-google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
-google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
-google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
-google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
-google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=
-google.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
-google.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
-google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
-google.golang.org/genproto v0.0.0-20211021150943-2b146023228c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
-google.golang.org/genproto v0.0.0-20240227224415-6ceb2ff114de h1:F6qOa9AZTYJXOUEr4jDysRDLrm4PHePlge4v4TGAlxY=
-google.golang.org/genproto v0.0.0-20240227224415-6ceb2ff114de/go.mod h1:VUhTRKeHn9wwcdrk73nvdC9gF178Tzhmt/qyaFcPLSo=
-google.golang.org/genproto/googleapis/api v0.0.0-20240227224415-6ceb2ff114de h1:jFNzHPIeuzhdRwVhbZdiym9q0ory/xY3sA+v2wPg8I0=
-google.golang.org/genproto/googleapis/api v0.0.0-20240227224415-6ceb2ff114de/go.mod h1:5iCWqnniDlqZHrd3neWVTOwvh/v6s3232omMecelax8=
-google.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de h1:cZGRis4/ot9uVm639a+rHCUaG0JJHEsdyzSQTMX+suY=
-google.golang.org/genproto/googleapis/rpc v0.0.0-20240227224415-6ceb2ff114de/go.mod h1:H4O17MA/PE9BsGx3w+a+W2VOLLD1Qf7oJneAoU6WktY=
-google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
-google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=
-google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=
-google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
-google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=
-google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
-google.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=
-google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=
-google.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
-google.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=
-google.golang.org/grpc v1.41.0/go.mod h1:U3l9uK9J0sini8mHphKoXyaqDA/8VyGnDee1zzIUK6k=
-google.golang.org/grpc v1.63.2 h1:MUeiw1B2maTVZthpU5xvASfTh3LDbxHd6IJ6QQVU+xM=
-google.golang.org/grpc v1.63.2/go.mod h1:WAX/8DgncnokcFUldAxq7GeB5DXHDbMF+lLvDomNkRA=
-google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
-google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
-google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
-google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
-google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
-google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
-google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
-google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
-google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
-google.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=
-google.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=
-gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=
-gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
-gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
-gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=
-gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
-gopkg.in/h2non/gock.v1 v1.0.15 h1:SzLqcIlb/fDfg7UvukMpNcWsu7sI5tWwL+KCATZqks0=
-gopkg.in/h2non/gock.v1 v1.0.15/go.mod h1:sX4zAkdYX1TRGJ2JY156cFspQn4yRWn6p9EMdODlynE=
-gopkg.in/ini.v1 v1.51.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
-gopkg.in/ini.v1 v1.51.1/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
-gopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
-gopkg.in/ini.v1 v1.66.2/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
-gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=
-gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
-gopkg.in/ns1/ns1-go.v2 v2.7.13 h1:r07CLALg18f/L1KIK1ZJdbirBV349UtYT1rDWGjnaTk=
-gopkg.in/ns1/ns1-go.v2 v2.7.13/go.mod h1:pfaU0vECVP7DIOr453z03HXS6dFJpXdNRwOyRzwmPSc=
-gopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=
-gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=
-gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
-gopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=
-gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=
-gopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=
-gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=
-gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
-gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
-gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=
-rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=
-software.sslmate.com/src/go-pkcs12 v0.4.0 h1:H2g08FrTvSFKUj+D309j1DPfk5APnIdAQAB8aEykJ5k=
-software.sslmate.com/src/go-pkcs12 v0.4.0/go.mod h1:Qiz0EyvDRJjjxGyUQa2cCNZn/wMyzrRJ/qcDXOQazLI=
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/LICENSE ./vancluever/v2.21.0/vancluever/v2.21.0/LICENSE
--- ./vancluever/v2.21.0/LICENSE	2024-04-26 18:07:21.593801524 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/LICENSE	1970-01-01 07:30:00.000000000 +0730
@@ -1,373 +0,0 @@
-Mozilla Public License Version 2.0
-==================================
-
-1. Definitions
---------------
-
-1.1. "Contributor"
-    means each individual or legal entity that creates, contributes to
-    the creation of, or owns Covered Software.
-
-1.2. "Contributor Version"
-    means the combination of the Contributions of others (if any) used
-    by a Contributor and that particular Contributor's Contribution.
-
-1.3. "Contribution"
-    means Covered Software of a particular Contributor.
-
-1.4. "Covered Software"
-    means Source Code Form to which the initial Contributor has attached
-    the notice in Exhibit A, the Executable Form of such Source Code
-    Form, and Modifications of such Source Code Form, in each case
-    including portions thereof.
-
-1.5. "Incompatible With Secondary Licenses"
-    means
-
-    (a) that the initial Contributor has attached the notice described
-        in Exhibit B to the Covered Software; or
-
-    (b) that the Covered Software was made available under the terms of
-        version 1.1 or earlier of the License, but not also under the
-        terms of a Secondary License.
-
-1.6. "Executable Form"
-    means any form of the work other than Source Code Form.
-
-1.7. "Larger Work"
-    means a work that combines Covered Software with other material, in
-    a separate file or files, that is not Covered Software.
-
-1.8. "License"
-    means this document.
-
-1.9. "Licensable"
-    means having the right to grant, to the maximum extent possible,
-    whether at the time of the initial grant or subsequently, any and
-    all of the rights conveyed by this License.
-
-1.10. "Modifications"
-    means any of the following:
-
-    (a) any file in Source Code Form that results from an addition to,
-        deletion from, or modification of the contents of Covered
-        Software; or
-
-    (b) any new file in Source Code Form that contains any Covered
-        Software.
-
-1.11. "Patent Claims" of a Contributor
-    means any patent claim(s), including without limitation, method,
-    process, and apparatus claims, in any patent Licensable by such
-    Contributor that would be infringed, but for the grant of the
-    License, by the making, using, selling, offering for sale, having
-    made, import, or transfer of either its Contributions or its
-    Contributor Version.
-
-1.12. "Secondary License"
-    means either the GNU General Public License, Version 2.0, the GNU
-    Lesser General Public License, Version 2.1, the GNU Affero General
-    Public License, Version 3.0, or any later versions of those
-    licenses.
-
-1.13. "Source Code Form"
-    means the form of the work preferred for making modifications.
-
-1.14. "You" (or "Your")
-    means an individual or a legal entity exercising rights under this
-    License. For legal entities, "You" includes any entity that
-    controls, is controlled by, or is under common control with You. For
-    purposes of this definition, "control" means (a) the power, direct
-    or indirect, to cause the direction or management of such entity,
-    whether by contract or otherwise, or (b) ownership of more than
-    fifty percent (50%) of the outstanding shares or beneficial
-    ownership of such entity.
-
-2. License Grants and Conditions
---------------------------------
-
-2.1. Grants
-
-Each Contributor hereby grants You a world-wide, royalty-free,
-non-exclusive license:
-
-(a) under intellectual property rights (other than patent or trademark)
-    Licensable by such Contributor to use, reproduce, make available,
-    modify, display, perform, distribute, and otherwise exploit its
-    Contributions, either on an unmodified basis, with Modifications, or
-    as part of a Larger Work; and
-
-(b) under Patent Claims of such Contributor to make, use, sell, offer
-    for sale, have made, import, and otherwise transfer either its
-    Contributions or its Contributor Version.
-
-2.2. Effective Date
-
-The licenses granted in Section 2.1 with respect to any Contribution
-become effective for each Contribution on the date the Contributor first
-distributes such Contribution.
-
-2.3. Limitations on Grant Scope
-
-The licenses granted in this Section 2 are the only rights granted under
-this License. No additional rights or licenses will be implied from the
-distribution or licensing of Covered Software under this License.
-Notwithstanding Section 2.1(b) above, no patent license is granted by a
-Contributor:
-
-(a) for any code that a Contributor has removed from Covered Software;
-    or
-
-(b) for infringements caused by: (i) Your and any other third party's
-    modifications of Covered Software, or (ii) the combination of its
-    Contributions with other software (except as part of its Contributor
-    Version); or
-
-(c) under Patent Claims infringed by Covered Software in the absence of
-    its Contributions.
-
-This License does not grant any rights in the trademarks, service marks,
-or logos of any Contributor (except as may be necessary to comply with
-the notice requirements in Section 3.4).
-
-2.4. Subsequent Licenses
-
-No Contributor makes additional grants as a result of Your choice to
-distribute the Covered Software under a subsequent version of this
-License (see Section 10.2) or under the terms of a Secondary License (if
-permitted under the terms of Section 3.3).
-
-2.5. Representation
-
-Each Contributor represents that the Contributor believes its
-Contributions are its original creation(s) or it has sufficient rights
-to grant the rights to its Contributions conveyed by this License.
-
-2.6. Fair Use
-
-This License is not intended to limit any rights You have under
-applicable copyright doctrines of fair use, fair dealing, or other
-equivalents.
-
-2.7. Conditions
-
-Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
-in Section 2.1.
-
-3. Responsibilities
--------------------
-
-3.1. Distribution of Source Form
-
-All distribution of Covered Software in Source Code Form, including any
-Modifications that You create or to which You contribute, must be under
-the terms of this License. You must inform recipients that the Source
-Code Form of the Covered Software is governed by the terms of this
-License, and how they can obtain a copy of this License. You may not
-attempt to alter or restrict the recipients' rights in the Source Code
-Form.
-
-3.2. Distribution of Executable Form
-
-If You distribute Covered Software in Executable Form then:
-
-(a) such Covered Software must also be made available in Source Code
-    Form, as described in Section 3.1, and You must inform recipients of
-    the Executable Form how they can obtain a copy of such Source Code
-    Form by reasonable means in a timely manner, at a charge no more
-    than the cost of distribution to the recipient; and
-
-(b) You may distribute such Executable Form under the terms of this
-    License, or sublicense it under different terms, provided that the
-    license for the Executable Form does not attempt to limit or alter
-    the recipients' rights in the Source Code Form under this License.
-
-3.3. Distribution of a Larger Work
-
-You may create and distribute a Larger Work under terms of Your choice,
-provided that You also comply with the requirements of this License for
-the Covered Software. If the Larger Work is a combination of Covered
-Software with a work governed by one or more Secondary Licenses, and the
-Covered Software is not Incompatible With Secondary Licenses, this
-License permits You to additionally distribute such Covered Software
-under the terms of such Secondary License(s), so that the recipient of
-the Larger Work may, at their option, further distribute the Covered
-Software under the terms of either this License or such Secondary
-License(s).
-
-3.4. Notices
-
-You may not remove or alter the substance of any license notices
-(including copyright notices, patent notices, disclaimers of warranty,
-or limitations of liability) contained within the Source Code Form of
-the Covered Software, except that You may alter any license notices to
-the extent required to remedy known factual inaccuracies.
-
-3.5. Application of Additional Terms
-
-You may choose to offer, and to charge a fee for, warranty, support,
-indemnity or liability obligations to one or more recipients of Covered
-Software. However, You may do so only on Your own behalf, and not on
-behalf of any Contributor. You must make it absolutely clear that any
-such warranty, support, indemnity, or liability obligation is offered by
-You alone, and You hereby agree to indemnify every Contributor for any
-liability incurred by such Contributor as a result of warranty, support,
-indemnity or liability terms You offer. You may include additional
-disclaimers of warranty and limitations of liability specific to any
-jurisdiction.
-
-4. Inability to Comply Due to Statute or Regulation
----------------------------------------------------
-
-If it is impossible for You to comply with any of the terms of this
-License with respect to some or all of the Covered Software due to
-statute, judicial order, or regulation then You must: (a) comply with
-the terms of this License to the maximum extent possible; and (b)
-describe the limitations and the code they affect. Such description must
-be placed in a text file included with all distributions of the Covered
-Software under this License. Except to the extent prohibited by statute
-or regulation, such description must be sufficiently detailed for a
-recipient of ordinary skill to be able to understand it.
-
-5. Termination
---------------
-
-5.1. The rights granted under this License will terminate automatically
-if You fail to comply with any of its terms. However, if You become
-compliant, then the rights granted under this License from a particular
-Contributor are reinstated (a) provisionally, unless and until such
-Contributor explicitly and finally terminates Your grants, and (b) on an
-ongoing basis, if such Contributor fails to notify You of the
-non-compliance by some reasonable means prior to 60 days after You have
-come back into compliance. Moreover, Your grants from a particular
-Contributor are reinstated on an ongoing basis if such Contributor
-notifies You of the non-compliance by some reasonable means, this is the
-first time You have received notice of non-compliance with this License
-from such Contributor, and You become compliant prior to 30 days after
-Your receipt of the notice.
-
-5.2. If You initiate litigation against any entity by asserting a patent
-infringement claim (excluding declaratory judgment actions,
-counter-claims, and cross-claims) alleging that a Contributor Version
-directly or indirectly infringes any patent, then the rights granted to
-You by any and all Contributors for the Covered Software under Section
-2.1 of this License shall terminate.
-
-5.3. In the event of termination under Sections 5.1 or 5.2 above, all
-end user license agreements (excluding distributors and resellers) which
-have been validly granted by You or Your distributors under this License
-prior to termination shall survive termination.
-
-************************************************************************
-*                                                                      *
-*  6. Disclaimer of Warranty                                           *
-*  -------------------------                                           *
-*                                                                      *
-*  Covered Software is provided under this License on an "as is"       *
-*  basis, without warranty of any kind, either expressed, implied, or  *
-*  statutory, including, without limitation, warranties that the       *
-*  Covered Software is free of defects, merchantable, fit for a        *
-*  particular purpose or non-infringing. The entire risk as to the     *
-*  quality and performance of the Covered Software is with You.        *
-*  Should any Covered Software prove defective in any respect, You     *
-*  (not any Contributor) assume the cost of any necessary servicing,   *
-*  repair, or correction. This disclaimer of warranty constitutes an   *
-*  essential part of this License. No use of any Covered Software is   *
-*  authorized under this License except under this disclaimer.         *
-*                                                                      *
-************************************************************************
-
-************************************************************************
-*                                                                      *
-*  7. Limitation of Liability                                          *
-*  --------------------------                                          *
-*                                                                      *
-*  Under no circumstances and under no legal theory, whether tort      *
-*  (including negligence), contract, or otherwise, shall any           *
-*  Contributor, or anyone who distributes Covered Software as          *
-*  permitted above, be liable to You for any direct, indirect,         *
-*  special, incidental, or consequential damages of any character      *
-*  including, without limitation, damages for lost profits, loss of    *
-*  goodwill, work stoppage, computer failure or malfunction, or any    *
-*  and all other commercial damages or losses, even if such party      *
-*  shall have been informed of the possibility of such damages. This   *
-*  limitation of liability shall not apply to liability for death or   *
-*  personal injury resulting from such party's negligence to the       *
-*  extent applicable law prohibits such limitation. Some               *
-*  jurisdictions do not allow the exclusion or limitation of           *
-*  incidental or consequential damages, so this exclusion and          *
-*  limitation may not apply to You.                                    *
-*                                                                      *
-************************************************************************
-
-8. Litigation
--------------
-
-Any litigation relating to this License may be brought only in the
-courts of a jurisdiction where the defendant maintains its principal
-place of business and such litigation shall be governed by laws of that
-jurisdiction, without reference to its conflict-of-law provisions.
-Nothing in this Section shall prevent a party's ability to bring
-cross-claims or counter-claims.
-
-9. Miscellaneous
-----------------
-
-This License represents the complete agreement concerning the subject
-matter hereof. If any provision of this License is held to be
-unenforceable, such provision shall be reformed only to the extent
-necessary to make it enforceable. Any law or regulation which provides
-that the language of a contract shall be construed against the drafter
-shall not be used to construe this License against a Contributor.
-
-10. Versions of the License
----------------------------
-
-10.1. New Versions
-
-Mozilla Foundation is the license steward. Except as provided in Section
-10.3, no one other than the license steward has the right to modify or
-publish new versions of this License. Each version will be given a
-distinguishing version number.
-
-10.2. Effect of New Versions
-
-You may distribute the Covered Software under the terms of the version
-of the License under which You originally received the Covered Software,
-or under the terms of any subsequent version published by the license
-steward.
-
-10.3. Modified Versions
-
-If you create software not governed by this License, and you want to
-create a new license for such software, you may create and use a
-modified version of this License if you rename the license and remove
-any references to the name of the license steward (except to note that
-such modified license differs from this License).
-
-10.4. Distributing Source Code Form that is Incompatible With Secondary
-Licenses
-
-If You choose to distribute Source Code Form that is Incompatible With
-Secondary Licenses under the terms of this version of the License, the
-notice described in Exhibit B of this License must be attached.
-
-Exhibit A - Source Code Form License Notice
--------------------------------------------
-
-  This Source Code Form is subject to the terms of the Mozilla Public
-  License, v. 2.0. If a copy of the MPL was not distributed with this
-  file, You can obtain one at http://mozilla.org/MPL/2.0/.
-
-If it is not possible or desirable to put the notice in a particular
-file, then You may include the notice in a location (such as a LICENSE
-file in a relevant directory) where a recipient would be likely to look
-for such a notice.
-
-You may add additional accurate notices of copyright ownership.
-
-Exhibit B - "Incompatible With Secondary Licenses" Notice
----------------------------------------------------------
-
-  This Source Code Form is "Incompatible With Secondary Licenses", as
-  defined by the Mozilla Public License, v. 2.0.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/logger.go ./vancluever/v2.21.0/vancluever/v2.21.0/logger.go
--- ./vancluever/v2.21.0/logger.go	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/logger.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,56 +0,0 @@
-package main
-
-import (
-	"fmt"
-	"log"
-	"strings"
-
-	legoLog "github.com/go-acme/lego/v4/log"
-)
-
-// legoLogger is a proxy for lego log messages. This allows messages
-// for lego itself to be printed as actual plugin debug logs.
-//
-// Note that this log proxy only passes through messages, ignores log
-// levels, and does not exit on Fatal or its similar functions.  All
-// messages are logged at the debug level.
-type legoLogger struct{}
-
-// initLegoLogger initializes the logger and sets it up as an
-// override for the lego standard logger, which is ignored by
-// Terraform. This should be run in main, after lego has had a chance
-// to initialize the package singleton.
-func initLegoLogger() {
-	l := &legoLogger{}
-	legoLog.Logger = l
-	l.log("Messages from the lego library will show up as DEBUG messages.")
-}
-
-func (l *legoLogger) Fatal(args ...interface{})                 { l.log(args) }
-func (l *legoLogger) Fatalln(args ...interface{})               { l.log(args) }
-func (l *legoLogger) Fatalf(format string, args ...interface{}) { l.log(fmt.Sprintf(format, args...)) }
-func (l *legoLogger) Print(args ...interface{})                 { l.log(args) }
-func (l *legoLogger) Println(args ...interface{})               { l.log(args) }
-func (l *legoLogger) Printf(format string, args ...interface{}) { l.log(fmt.Sprintf(format, args...)) }
-
-// log logs the raw message sent to it to the Terraform logger with a
-// prefix indicating it came from lego.
-//
-// All messages are logged at the debug level.
-func (l *legoLogger) log(args ...interface{}) {
-	// Strip any lego-based log level from the string. This should
-	// always be in the first argument.
-	if len(args) > 0 {
-		if _, ok := args[0].(string); ok {
-			switch {
-			case strings.HasPrefix(args[0].(string), "[INFO] "):
-				args[0] = strings.TrimPrefix(args[0].(string), "[INFO] ")
-
-			case strings.HasPrefix(args[0].(string), "[WARN] "):
-				args[0] = strings.TrimPrefix(args[0].(string), "[WARN] ")
-			}
-		}
-	}
-
-	log.Println(append([]interface{}{"[DEBUG]", "lego:"}, args...)...)
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/main.go ./vancluever/v2.21.0/vancluever/v2.21.0/main.go
--- ./vancluever/v2.21.0/main.go	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/main.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,21 +0,0 @@
-package main
-
-import (
-	"os"
-
-	"github.com/Kid-debug/terraform-provider-acme/v2/acme"
-	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
-	"github.com/hashicorp/terraform-plugin-sdk/v2/plugin"
-)
-
-func main() {
-	if len(os.Args) == 2 && os.Args[1] == dnsplugin.PluginArg {
-		// Start the plugin here
-		dnsplugin.Serve()
-	} else {
-		initLegoLogger()
-		plugin.Serve(&plugin.ServeOpts{
-			ProviderFunc: acme.Provider,
-		})
-	}
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/buf.gen.yaml ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.gen.yaml
--- ./vancluever/v2.21.0/proto/buf.gen.yaml	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.gen.yaml	1970-01-01 07:30:00.000000000 +0730
@@ -1,8 +0,0 @@
-version: v1
-plugins:
-  - plugin: go
-    out: ./
-    opt: paths=source_relative
-  - plugin: go-grpc
-    out: ./
-    opt: paths=source_relative
\ No newline at end of file
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/buf.lock ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.lock
--- ./vancluever/v2.21.0/proto/buf.lock	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.lock	1970-01-01 07:30:00.000000000 +0730
@@ -1,2 +0,0 @@
-# Generated by buf. DO NOT EDIT.
-version: v1
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/buf.yaml ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.yaml
--- ./vancluever/v2.21.0/proto/buf.yaml	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/buf.yaml	1970-01-01 07:30:00.000000000 +0730
@@ -1,7 +0,0 @@
-version: v1
-breaking:
-  use:
-    - FILE
-lint:
-  use:
-    - DEFAULT
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin_grpc.pb.go ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin_grpc.pb.go
--- ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin_grpc.pb.go	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin_grpc.pb.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,236 +0,0 @@
-// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
-// versions:
-// - protoc-gen-go-grpc v1.3.0
-// - protoc             (unknown)
-// source: dnsplugin/v1/dnsplugin.proto
-
-package v1
-
-import (
-	context "context"
-	grpc "google.golang.org/grpc"
-	codes "google.golang.org/grpc/codes"
-	status "google.golang.org/grpc/status"
-)
-
-// This is a compile-time assertion to ensure that this generated file
-// is compatible with the grpc package it is being compiled against.
-// Requires gRPC-Go v1.32.0 or later.
-const _ = grpc.SupportPackageIsVersion7
-
-const (
-	DNSProviderService_Configure_FullMethodName = "/dnsplugin.v1.DNSProviderService/Configure"
-	DNSProviderService_Present_FullMethodName   = "/dnsplugin.v1.DNSProviderService/Present"
-	DNSProviderService_CleanUp_FullMethodName   = "/dnsplugin.v1.DNSProviderService/CleanUp"
-	DNSProviderService_Timeout_FullMethodName   = "/dnsplugin.v1.DNSProviderService/Timeout"
-)
-
-// DNSProviderServiceClient is the client API for DNSProviderService service.
-//
-// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
-type DNSProviderServiceClient interface {
-	// Configure needs to be called to initialize the provider and set the
-	// configuration.
-	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
-	// Present presents the DNS challenge TXT records to a DNS provider. This
-	// wraps the lego Present call.
-	Present(ctx context.Context, in *PresentRequest, opts ...grpc.CallOption) (*PresentResponse, error)
-	// Cleanup requests that DNS challenge TXT records be cleaned up. This wraps
-	// the lego Cleanup call.
-	CleanUp(ctx context.Context, in *CleanUpRequest, opts ...grpc.CallOption) (*CleanUpResponse, error)
-	// Timeout returns the provider's underlying timeout values. This wraps the
-	// lego Timeout call.
-	Timeout(ctx context.Context, in *TimeoutRequest, opts ...grpc.CallOption) (*TimeoutResponse, error)
-}
-
-type dNSProviderServiceClient struct {
-	cc grpc.ClientConnInterface
-}
-
-func NewDNSProviderServiceClient(cc grpc.ClientConnInterface) DNSProviderServiceClient {
-	return &dNSProviderServiceClient{cc}
-}
-
-func (c *dNSProviderServiceClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
-	out := new(ConfigureResponse)
-	err := c.cc.Invoke(ctx, DNSProviderService_Configure_FullMethodName, in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-func (c *dNSProviderServiceClient) Present(ctx context.Context, in *PresentRequest, opts ...grpc.CallOption) (*PresentResponse, error) {
-	out := new(PresentResponse)
-	err := c.cc.Invoke(ctx, DNSProviderService_Present_FullMethodName, in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-func (c *dNSProviderServiceClient) CleanUp(ctx context.Context, in *CleanUpRequest, opts ...grpc.CallOption) (*CleanUpResponse, error) {
-	out := new(CleanUpResponse)
-	err := c.cc.Invoke(ctx, DNSProviderService_CleanUp_FullMethodName, in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-func (c *dNSProviderServiceClient) Timeout(ctx context.Context, in *TimeoutRequest, opts ...grpc.CallOption) (*TimeoutResponse, error) {
-	out := new(TimeoutResponse)
-	err := c.cc.Invoke(ctx, DNSProviderService_Timeout_FullMethodName, in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-// DNSProviderServiceServer is the server API for DNSProviderService service.
-// All implementations must embed UnimplementedDNSProviderServiceServer
-// for forward compatibility
-type DNSProviderServiceServer interface {
-	// Configure needs to be called to initialize the provider and set the
-	// configuration.
-	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
-	// Present presents the DNS challenge TXT records to a DNS provider. This
-	// wraps the lego Present call.
-	Present(context.Context, *PresentRequest) (*PresentResponse, error)
-	// Cleanup requests that DNS challenge TXT records be cleaned up. This wraps
-	// the lego Cleanup call.
-	CleanUp(context.Context, *CleanUpRequest) (*CleanUpResponse, error)
-	// Timeout returns the provider's underlying timeout values. This wraps the
-	// lego Timeout call.
-	Timeout(context.Context, *TimeoutRequest) (*TimeoutResponse, error)
-	mustEmbedUnimplementedDNSProviderServiceServer()
-}
-
-// UnimplementedDNSProviderServiceServer must be embedded to have forward compatible implementations.
-type UnimplementedDNSProviderServiceServer struct {
-}
-
-func (UnimplementedDNSProviderServiceServer) Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error) {
-	return nil, status.Errorf(codes.Unimplemented, "method Configure not implemented")
-}
-func (UnimplementedDNSProviderServiceServer) Present(context.Context, *PresentRequest) (*PresentResponse, error) {
-	return nil, status.Errorf(codes.Unimplemented, "method Present not implemented")
-}
-func (UnimplementedDNSProviderServiceServer) CleanUp(context.Context, *CleanUpRequest) (*CleanUpResponse, error) {
-	return nil, status.Errorf(codes.Unimplemented, "method CleanUp not implemented")
-}
-func (UnimplementedDNSProviderServiceServer) Timeout(context.Context, *TimeoutRequest) (*TimeoutResponse, error) {
-	return nil, status.Errorf(codes.Unimplemented, "method Timeout not implemented")
-}
-func (UnimplementedDNSProviderServiceServer) mustEmbedUnimplementedDNSProviderServiceServer() {}
-
-// UnsafeDNSProviderServiceServer may be embedded to opt out of forward compatibility for this service.
-// Use of this interface is not recommended, as added methods to DNSProviderServiceServer will
-// result in compilation errors.
-type UnsafeDNSProviderServiceServer interface {
-	mustEmbedUnimplementedDNSProviderServiceServer()
-}
-
-func RegisterDNSProviderServiceServer(s grpc.ServiceRegistrar, srv DNSProviderServiceServer) {
-	s.RegisterService(&DNSProviderService_ServiceDesc, srv)
-}
-
-func _DNSProviderService_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(ConfigureRequest)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(DNSProviderServiceServer).Configure(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: DNSProviderService_Configure_FullMethodName,
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(DNSProviderServiceServer).Configure(ctx, req.(*ConfigureRequest))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-func _DNSProviderService_Present_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(PresentRequest)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(DNSProviderServiceServer).Present(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: DNSProviderService_Present_FullMethodName,
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(DNSProviderServiceServer).Present(ctx, req.(*PresentRequest))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-func _DNSProviderService_CleanUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(CleanUpRequest)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(DNSProviderServiceServer).CleanUp(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: DNSProviderService_CleanUp_FullMethodName,
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(DNSProviderServiceServer).CleanUp(ctx, req.(*CleanUpRequest))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-func _DNSProviderService_Timeout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(TimeoutRequest)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(DNSProviderServiceServer).Timeout(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: DNSProviderService_Timeout_FullMethodName,
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(DNSProviderServiceServer).Timeout(ctx, req.(*TimeoutRequest))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-// DNSProviderService_ServiceDesc is the grpc.ServiceDesc for DNSProviderService service.
-// It's only intended for direct use with grpc.RegisterService,
-// and not to be introspected or modified (even as a copy)
-var DNSProviderService_ServiceDesc = grpc.ServiceDesc{
-	ServiceName: "dnsplugin.v1.DNSProviderService",
-	HandlerType: (*DNSProviderServiceServer)(nil),
-	Methods: []grpc.MethodDesc{
-		{
-			MethodName: "Configure",
-			Handler:    _DNSProviderService_Configure_Handler,
-		},
-		{
-			MethodName: "Present",
-			Handler:    _DNSProviderService_Present_Handler,
-		},
-		{
-			MethodName: "CleanUp",
-			Handler:    _DNSProviderService_CleanUp_Handler,
-		},
-		{
-			MethodName: "Timeout",
-			Handler:    _DNSProviderService_Timeout_Handler,
-		},
-	},
-	Streams:  []grpc.StreamDesc{},
-	Metadata: "dnsplugin/v1/dnsplugin.proto",
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.pb.go ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.pb.go
--- ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.pb.go	2024-04-26 18:07:21.601804364 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.pb.go	1970-01-01 07:30:00.000000000 +0730
@@ -1,659 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.29.1
-// 	protoc        (unknown)
-// source: dnsplugin/v1/dnsplugin.proto
-
-package v1
-
-import (
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	durationpb "google.golang.org/protobuf/types/known/durationpb"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type ConfigureRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	ProviderName         string            `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
-	Config               map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
-	RecursiveNameservers []string          `protobuf:"bytes,3,rep,name=recursive_nameservers,json=recursiveNameservers,proto3" json:"recursive_nameservers,omitempty"`
-}
-
-func (x *ConfigureRequest) Reset() {
-	*x = ConfigureRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *ConfigureRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*ConfigureRequest) ProtoMessage() {}
-
-func (x *ConfigureRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use ConfigureRequest.ProtoReflect.Descriptor instead.
-func (*ConfigureRequest) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *ConfigureRequest) GetProviderName() string {
-	if x != nil {
-		return x.ProviderName
-	}
-	return ""
-}
-
-func (x *ConfigureRequest) GetConfig() map[string]string {
-	if x != nil {
-		return x.Config
-	}
-	return nil
-}
-
-func (x *ConfigureRequest) GetRecursiveNameservers() []string {
-	if x != nil {
-		return x.RecursiveNameservers
-	}
-	return nil
-}
-
-type ConfigureResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-}
-
-func (x *ConfigureResponse) Reset() {
-	*x = ConfigureResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *ConfigureResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*ConfigureResponse) ProtoMessage() {}
-
-func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
-func (*ConfigureResponse) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{1}
-}
-
-type PresentRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Domain  string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
-	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
-	KeyAuth string `protobuf:"bytes,3,opt,name=key_auth,json=keyAuth,proto3" json:"key_auth,omitempty"`
-}
-
-func (x *PresentRequest) Reset() {
-	*x = PresentRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *PresentRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*PresentRequest) ProtoMessage() {}
-
-func (x *PresentRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use PresentRequest.ProtoReflect.Descriptor instead.
-func (*PresentRequest) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *PresentRequest) GetDomain() string {
-	if x != nil {
-		return x.Domain
-	}
-	return ""
-}
-
-func (x *PresentRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *PresentRequest) GetKeyAuth() string {
-	if x != nil {
-		return x.KeyAuth
-	}
-	return ""
-}
-
-type PresentResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-}
-
-func (x *PresentResponse) Reset() {
-	*x = PresentResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *PresentResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*PresentResponse) ProtoMessage() {}
-
-func (x *PresentResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use PresentResponse.ProtoReflect.Descriptor instead.
-func (*PresentResponse) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{3}
-}
-
-type CleanUpRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Domain  string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
-	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
-	KeyAuth string `protobuf:"bytes,3,opt,name=key_auth,json=keyAuth,proto3" json:"key_auth,omitempty"`
-}
-
-func (x *CleanUpRequest) Reset() {
-	*x = CleanUpRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *CleanUpRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*CleanUpRequest) ProtoMessage() {}
-
-func (x *CleanUpRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use CleanUpRequest.ProtoReflect.Descriptor instead.
-func (*CleanUpRequest) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *CleanUpRequest) GetDomain() string {
-	if x != nil {
-		return x.Domain
-	}
-	return ""
-}
-
-func (x *CleanUpRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *CleanUpRequest) GetKeyAuth() string {
-	if x != nil {
-		return x.KeyAuth
-	}
-	return ""
-}
-
-type CleanUpResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-}
-
-func (x *CleanUpResponse) Reset() {
-	*x = CleanUpResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *CleanUpResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*CleanUpResponse) ProtoMessage() {}
-
-func (x *CleanUpResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use CleanUpResponse.ProtoReflect.Descriptor instead.
-func (*CleanUpResponse) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{5}
-}
-
-type TimeoutRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-}
-
-func (x *TimeoutRequest) Reset() {
-	*x = TimeoutRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *TimeoutRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*TimeoutRequest) ProtoMessage() {}
-
-func (x *TimeoutRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use TimeoutRequest.ProtoReflect.Descriptor instead.
-func (*TimeoutRequest) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{6}
-}
-
-type TimeoutResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Timeout  *durationpb.Duration `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
-	Interval *durationpb.Duration `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
-}
-
-func (x *TimeoutResponse) Reset() {
-	*x = TimeoutResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[7]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *TimeoutResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*TimeoutResponse) ProtoMessage() {}
-
-func (x *TimeoutResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_dnsplugin_v1_dnsplugin_proto_msgTypes[7]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use TimeoutResponse.ProtoReflect.Descriptor instead.
-func (*TimeoutResponse) Descriptor() ([]byte, []int) {
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP(), []int{7}
-}
-
-func (x *TimeoutResponse) GetTimeout() *durationpb.Duration {
-	if x != nil {
-		return x.Timeout
-	}
-	return nil
-}
-
-func (x *TimeoutResponse) GetInterval() *durationpb.Duration {
-	if x != nil {
-		return x.Interval
-	}
-	return nil
-}
-
-var File_dnsplugin_v1_dnsplugin_proto protoreflect.FileDescriptor
-
-var file_dnsplugin_v1_dnsplugin_proto_rawDesc = []byte{
-	0x0a, 0x1c, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64,
-	0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
-	0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
-	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
-	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x01, 0x0a,
-	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
-	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
-	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
-	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
-	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67,
-	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
-	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74,
-	0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65,
-	0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76,
-	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x63, 0x75, 0x72,
-	0x73, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x1a,
-	0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
-	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
-	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f,
-	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
-	0x59, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
-	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
-	0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
-	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
-	0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
-	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x72,
-	0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a,
-	0x0e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
-	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
-	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a,
-	0x08, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x07, 0x6b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61,
-	0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x54,
-	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7d, 0x0a,
-	0x0f, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
-	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
-	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
-	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
-	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
-	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
-	0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x32, 0xc2, 0x02, 0x0a,
-	0x12, 0x44, 0x4e, 0x53, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
-	0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
-	0x12, 0x1e, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
-	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
-	0x1a, 0x1f, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
-	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
-	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x1c,
-	0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
-	0x65, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64,
-	0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73,
-	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
-	0x07, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x12, 0x1c, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c,
-	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x52,
-	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67,
-	0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73,
-	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
-	0x75, 0x74, 0x12, 0x1c, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76,
-	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
-	0x1a, 0x1d, 0x2e, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
-	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
-	0x00, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
-	0x76, 0x61, 0x6e, 0x63, 0x6c, 0x75, 0x65, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x72, 0x72, 0x61,
-	0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2d, 0x61, 0x63,
-	0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6e, 0x73, 0x70, 0x6c, 0x75, 0x67,
-	0x69, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_dnsplugin_v1_dnsplugin_proto_rawDescOnce sync.Once
-	file_dnsplugin_v1_dnsplugin_proto_rawDescData = file_dnsplugin_v1_dnsplugin_proto_rawDesc
-)
-
-func file_dnsplugin_v1_dnsplugin_proto_rawDescGZIP() []byte {
-	file_dnsplugin_v1_dnsplugin_proto_rawDescOnce.Do(func() {
-		file_dnsplugin_v1_dnsplugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_dnsplugin_v1_dnsplugin_proto_rawDescData)
-	})
-	return file_dnsplugin_v1_dnsplugin_proto_rawDescData
-}
-
-var file_dnsplugin_v1_dnsplugin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
-var file_dnsplugin_v1_dnsplugin_proto_goTypes = []interface{}{
-	(*ConfigureRequest)(nil),    // 0: dnsplugin.v1.ConfigureRequest
-	(*ConfigureResponse)(nil),   // 1: dnsplugin.v1.ConfigureResponse
-	(*PresentRequest)(nil),      // 2: dnsplugin.v1.PresentRequest
-	(*PresentResponse)(nil),     // 3: dnsplugin.v1.PresentResponse
-	(*CleanUpRequest)(nil),      // 4: dnsplugin.v1.CleanUpRequest
-	(*CleanUpResponse)(nil),     // 5: dnsplugin.v1.CleanUpResponse
-	(*TimeoutRequest)(nil),      // 6: dnsplugin.v1.TimeoutRequest
-	(*TimeoutResponse)(nil),     // 7: dnsplugin.v1.TimeoutResponse
-	nil,                         // 8: dnsplugin.v1.ConfigureRequest.ConfigEntry
-	(*durationpb.Duration)(nil), // 9: google.protobuf.Duration
-}
-var file_dnsplugin_v1_dnsplugin_proto_depIdxs = []int32{
-	8, // 0: dnsplugin.v1.ConfigureRequest.config:type_name -> dnsplugin.v1.ConfigureRequest.ConfigEntry
-	9, // 1: dnsplugin.v1.TimeoutResponse.timeout:type_name -> google.protobuf.Duration
-	9, // 2: dnsplugin.v1.TimeoutResponse.interval:type_name -> google.protobuf.Duration
-	0, // 3: dnsplugin.v1.DNSProviderService.Configure:input_type -> dnsplugin.v1.ConfigureRequest
-	2, // 4: dnsplugin.v1.DNSProviderService.Present:input_type -> dnsplugin.v1.PresentRequest
-	4, // 5: dnsplugin.v1.DNSProviderService.CleanUp:input_type -> dnsplugin.v1.CleanUpRequest
-	6, // 6: dnsplugin.v1.DNSProviderService.Timeout:input_type -> dnsplugin.v1.TimeoutRequest
-	1, // 7: dnsplugin.v1.DNSProviderService.Configure:output_type -> dnsplugin.v1.ConfigureResponse
-	3, // 8: dnsplugin.v1.DNSProviderService.Present:output_type -> dnsplugin.v1.PresentResponse
-	5, // 9: dnsplugin.v1.DNSProviderService.CleanUp:output_type -> dnsplugin.v1.CleanUpResponse
-	7, // 10: dnsplugin.v1.DNSProviderService.Timeout:output_type -> dnsplugin.v1.TimeoutResponse
-	7, // [7:11] is the sub-list for method output_type
-	3, // [3:7] is the sub-list for method input_type
-	3, // [3:3] is the sub-list for extension type_name
-	3, // [3:3] is the sub-list for extension extendee
-	0, // [0:3] is the sub-list for field type_name
-}
-
-func init() { file_dnsplugin_v1_dnsplugin_proto_init() }
-func file_dnsplugin_v1_dnsplugin_proto_init() {
-	if File_dnsplugin_v1_dnsplugin_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*ConfigureRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*ConfigureResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*PresentRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*PresentResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*CleanUpRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*CleanUpResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*TimeoutRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_dnsplugin_v1_dnsplugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*TimeoutResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_dnsplugin_v1_dnsplugin_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   9,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_dnsplugin_v1_dnsplugin_proto_goTypes,
-		DependencyIndexes: file_dnsplugin_v1_dnsplugin_proto_depIdxs,
-		MessageInfos:      file_dnsplugin_v1_dnsplugin_proto_msgTypes,
-	}.Build()
-	File_dnsplugin_v1_dnsplugin_proto = out.File
-	file_dnsplugin_v1_dnsplugin_proto_rawDesc = nil
-	file_dnsplugin_v1_dnsplugin_proto_goTypes = nil
-	file_dnsplugin_v1_dnsplugin_proto_depIdxs = nil
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto
--- ./vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/proto/dnsplugin/v1/dnsplugin.proto	1970-01-01 07:30:00.000000000 +0730
@@ -1,58 +0,0 @@
-syntax = "proto3";
-
-package dnsplugin.v1;
-
-import "google/protobuf/duration.proto";
-
-option go_package = "github.com/Kid-debug/terraform-provider-acme/proto/dnsplugin/v1";
-
-// DNSProviderService is a protobuf wrapper for the acme DNS challenge API. This
-// is designed to be used to wrap an instance of DNS providers in
-service DNSProviderService {
-  // Configure needs to be called to initialize the provider and set the
-  // configuration.
-  rpc Configure(ConfigureRequest) returns (ConfigureResponse) {}
-
-  // Present presents the DNS challenge TXT records to a DNS provider. This
-  // wraps the lego Present call.
-  rpc Present(PresentRequest) returns (PresentResponse) {}
-
-  // Cleanup requests that DNS challenge TXT records be cleaned up. This wraps
-  // the lego Cleanup call.
-  rpc CleanUp(CleanUpRequest) returns (CleanUpResponse) {}
-
-  // Timeout returns the provider's underlying timeout values. This wraps the
-  // lego Timeout call.
-  rpc Timeout(TimeoutRequest) returns (TimeoutResponse) {}
-}
-
-message ConfigureRequest {
-  string provider_name = 1;
-  map<string, string> config = 2;
-  repeated string recursive_nameservers = 3;
-}
-
-message ConfigureResponse {}
-
-message PresentRequest {
-  string domain = 1;
-  string token = 2;
-  string key_auth = 3;
-}
-
-message PresentResponse {}
-
-message CleanUpRequest {
-  string domain = 1;
-  string token = 2;
-  string key_auth = 3;
-}
-
-message CleanUpResponse {}
-
-message TimeoutRequest {}
-
-message TimeoutResponse {
-  google.protobuf.Duration timeout = 1;
-  google.protobuf.Duration interval = 2;
-}
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/README.md ./vancluever/v2.21.0/vancluever/v2.21.0/README.md
--- ./vancluever/v2.21.0/README.md	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/README.md	1970-01-01 07:30:00.000000000 +0730
@@ -1,25 +0,0 @@
-Terraform ACME Provider
-========================
-
-This is the repository for the Terraform ACME Provider, which one can use with
-Terraform to manage and generate certificates generated by an [ACME][about-acme]
-CA, such as Let's Encrypt, ZeroSSL and GCP.
-
-[about-acme]: https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html
-
-For general information about Terraform, visit the [official
-website][terraform-io] and the [GitHub project page][terraform-gh].
-
-[terraform-io]: https://www.terraform.io/
-[terraform-gh]: https://github.com/hashicorp/terraform
-
-:warning: **NOTE:** The ACME provider found here supports ACME v2 only.
-
-## Documentation
-
-This is a forked, reworked repository of Terraform ACME provider by Kid-debug to provide backoff retry functionalities.
-Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/Kid-debug/acme/latest/docs)
-
-## Retryable Errors
-
-Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
diff -ruN '--exclude=acme/errorlist.go' '--exclude=.git/' '--exclude=.git' '--exclude=.git.' ./vancluever/v2.21.0/terraform-registry-manifest.json ./vancluever/v2.21.0/vancluever/v2.21.0/terraform-registry-manifest.json
--- ./vancluever/v2.21.0/terraform-registry-manifest.json	2024-04-26 18:07:52.560299129 +0800
+++ ./vancluever/v2.21.0/vancluever/v2.21.0/terraform-registry-manifest.json	1970-01-01 07:30:00.000000000 +0730
@@ -1,8 +0,0 @@
-{
-	"version": 1,
-	"metadata": {
-		"protocol_versions": [
-			"5.0"
-		]
-	}
-}
