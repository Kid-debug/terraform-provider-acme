diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/.gitignore ./tempSubmodule/.gitignore
--- ./submoduleACME/.gitignore	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/.gitignore	2024-04-27 18:56:31.673178632 +0800
@@ -23,6 +23,7 @@
 *.iml
 *.test
 *.iml
+/test/
 
 website/vendor
 
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/.goreleaser.yml ./tempSubmodule/.goreleaser.yml
--- ./submoduleACME/.goreleaser.yml	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/.goreleaser.yml	2024-04-27 18:56:31.673178632 +0800
@@ -5,42 +5,43 @@
     # this is just an example and not a requirement for provider building/publishing
     - go mod tidy
 builds:
-- env:
-    # goreleaser does not work with CGO, it could also complicate
-    # usage by users in CI/CD systems like Terraform Cloud where
-    # they are unable to install libraries.
-    - CGO_ENABLED=0
-  mod_timestamp: '{{ .CommitTimestamp }}'
-  flags:
-    - -trimpath
-  ldflags:
-    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
-  goos:
-    - freebsd
-    - windows
-    - linux
-    - darwin
-  goarch:
-    - amd64
-    - '386'
-    - arm
-    - arm64
-  ignore:
-    - goos: darwin
-      goarch: '386'
-    - goos: freebsd
-      goarch: 'arm'
-  binary: '{{ .ProjectName }}_v{{ .Version }}'
+  - env:
+      # goreleaser does not work with CGO, it could also complicate
+      # usage by users in CI/CD systems like Terraform Cloud where
+      # they are unable to install libraries.
+      - CGO_ENABLED=0
+    mod_timestamp: "{{ .CommitTimestamp }}"
+    flags:
+      - -trimpath
+    ldflags:
+      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}"
+    goos:
+      - freebsd
+      - windows
+      - linux
+      - darwin
+    goarch:
+      - amd64
+      - "386"
+      - arm
+      - arm64
+    ignore:
+      - goos: darwin
+        goarch: "386"
+    binary: "{{ .ProjectName }}_v{{ .Version }}"
 archives:
-- format: zip
-  name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
+  - format: zip
+    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
 checksum:
-  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
+  extra_files:
+    - glob: "terraform-registry-manifest.json"
+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
+  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
   algorithm: sha256
 signs:
   - artifacts: checksum
     args:
-      # if you are using this is a GitHub action or some other automated pipeline, you 
+      # if you are using this is a GitHub action or some other automated pipeline, you
       # need to pass the batch flag to indicate its not interactive.
       - "--batch"
       - "--local-user"
@@ -50,6 +51,9 @@
       - "--detach-sign"
       - "${artifact}"
 release:
+  extra_files:
+    - glob: "terraform-registry-manifest.json"
+      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
   # If you want to manually examine the release before its live, uncomment this line:
   # draft: true
 changelog:
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/README.md ./tempSubmodule/README.md
--- ./submoduleACME/README.md	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/README.md	2024-04-27 18:56:31.673178632 +0800
@@ -3,10 +3,9 @@
 
 This is the repository for the Terraform ACME Provider, which one can use with
 Terraform to manage and generate certificates generated by an [ACME][about-acme]
-CA, such as [Let's Encrypt][lets-encrypt].
+CA, such as Let's Encrypt, ZeroSSL and GCP.
 
 [about-acme]: https://ietf-wg-acme.github.io/acme/draft-ietf-acme-acme.html
-[lets-encrypt]: https://letsencrypt.org
 
 For general information about Terraform, visit the [official
 website][terraform-io] and the [GitHub project page][terraform-gh].
@@ -18,16 +17,9 @@
 
 ## Documentation
 
-Documentation for this provider can be found at
-https://registry.terraform.io/providers/vancluever/acme/latest/docs.
+This is a forked, reworked repository of Terraform ACME provider by Kid-debug to provide backoff retry functionalities.
+Documentation for this provider can be found at [Terraform ACME Provider](https://registry.terraform.io/providers/Kid-debug/acme/latest/docs)
 
-## License
+## Retryable Errors
 
-```
-Copyright 2018-2023 Chris Marchesi
-Copyright 2016-2018 PayByPhone Technologies, Inc.
-
-This Source Code Form is subject to the terms of the Mozilla Public
-License, v. 2.0. If a copy of the MPL was not distributed with this
-file, You can obtain one at http://mozilla.org/MPL/2.0/.
- ```
+Add retryable errors under `./acme/errorlist.go` such as API limiting and throttling.
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/acme_structure.go ./tempSubmodule/acme/acme_structure.go
--- ./submoduleACME/acme/acme_structure.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/acme_structure.go	2024-04-27 18:56:31.673178632 +0800
@@ -12,6 +12,7 @@
 	"fmt"
 	"time"
 
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/certcrypto"
 	"github.com/go-acme/lego/v4/certificate"
 	"github.com/go-acme/lego/v4/lego"
@@ -20,6 +21,10 @@
 	"software.sslmate.com/src/go-pkcs12"
 )
 
+const (
+	DefaultMaxElapsedTime = 120 * time.Minute
+)
+
 // acmeUser implements acme.User.
 type acmeUser struct {
 
@@ -84,17 +89,32 @@
 		return nil, nil, fmt.Errorf("error getting user data: %s", err.Error())
 	}
 
-	client, err := lego.NewClient(expandACMEClient_config(d, meta, user))
-	if err != nil {
-		return nil, nil, err
-	}
+	var client *lego.Client
 
-	// Populate user's registration resource if needed
-	if loadReg {
-		user.Registration, err = client.Registration.ResolveAccountByKey()
+	newClient := func() error {
+		client, err = lego.NewClient(expandACMEClient_config(d, meta, user))
 		if err != nil {
-			return nil, nil, err
+			return err
 		}
+
+		// Populate user's registration resource if needed
+		if loadReg {
+			user.Registration, err = client.Registration.ResolveAccountByKey()
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(newClient, reconnectBackoff)
+	if err != nil {
+		return nil, nil, err
 	}
 
 	return client, user, nil
@@ -241,8 +261,11 @@
 	cert = pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: cb[0].Raw})
 	certNotAfter = cb[0].NotAfter.Format(time.RFC3339)
 	issuer = make([]byte, 0)
-	for _, ic := range cb[1:] {
+	for i, ic := range cb[1:] {
 		issuer = append(issuer, pem.EncodeToMemory(&pem.Block{Type: "CERTIFICATE", Bytes: ic.Raw})...)
+		if i < len(cb)-2 {
+			issuer = append(issuer, '\n')
+		}
 	}
 
 	return
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/certificate_challenges.go ./tempSubmodule/acme/certificate_challenges.go
--- ./submoduleACME/acme/certificate_challenges.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/certificate_challenges.go	2024-04-27 18:56:31.673178632 +0800
@@ -5,6 +5,8 @@
 	"strconv"
 	"time"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/challenge/dns01"
 	"github.com/go-acme/lego/v4/challenge/http01"
@@ -15,7 +17,6 @@
 	"github.com/go-acme/lego/v4/providers/http/webroot"
 	"github.com/hashicorp/go-multierror"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 // setCertificateChallengeProviders sets all of the challenge providers in the
@@ -48,7 +49,20 @@
 			}
 		}
 
-		if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
+		setDns01Provider := func() error {
+			if err := client.Challenge.SetDNS01Provider(dnsProvider, expandDNSChallengeOptions(d)...); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setDns01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -61,7 +75,20 @@
 			httpServerProvider.SetProxyHeader(proxyHeader.(string))
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpServerProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err := backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -75,7 +102,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpWebrootProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -89,7 +129,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpMemcachedProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -103,7 +156,20 @@
 			return dnsCloser, err
 		}
 
-		if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
+		setHttp01Provider := func() error {
+			if err := client.Challenge.SetHTTP01Provider(httpS3Provider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(setHttp01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
@@ -113,7 +179,20 @@
 		tlsProvider := tlsalpn01.NewProviderServer(
 			"", strconv.Itoa(provider.([]interface{})[0].(map[string]interface{})["port"].(int)))
 
-		if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
+		setTlsAlpn01Provider := func() error {
+			if err := client.Challenge.SetTLSALPN01Provider(tlsProvider); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err := backoff.Retry(setTlsAlpn01Provider, reconnectBackoff)
+		if err != nil {
 			return dnsCloser, err
 		}
 	}
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/dnsplugin/client.go ./tempSubmodule/acme/dnsplugin/client.go
--- ./submoduleACME/acme/dnsplugin/client.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/dnsplugin/client.go	2024-04-27 18:56:31.673178632 +0800
@@ -8,9 +8,9 @@
 	"os/exec"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/hashicorp/go-plugin"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 )
 
 // NewClient creates a new DNS provider instance by dispatching to itself via
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/dnsplugin/plugin.go ./tempSubmodule/acme/dnsplugin/plugin.go
--- ./submoduleACME/acme/dnsplugin/plugin.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/dnsplugin/plugin.go	2024-04-27 18:56:31.673178632 +0800
@@ -8,10 +8,10 @@
 	"os"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/challenge/dns01"
 	"github.com/hashicorp/go-plugin"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"google.golang.org/grpc"
 	"google.golang.org/protobuf/types/known/durationpb"
 )
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/dnsplugin/plugin_test.go ./tempSubmodule/acme/dnsplugin/plugin_test.go
--- ./submoduleACME/acme/dnsplugin/plugin_test.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/dnsplugin/plugin_test.go	2024-04-27 18:56:31.673178632 +0800
@@ -6,9 +6,9 @@
 	"testing"
 	"time"
 
+	dnspluginproto "github.com/Kid-debug/terraform-provider-acme/v2/proto/dnsplugin/v1"
 	"github.com/go-acme/lego/v4/challenge"
 	"github.com/go-acme/lego/v4/providers/dns/route53"
-	dnspluginproto "github.com/vancluever/terraform-provider-acme/v2/proto/dnsplugin/v1"
 )
 
 var _ = challenge.ProviderTimeout((*DnsProviderClient)(nil))
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/provider_test.go ./tempSubmodule/acme/provider_test.go
--- ./submoduleACME/acme/provider_test.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/provider_test.go	2024-04-27 18:56:31.673178632 +0800
@@ -12,9 +12,9 @@
 	"path/filepath"
 	"testing"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 func testAccProviderAcme() *schema.Provider {
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/resource_acme_certificate.go ./tempSubmodule/acme/resource_acme_certificate.go
--- ./submoduleACME/acme/resource_acme_certificate.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/resource_acme_certificate.go	2024-04-27 18:56:31.673178632 +0800
@@ -7,6 +7,7 @@
 	"log"
 	"time"
 
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/acme"
 	"github.com/go-acme/lego/v4/certificate"
 	"github.com/go-acme/lego/v4/challenge/dns01"
@@ -271,6 +272,12 @@
 				ValidateFunc: validateRevocationReason,
 			},
 		},
+		Timeouts: &schema.ResourceTimeout{
+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
+		},
 	}
 }
 
@@ -306,11 +313,28 @@
 		if err != nil {
 			return err
 		}
-		cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
-			CSR:            csr,
-			Bundle:         true,
-			PreferredChain: d.Get("preferred_chain").(string),
-		})
+
+		obtainCertCSR := func() error {
+			cert, err = client.Certificate.ObtainForCSR(certificate.ObtainForCSRRequest{
+				CSR:            csr,
+				Bundle:         true,
+				PreferredChain: d.Get("preferred_chain").(string),
+			})
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(obtainCertCSR, reconnectBackoff)
+		if err != nil {
+			return err
+		}
 	} else {
 		cn := d.Get("common_name").(string)
 		domains := []string{cn}
@@ -322,12 +346,28 @@
 			}
 		}
 
-		cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
-			Domains:        domains,
-			Bundle:         true,
-			MustStaple:     d.Get("must_staple").(bool),
-			PreferredChain: d.Get("preferred_chain").(string),
-		})
+		obtainCert := func() error {
+			cert, err = client.Certificate.Obtain(certificate.ObtainRequest{
+				Domains:        domains,
+				Bundle:         true,
+				MustStaple:     d.Get("must_staple").(bool),
+				PreferredChain: d.Get("preferred_chain").(string),
+			})
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(obtainCert, reconnectBackoff)
+		if err != nil {
+			return err
+		}
 	}
 
 	if err != nil {
@@ -354,7 +394,21 @@
 			return err
 		}
 
-		srcCR, err := client.Certificate.Get(d.Get("certificate_url").(string), true)
+		var srcCR *certificate.Resource
+		getCert := func() error {
+			srcCR, err = client.Certificate.Get(d.Get("certificate_url").(string), true)
+			if err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(getCert, reconnectBackoff)
 		if err != nil {
 			// There are probably some cases that we will want to just drop
 			// the resource if there's been an issue, but seeing as this is
@@ -454,7 +508,21 @@
 		return err
 	}
 
-	newCert, err := client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
+	var newCert *certificate.Resource
+	renewCert := func() error {
+		newCert, err = client.Certificate.Renew(*cert, true, d.Get("must_staple").(bool), d.Get("preferred_chain").(string))
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(renewCert, reconnectBackoff)
 	if err != nil {
 		return err
 	}
@@ -487,17 +555,43 @@
 	}
 
 	if remaining >= 0 {
-		maybeReason, ok := d.GetOk("revoke_certificate_reason")
-		if ok {
-			reason := RevocationReason(maybeReason.(string))
-			reasonNum, err := GetRevocationReason(reason)
-			if err != nil {
-				return err
+		revokeCert := func() error {
+			maybeReason, ok := d.GetOk("revoke_certificate_reason")
+			if ok {
+				reason := RevocationReason(maybeReason.(string))
+				reasonNum, err := GetRevocationReason(reason)
+				if err != nil {
+					return err
+				}
+				if err = client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum); err != nil {
+					if isAbleToRetry(err.Error()) {
+						return err
+					} else {
+						return backoff.Permanent(err)
+					}
+
+				}
+				return nil
 			}
-			return client.Certificate.RevokeWithReason(cert.Certificate, &reasonNum)
+
+			if err = client.Certificate.Revoke(cert.Certificate); err != nil {
+				if isAbleToRetry(err.Error()) {
+					return err
+				} else {
+					return backoff.Permanent(err)
+				}
+			}
+
+			return nil
+		}
+		reconnectBackoff := backoff.NewExponentialBackOff()
+		reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+		err = backoff.Retry(revokeCert, reconnectBackoff)
+		if err != nil {
+			return err
 		}
-		return client.Certificate.Revoke(cert.Certificate)
 	}
+
 	return nil
 }
 
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/acme/resource_acme_registration.go ./tempSubmodule/acme/resource_acme_registration.go
--- ./submoduleACME/acme/resource_acme_registration.go	2024-04-27 18:56:47.693178444 +0800
+++ ./tempSubmodule/acme/resource_acme_registration.go	2024-04-27 18:56:31.673178632 +0800
@@ -1,6 +1,7 @@
 package acme
 
 import (
+	"github.com/cenkalti/backoff/v4"
 	"github.com/go-acme/lego/v4/acme"
 	"github.com/go-acme/lego/v4/registration"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
@@ -57,6 +58,12 @@
 				Computed: true,
 			},
 		},
+		Timeouts: &schema.ResourceTimeout{
+			Create: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Read:   schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Update: schema.DefaultTimeout(DefaultMaxElapsedTime),
+			Delete: schema.DefaultTimeout(DefaultMaxElapsedTime),
+		},
 	}
 }
 
@@ -69,24 +76,34 @@
 
 	var reg *registration.Resource
 	// If EAB was enabled, register using EAB.
-	if v, ok := d.GetOk("external_account_binding"); ok {
-		reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
-			TermsOfServiceAgreed: true,
-			Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
-			HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
-		})
-	} else {
-		// Normal registration.
-		reg, err = client.Registration.Register(registration.RegisterOptions{
-			TermsOfServiceAgreed: true,
-		})
-	}
-
-	if err != nil {
-		return err
+	registerAccount := func() error {
+		if v, ok := d.GetOk("external_account_binding"); ok {
+			reg, err = client.Registration.RegisterWithExternalAccountBinding(registration.RegisterEABOptions{
+				TermsOfServiceAgreed: true,
+				Kid:                  v.([]interface{})[0].(map[string]interface{})["key_id"].(string),
+				HmacEncoded:          v.([]interface{})[0].(map[string]interface{})["hmac_base64"].(string),
+			})
+		} else {
+			// Normal registration.
+			reg, err = client.Registration.Register(registration.RegisterOptions{
+				TermsOfServiceAgreed: true,
+			})
+		}
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
 	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(registerAccount, reconnectBackoff)
 
 	_, user, err := expandACMEClient(d, meta, true)
+
 	if err != nil {
 		return err
 	}
@@ -117,7 +134,25 @@
 		return err
 	}
 
-	return client.Registration.DeleteRegistration()
+	deleteRegistration := func() error {
+		err := client.Registration.DeleteRegistration()
+		if err != nil {
+			if isAbleToRetry(err.Error()) {
+				return err
+			} else {
+				return backoff.Permanent(err)
+			}
+		}
+		return nil
+	}
+	reconnectBackoff := backoff.NewExponentialBackOff()
+	reconnectBackoff.MaxElapsedTime = DefaultMaxElapsedTime
+	err = backoff.Retry(deleteRegistration, reconnectBackoff)
+	if err != nil {
+		return err
+	}
+
+	return nil
 }
 
 func regGone(err error) bool {
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/docs/index.md ./tempSubmodule/docs/index.md
--- ./submoduleACME/docs/index.md	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/docs/index.md	2024-04-27 18:56:31.673178632 +0800
@@ -53,7 +53,7 @@
 terraform {
   required_providers {
     acme = {
-      source  = "vancluever/acme"
+      source  = "Kid-debug/acme"
       version = "~> 2.0"
     }
   }
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/docs/resources/certificate.md ./tempSubmodule/docs/resources/certificate.md
--- ./submoduleACME/docs/resources/certificate.md	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/docs/resources/certificate.md	2024-04-27 18:56:31.673178632 +0800
@@ -450,7 +450,7 @@
   to grant escalated network privileges to either Terraform (`setcap
   'cap_net_bind_service=+eip' "$(which terraform)"`), or the provider (`setcap
   'cap_net_bind_service=+ep'
-  .terraform/providers/registry.terraform.io/vancluever/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
+  .terraform/providers/registry.terraform.io/Kid-debug/acme/VERSION/ARCH/terraform-provider-acme_vVERSION`).
   Both have drawbacks: granting capabilites to Terraform itself will mean that
   Terraform core and any provider launched by it will also have the capability,
   while capabilities granted to the provider will be lost every time the
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/go.mod ./tempSubmodule/go.mod
--- ./submoduleACME/go.mod	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/go.mod	2024-04-27 18:56:36.213178586 +0800
@@ -1,11 +1,10 @@
-module github.com/vancluever/terraform-provider-acme/v2
+module github.com/Kid-debug/terraform-provider-acme/v2
 
-go 1.21
-
-toolchain go1.21.0
+go 1.21.0
 
 require (
 	github.com/BurntSushi/toml v1.3.2
+	github.com/cenkalti/backoff/v4 v4.2.1
 	github.com/davecgh/go-spew v1.1.1
 	github.com/go-acme/lego/v4 v4.16.1
 	github.com/google/go-cmp v0.6.0
@@ -67,8 +66,7 @@
 	github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect
 	github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect
 	github.com/aws/smithy-go v1.19.0 // indirect
-	github.com/boombuler/barcode v1.0.1 // indirect
-	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
+	github.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc // indirect
 	github.com/civo/civogo v0.3.11 // indirect
 	github.com/cloudflare/circl v1.3.7 // indirect
 	github.com/cloudflare/cloudflare-go v0.86.0 // indirect
@@ -123,7 +121,6 @@
 	github.com/json-iterator/go v1.1.12 // indirect
 	github.com/k0kubun/go-ansi v0.0.0-20180517002512-3bf9e2903213 // indirect
 	github.com/kolo/xmlrpc v0.0.0-20220921171641-a4b6fa1dd06b // indirect
-	github.com/kr/pretty v0.3.1 // indirect
 	github.com/kylelemons/godebug v1.1.0 // indirect
 	github.com/labbsr0x/bindman-dns-webhook v1.0.2 // indirect
 	github.com/labbsr0x/goh v1.0.1 // indirect
@@ -153,8 +150,7 @@
 	github.com/nrdcg/nodion v0.1.0 // indirect
 	github.com/nrdcg/porkbun v0.3.0 // indirect
 	github.com/nzdjb/go-metaname v1.0.0 // indirect
-	github.com/oklog/run v1.1.0 // indirect
-	github.com/onsi/gomega v1.27.10 // indirect
+	github.com/oklog/run v1.0.0 // indirect
 	github.com/oracle/oci-go-sdk v24.3.0+incompatible // indirect
 	github.com/ovh/go-ovh v1.4.3 // indirect
 	github.com/patrickmn/go-cache v2.1.0+incompatible // indirect
@@ -162,7 +158,6 @@
 	github.com/pkg/errors v0.9.1 // indirect
 	github.com/pmezard/go-difflib v1.0.0 // indirect
 	github.com/pquerna/otp v1.4.0 // indirect
-	github.com/rogpeppe/go-internal v1.11.0 // indirect
 	github.com/sacloud/api-client-go v0.2.8 // indirect
 	github.com/sacloud/go-http v0.1.6 // indirect
 	github.com/sacloud/iaas-api-go v1.11.1 // indirect
@@ -193,11 +188,11 @@
 	go.opentelemetry.io/otel/metric v1.22.0 // indirect
 	go.opentelemetry.io/otel/trace v1.22.0 // indirect
 	go.uber.org/ratelimit v0.2.0 // indirect
-	golang.org/x/crypto v0.21.0 // indirect
+	golang.org/x/crypto v0.19.0 // indirect
 	golang.org/x/mod v0.15.0 // indirect
-	golang.org/x/net v0.23.0 // indirect
+	golang.org/x/net v0.21.0 // indirect
 	golang.org/x/oauth2 v0.17.0 // indirect
-	golang.org/x/sys v0.18.0 // indirect
+	golang.org/x/sys v0.17.0 // indirect
 	golang.org/x/text v0.14.0 // indirect
 	golang.org/x/time v0.5.0 // indirect
 	golang.org/x/tools v0.17.0 // indirect
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/go.sum ./tempSubmodule/go.sum
--- ./submoduleACME/go.sum	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/go.sum	2024-04-27 18:56:36.213178586 +0800
@@ -133,9 +133,8 @@
 github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=
 github.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
 github.com/bketelsen/crypt v0.0.3-0.20200106085610-5cbc8cc4026c/go.mod h1:MKsuJmJgSg28kpZDP6UIiPt0e0Oz0kqKNGyRaWEPv84=
+github.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc h1:biVzkmvwrH8WK8raXaxBx6fRVTlJILwEwQGL1I/ByEI=
 github.com/boombuler/barcode v1.0.1-0.20190219062509-6c824513bacc/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=
-github.com/boombuler/barcode v1.0.1 h1:NDBbPmhS+EqABEs5Kg3n/5ZNjy73Pz7SIV+KCeqyXcs=
-github.com/boombuler/barcode v1.0.1/go.mod h1:paBWMcWSl3LHKBqUq+rly7CNSldXjb2rDl3JlRe0mD8=
 github.com/bufbuild/protocompile v0.4.0 h1:LbFKd2XowZvQ/kajzguUp2DC9UEIQhIq77fZZlaQsNA=
 github.com/bufbuild/protocompile v0.4.0/go.mod h1:3v93+mbWn/v3xzN+31nwkJfrEpAUwp+BagBSZWx+TP8=
 github.com/c-bata/go-prompt v0.2.5/go.mod h1:vFnjEGDIIA/Lib7giyE4E9c50Lvl8j0S+7FVlAwDAVw=
@@ -453,9 +452,8 @@
 github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
 github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
 github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
+github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
 github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
-github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
-github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
 github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
 github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
 github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
@@ -575,8 +573,8 @@
 github.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=
 github.com/nzdjb/go-metaname v1.0.0 h1:sNASlZC1RM3nSudtBTE1a3ZVTDyTpjqI5WXRPrdZ9Hg=
 github.com/nzdjb/go-metaname v1.0.0/go.mod h1:0GR0LshZax1Lz4VrOrfNSE4dGvTp7HGjiemdczXT2H4=
-github.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=
-github.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=
+github.com/oklog/run v1.0.0 h1:Ru7dDtJNOyC66gQ5dQmaCa0qIsAUFY3sFpK1Xk8igrw=
+github.com/oklog/run v1.0.0/go.mod h1:dlhp/R75TPv97u0XWUtDeV/lRKWPKSdTuV0TZvrmrQA=
 github.com/oklog/ulid v1.3.1/go.mod h1:CirwcVhetQ6Lv90oh/F+FBtV6XMibvdAFo93nm5qn4U=
 github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
 github.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=
@@ -588,9 +586,8 @@
 github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
 github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
 github.com/onsi/gomega v1.18.1/go.mod h1:0q+aL8jAiMXy9hbwj2mr5GziHiwhAIQpFmmtT5hitRs=
+github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=
 github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
-github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
-github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
 github.com/oracle/oci-go-sdk v24.3.0+incompatible h1:x4mcfb4agelf1O4/1/auGlZ1lr97jXRSSN5MxTgG/zU=
 github.com/oracle/oci-go-sdk v24.3.0+incompatible/go.mod h1:VQb79nF8Z2cwLkLS35ukwStZIg5F66tcBccjip/j888=
 github.com/ovh/go-ovh v1.4.3 h1:Gs3V823zwTFpzgGLZNI6ILS4rmxZgJwJCz54Er9LwD0=
@@ -639,9 +636,8 @@
 github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
 github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
 github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
-github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
-github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=
-github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=
+github.com/rogpeppe/go-internal v1.8.1 h1:geMPLpDpQOgVyCg5z5GoRwLHepNdb71NXb67XFkP+Eg=
+github.com/rogpeppe/go-internal v1.8.1/go.mod h1:JeRgkft04UBgHMgCIwADu4Pn6Mtm5d4nPKWu0nJ5d+o=
 github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
 github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
 github.com/sacloud/api-client-go v0.2.8 h1:tIY6PZNBX900K66TqEPa4d6UIbedUczfCBnPJkzi8kw=
@@ -791,8 +787,8 @@
 golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
 golang.org/x/crypto v0.6.0/go.mod h1:OFC/31mSvZgRz0V1QTNCzfAI1aIRzbiufJtkMIlEp58=
 golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=
-golang.org/x/crypto v0.21.0 h1:X31++rzVUdKhX5sWmSOFZxx8UW/ldWx55cbf08iNAMA=
-golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=
+golang.org/x/crypto v0.19.0 h1:ENy+Az/9Y1vSrlrvBSyna3PITt4tiZLf7sgCjZBX7Wo=
+golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
 golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
 golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
 golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
@@ -849,8 +845,8 @@
 golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
 golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
 golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=
-golang.org/x/net v0.23.0 h1:7EYJ93RZ9vYSZAIb2x3lnuvqO5zneoD6IvWjuhfxjTs=
-golang.org/x/net v0.23.0/go.mod h1:JKghWKKOSdJwpW2GEx0Ja7fmaKnMsbu+MWVZTokSYmg=
+golang.org/x/net v0.21.0 h1:AQyQV4dYCvJ7vGmJyKki9+PBdyvhkSd8EIx/qb0AYv4=
+golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
 golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
 golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
 golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
@@ -922,16 +918,16 @@
 golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=
-golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
+golang.org/x/sys v0.17.0 h1:25cE3gD+tdBA7lp7QfhuV+rJiE9YXTcS3VG1SqssI/Y=
+golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
 golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
 golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
 golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
 golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
 golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
 golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=
-golang.org/x/term v0.18.0 h1:FcHjZXDMxI8mM3nwhX9HlKop4C0YQvCVCdwYl2wOtE8=
-golang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=
+golang.org/x/term v0.17.0 h1:mkTF7LCd6WGJNL3K1Ad7kwxNfYAW6a8a8QqtMblp/4U=
+golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
 golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
 golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/main.go ./tempSubmodule/main.go
--- ./submoduleACME/main.go	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/main.go	2024-04-27 18:56:31.683178633 +0800
@@ -3,9 +3,9 @@
 import (
 	"os"
 
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme"
+	"github.com/Kid-debug/terraform-provider-acme/v2/acme/dnsplugin"
 	"github.com/hashicorp/terraform-plugin-sdk/v2/plugin"
-	"github.com/vancluever/terraform-provider-acme/v2/acme"
-	"github.com/vancluever/terraform-provider-acme/v2/acme/dnsplugin"
 )
 
 func main() {
diff -ruN '--exclude=.git/' '--exclude=.git' '--exclude=.git.' '--exclude=errorlist.go' ./submoduleACME/proto/dnsplugin/v1/dnsplugin.proto ./tempSubmodule/proto/dnsplugin/v1/dnsplugin.proto
--- ./submoduleACME/proto/dnsplugin/v1/dnsplugin.proto	2024-04-27 18:56:47.703178444 +0800
+++ ./tempSubmodule/proto/dnsplugin/v1/dnsplugin.proto	2024-04-27 18:56:31.683178633 +0800
@@ -4,10 +4,10 @@
 
 import "google/protobuf/duration.proto";
 
-option go_package = "github.com/vancluever/terraform-provider-acme/proto/dnsplugin/v1";
+option go_package = "github.com/Kid-debug/terraform-provider-acme/proto/dnsplugin/v1";
 
 // DNSProviderService is a protobuf wrapper for the acme DNS challenge API. This
-// is designed to be used to wrap an instance of DNS providers in 
+// is designed to be used to wrap an instance of DNS providers in
 service DNSProviderService {
   // Configure needs to be called to initialize the provider and set the
   // configuration.
